#GCT_CONTAINER_TYPES(name, type, ...) /** @hidden */ typedef void* name##_entry_t; /** @hidden */ typedef void* name##_root_t; typedef type name##_item_t;
#GCT_CONTAINER_KEY_TYPES(name, access, testalgo, ...)
#GCT_CONTAINER_KEY_FCNS(name, order, attr, prefix, keyid, ...)
#GCT_CONTAINER_ENTRY(name, declname)
#GCT_CONTAINER_NOLOCK_FCNS(name, attr, prefix, ...)
#GCT_CONTAINER_LOCK_FCNS(name, attr, prefix, lockname, ...)
#GCT_CONTAINER_FCNS(name, attr, prefix, ...)
#GCT_CONTAINER_PROTOTYPES(name, attr, prefix, ...)
#GCT_CONTAINER_KEY_PROTOTYPES(name, attr, prefix, keyid, ...)
#GCT_GCT_CONTAINER_ROOT_INITIALIZER(name)
#GCT_GCT_CONTAINER_ROOT_DECLARATOR(name, symbol)
#GCT_CONTAINER_FEATURE(name, test)
#GCT_CONTAINER_ALGO_FEATURE(algo, test)
#GCT_OBJECT_TYPE(name, type) typedef type name##_object_t;
#GCT_OBJECT_FCNS(name, attr, prefix, ...)
#GCT_OBJECT_INITIALIZER(name)
#GCT_OBJECT_PROTOTYPE(name, attr, prefix)
#GCT_OBJECT_CONSTRUCTOR(name) gpct_error_t name##_constructor(name##_object_t obj, va_list ap)
#GCT_OBJECT_DESTRUCTOR(name) void name##_destructor(name##_object_t obj)
#GCT_REFCOUNT(name, type, ...)
#GCT_REFCOUNT_ENTRY(name)
