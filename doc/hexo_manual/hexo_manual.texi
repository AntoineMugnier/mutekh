\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename hexo_manual.info
@settitle Hexo manual
@c %**end of header

@copying
This manual is for Hexo an exokernel for heterogeneous multiprocessor
systems, version 1.0.

Copyright @copyright{} 2006 Alexandre Becoulet.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with the Front-Cover texts being "A GNU Manual,"
and with the Back-Cover Texts as in (a) below.  A copy of the license
is included in the section entitled "GNU Free Documentation
License."

(a) The FSF's Back-Cover Text is: "You have freedom to copy and
modify this GNU Manual, like GNU software.  Copies published by the
Free Software Foundation raise funds for GNU development."
@end quotation
@end copying

@titlepage
@title Manual for Hexo
@subtitle exokernel for heterogeneous multiprocessor systems
@author Alexandre Becoulet

@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents
@paragraphindent none

@ifnottex
@node Top
@top Hexo

@insertcopying
@end ifnottex

@menu
* Copying::			Your rights and freedoms
* Introduction::		Hexo project description
* Hexo API::                    Read detailed API description
* Devices and drivers::         Learn about the way hexo handle devices
* Index::
@end menu

@node Copying
@chapter Copying

@node Introduction
@chapter Introduction

Hexo provides a set of functions to access processor and platform
related hardware resources. This hardware abstraction layer is useful
when dealing with highly portable operating system code in
heterogeneous environment.

Architecture dependant code found in other kernel project is design
for a specific processor running on a particular platform. Processor
dependant code and platform dependant code is split in the Hexo
project. This manual describes the Hexo API and explains which resources
are considered processor or platform dependant.

@node Hexo API
@chapter Hexo API

@menu
* Integer types::                       Use of integer types for heterogeneity and portability
* Endian and alignment::                General purpose endian swapping and alignment functions
* System startup::                      System intialization related functions
* Atomic integer access::               Atomic access to integer values
* Spinlocks::                           General purpose spin locks feature
* Memory allocation::                   Scalable memory allocator for single or multiple segments
* Processor and context local data::    Use processor local and context local storage
* IO Space access::                     Peripherals address space access
* Processor events::                    Manage hardware interrupts, exceptions and syscall events
* Processor specific features::         Other processor specific features
* Running contexts management::         Save and restore execution context
* Generic contexts scheduler::          Put context in running or user defined wait queues
@end menu

@include c_hexo_api.texi

@node Devices and drivers
@chapter Devices and drivers
@include c_device_drivers.texi

@node Index
@unnumbered Index

@printindex cp

@bye

