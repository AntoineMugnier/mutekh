/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs cdefs_use_reg_meask=1 cdefs_use_field_set=1                  \
     cdefs_use_field_get=1 reg_prefix=STM32 field_prefix=STM32                 \
     cdefs_use_field_mask=1 cdefs_use_field_setval=1
*/

#ifndef _EXTI_BFGEN_DEFS_
#define _EXTI_BFGEN_DEFS_

/** Interrupt mask register @multiple */
#define STM32_EXTI_IMR1_ADDR                         0x00000000
/** Interrupt Mask on line @multiple */
  #define STM32_EXTI_IMR1_IM_MASK                  0x00000001
  #define STM32_EXTI_IMR1_IM_COUNT                 32
  #define STM32_EXTI_IMR1_IM(fidx)                 (0x00000001 << ((fidx)))
  #define STM32_EXTI_IMR1_IM_SET(fidx, x, v)       do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_IMR1_IM_GET(fidx, x)          (((x) >> ((fidx) + 0)) & 0x1)

/** Event mask register @multiple */
#define STM32_EXTI_EMR1_ADDR                         0x00000004
/** Event Mask on line @multiple */
  #define STM32_EXTI_EMR1_EM_MASK                  0x00000001
  #define STM32_EXTI_EMR1_EM_COUNT                 32
  #define STM32_EXTI_EMR1_EM(fidx)                 (0x00000001 << ((fidx)))
  #define STM32_EXTI_EMR1_EM_SET(fidx, x, v)       do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_EMR1_EM_GET(fidx, x)          (((x) >> ((fidx) + 0)) & 0x1)

/** Rising Trigger selection register @multiple */
#define STM32_EXTI_RTSR1_ADDR                        0x00000008
/** Rising trigger event configuration of line @multiple */
  #define STM32_EXTI_RTSR1_RT_MASK                 0x00000001
  #define STM32_EXTI_RTSR1_RT_COUNT                23
  #define STM32_EXTI_RTSR1_RT(fidx)                (0x00000001 << ((fidx)))
  #define STM32_EXTI_RTSR1_RT_SET(fidx, x, v)      do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_RTSR1_RT_GET(fidx, x)         (((x) >> ((fidx) + 0)) & 0x1)

/** Falling Trigger selection register @multiple */
#define STM32_EXTI_FTSR1_ADDR                        0x0000000c
/** Falling trigger event configuration of line @multiple */
  #define STM32_EXTI_FTSR1_FT_MASK                 0x00000001
  #define STM32_EXTI_FTSR1_FT_COUNT                23
  #define STM32_EXTI_FTSR1_FT(fidx)                (0x00000001 << ((fidx)))
  #define STM32_EXTI_FTSR1_FT_SET(fidx, x, v)      do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_FTSR1_FT_GET(fidx, x)         (((x) >> ((fidx) + 0)) & 0x1)

/** Software interrupt event register @multiple */
#define STM32_EXTI_SWIER1_ADDR                       0x00000010
/** Software Interrupt on line @multiple */
  #define STM32_EXTI_SWIER1_SWIER_MASK             0x00000001
  #define STM32_EXTI_SWIER1_SWIER_COUNT            23
  #define STM32_EXTI_SWIER1_SWIER(fidx)            (0x00000001 << ((fidx)))
  #define STM32_EXTI_SWIER1_SWIER_SET(fidx, x, v)  do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_SWIER1_SWIER_GET(fidx, x)     (((x) >> ((fidx) + 0)) & 0x1)

/** Pending register @multiple */
#define STM32_EXTI_PR1_ADDR                          0x00000014
/** Pending bit @multiple */
  #define STM32_EXTI_PR1_PR_MASK                   0x00000001
  #define STM32_EXTI_PR1_PR_COUNT                  23
  #define STM32_EXTI_PR1_PR(fidx)                  (0x00000001 << ((fidx)))
  #define STM32_EXTI_PR1_PR_SET(fidx, x, v)        do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_PR1_PR_GET(fidx, x)           (((x) >> ((fidx) + 0)) & 0x1)

/** Interrupt mask register @multiple */
#define STM32_EXTI_IMR2_ADDR                         0x00000020
/** Interrupt Mask on external/internal line @multiple */
  #define STM32_EXTI_IMR2_IM_MASK                  0x00000001
  #define STM32_EXTI_IMR2_IM_COUNT                 8
  #define STM32_EXTI_IMR2_IM(fidx)                 (0x00000001 << ((fidx)))
  #define STM32_EXTI_IMR2_IM_SET(fidx, x, v)       do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_IMR2_IM_GET(fidx, x)          (((x) >> ((fidx) + 0)) & 0x1)

/** Event mask register @multiple */
#define STM32_EXTI_EMR2_ADDR                         0x00000024
/** Event mask on external/internal line @multiple */
  #define STM32_EXTI_EMR2_EM_MASK                  0x00000001
  #define STM32_EXTI_EMR2_EM_COUNT                 8
  #define STM32_EXTI_EMR2_EM(fidx)                 (0x00000001 << ((fidx)))
  #define STM32_EXTI_EMR2_EM_SET(fidx, x, v)       do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_EMR2_EM_GET(fidx, x)          (((x) >> ((fidx) + 0)) & 0x1)

/** Rising Trigger selection register @multiple */
#define STM32_EXTI_RTSR2_ADDR                        0x00000028
/** Rising trigger event configuration bit of line @multiple */
  #define STM32_EXTI_RTSR2_RT_MASK                 0x00000001
  #define STM32_EXTI_RTSR2_RT_COUNT                4
  #define STM32_EXTI_RTSR2_RT(fidx)                (0x00000008 << ((fidx)))
  #define STM32_EXTI_RTSR2_RT_SET(fidx, x, v)      do { (x) = (((x) & ~(0x8 << ((fidx)))) | ((v) << ((fidx) + 3))); } while(0)
  #define STM32_EXTI_RTSR2_RT_GET(fidx, x)         (((x) >> ((fidx) + 3)) & 0x1)

/** Falling Trigger selection register @multiple */
#define STM32_EXTI_FTSR2_ADDR                        0x0000002c
/** Falling trigger event configuration bit of line @multiple */
  #define STM32_EXTI_FTSR2_FT_MASK                 0x00000001
  #define STM32_EXTI_FTSR2_FT_COUNT                4
  #define STM32_EXTI_FTSR2_FT(fidx)                (0x00000008 << ((fidx)))
  #define STM32_EXTI_FTSR2_FT_SET(fidx, x, v)      do { (x) = (((x) & ~(0x8 << ((fidx)))) | ((v) << ((fidx) + 3))); } while(0)
  #define STM32_EXTI_FTSR2_FT_GET(fidx, x)         (((x) >> ((fidx) + 3)) & 0x1)

/** Software interrupt event register @multiple */
#define STM32_EXTI_SWIER2_ADDR                       0x00000030
/** Software interrupt on line @multiple */
  #define STM32_EXTI_SWIER2_SWI_MASK               0x00000001
  #define STM32_EXTI_SWIER2_SWI_COUNT              4
  #define STM32_EXTI_SWIER2_SWI(fidx)              (0x00000008 << ((fidx)))
  #define STM32_EXTI_SWIER2_SWI_SET(fidx, x, v)    do { (x) = (((x) & ~(0x8 << ((fidx)))) | ((v) << ((fidx) + 3))); } while(0)
  #define STM32_EXTI_SWIER2_SWI_GET(fidx, x)       (((x) >> ((fidx) + 3)) & 0x1)

/** Pending register @multiple */
#define STM32_EXTI_PR2_ADDR                          0x00000034
/** Pending interrupt flag on line @multiple */
  #define STM32_EXTI_PR2_PIF_MASK                  0x00000001
  #define STM32_EXTI_PR2_PIF_COUNT                 4
  #define STM32_EXTI_PR2_PIF(fidx)                 (0x00000008 << ((fidx)))
  #define STM32_EXTI_PR2_PIF_SET(fidx, x, v)       do { (x) = (((x) & ~(0x8 << ((fidx)))) | ((v) << ((fidx) + 3))); } while(0)
  #define STM32_EXTI_PR2_PIF_GET(fidx, x)          (((x) >> ((fidx) + 3)) & 0x1)

#endif

