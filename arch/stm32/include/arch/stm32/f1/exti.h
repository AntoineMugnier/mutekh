/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs cdefs_use_reg_meask=1 cdefs_use_field_set=1                  \
     cdefs_use_field_get=1 reg_prefix=STM32 field_prefix=STM32                 \
     cdefs_use_field_mask=1 cdefs_use_field_setval=1
*/

#ifndef _EXTI_BFGEN_DEFS_
#define _EXTI_BFGEN_DEFS_

/** Interrupt mask register (EXTI_IMR) @multiple */
#define STM32_EXTI_IMR_ADDR                          0x00000000
/** Interrupt Mask on line @multiple */
  #define STM32_EXTI_IMR_MR_MASK                   0x00000001
  #define STM32_EXTI_IMR_MR_COUNT                  19
  #define STM32_EXTI_IMR_MR(fidx)                  (0x00000001 << ((fidx)))
  #define STM32_EXTI_IMR_MR_SET(fidx, x, v)        do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_IMR_MR_GET(fidx, x)           (((x) >> ((fidx) + 0)) & 0x1)

/** Event mask register (EXTI_EMR) @multiple */
#define STM32_EXTI_EMR_ADDR                          0x00000004
/** Event Mask on line 0 @multiple */
  #define STM32_EXTI_EMR_MR_MASK                   0x00000001
  #define STM32_EXTI_EMR_MR_COUNT                  19
  #define STM32_EXTI_EMR_MR(fidx)                  (0x00000001 << ((fidx)))
  #define STM32_EXTI_EMR_MR_SET(fidx, x, v)        do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_EMR_MR_GET(fidx, x)           (((x) >> ((fidx) + 0)) & 0x1)

/** Rising Trigger selection register (EXTI_RTSR) @multiple */
#define STM32_EXTI_RTSR_ADDR                         0x00000008
/** Rising trigger event configuration of @multiple */
  #define STM32_EXTI_RTSR_TR_MASK                  0x00000001
  #define STM32_EXTI_RTSR_TR_COUNT                 19
  #define STM32_EXTI_RTSR_TR(fidx)                 (0x00000001 << ((fidx)))
  #define STM32_EXTI_RTSR_TR_SET(fidx, x, v)       do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_RTSR_TR_GET(fidx, x)          (((x) >> ((fidx) + 0)) & 0x1)

/** Falling Trigger selection register (EXTI_FTSR) @multiple */
#define STM32_EXTI_FTSR_ADDR                         0x0000000c
/** Falling trigger event configuration of line @multiple */
  #define STM32_EXTI_FTSR_TR_MASK                  0x00000001
  #define STM32_EXTI_FTSR_TR_COUNT                 19
  #define STM32_EXTI_FTSR_TR(fidx)                 (0x00000001 << ((fidx)))
  #define STM32_EXTI_FTSR_TR_SET(fidx, x, v)       do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_FTSR_TR_GET(fidx, x)          (((x) >> ((fidx) + 0)) & 0x1)

/** Software interrupt event register (EXTI_SWIER) @multiple */
#define STM32_EXTI_SWIER_ADDR                        0x00000010
/** Software Interrupt on line @multiple */
  #define STM32_EXTI_SWIER_SWIER_MASK              0x00000001
  #define STM32_EXTI_SWIER_SWIER_COUNT             19
  #define STM32_EXTI_SWIER_SWIER(fidx)             (0x00000001 << ((fidx)))
  #define STM32_EXTI_SWIER_SWIER_SET(fidx, x, v)   do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_SWIER_SWIER_GET(fidx, x)      (((x) >> ((fidx) + 0)) & 0x1)

/** Pending register (EXTI_PR) @multiple */
#define STM32_EXTI_PR_ADDR                           0x00000014
/** Pending bit @multiple */
  #define STM32_EXTI_PR_PR_MASK                    0x00000001
  #define STM32_EXTI_PR_PR_COUNT                   19
  #define STM32_EXTI_PR_PR(fidx)                   (0x00000001 << ((fidx)))
  #define STM32_EXTI_PR_PR_SET(fidx, x, v)         do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define STM32_EXTI_PR_PR_GET(fidx, x)            (((x) >> ((fidx) + 0)) & 0x1)

#endif

