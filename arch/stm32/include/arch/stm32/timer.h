/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs cdefs_use_reg_mask=1 cdefs_use_field_set=1 reg_prefix=STM32  \
     field_prefix=STM32 cdefs_use_field_mask=1 cdefs_use_field_get=1
*/

#ifndef _TIMER_BFGEN_DEFS_
#define _TIMER_BFGEN_DEFS_

#define STM32_TIMER_CR1_ADDR                         0x00000000
#define STM32_TIMER_CR1_MASK                         0x000003ff
  #define STM32_TIMER_CR1_CEN_MASK                 0x00000001
  #define STM32_TIMER_CR1_CEN                      0x00000001
  #define STM32_TIMER_CR1_CEN_SET(x, v)            do { (x) = (((x) & ~0x1) | ((v) << 0)); } while(0)
  #define STM32_TIMER_CR1_CEN_GET(x)               (((x) >> 0) & 0x1)
  #define STM32_TIMER_CR1_UDIS_MASK                0x00000001
  #define STM32_TIMER_CR1_UDIS                     0x00000002
  #define STM32_TIMER_CR1_UDIS_SET(x, v)           do { (x) = (((x) & ~0x2) | ((v) << 1)); } while(0)
  #define STM32_TIMER_CR1_UDIS_GET(x)              (((x) >> 1) & 0x1)
  #define STM32_TIMER_CR1_URS_MASK                 0x00000001
  #define STM32_TIMER_CR1_URS                      0x00000004
  #define STM32_TIMER_CR1_URS_SET(x, v)            do { (x) = (((x) & ~0x4) | ((v) << 2)); } while(0)
  #define STM32_TIMER_CR1_URS_GET(x)               (((x) >> 2) & 0x1)
  #define STM32_TIMER_CR1_OPM_MASK                 0x00000001
  #define STM32_TIMER_CR1_OPM                      0x00000008
  #define STM32_TIMER_CR1_OPM_SET(x, v)            do { (x) = (((x) & ~0x8) | ((v) << 3)); } while(0)
  #define STM32_TIMER_CR1_OPM_GET(x)               (((x) >> 3) & 0x1)
  #define STM32_TIMER_CR1_DIR_MASK                 0x00000001
  #define STM32_TIMER_CR1_DIR                      0x00000010
  #define STM32_TIMER_CR1_DIR_SET(x, v)            do { (x) = (((x) & ~0x10) | ((v) << 4)); } while(0)
  #define STM32_TIMER_CR1_DIR_GET(x)               (((x) >> 4) & 0x1)
  #define STM32_TIMER_CR1_CMS_MASK                 0x00000003
  #define STM32_TIMER_CR1_CMS(v)                   ((STM32_TIMER_CR1_CMS_##v) << 5)
  #define STM32_TIMER_CR1_CMS_SET(x, v)            do { (x) = (((x) & ~0x60) | ((STM32_TIMER_CR1_CMS_##v) << 5)); } while(0)
  #define STM32_TIMER_CR1_CMS_GET(x)               (((x) >> 5) & 0x3)
    #define STM32_TIMER_CR1_CMS_EDGE_ALIGNED_MODE    0x00000000
    #define STM32_TIMER_CR1_CMS_CENTER_ALIGNED_MODE_1 0x00000001
    #define STM32_TIMER_CR1_CMS_CENTER_ALIGNED_MODE_2 0x00000002
    #define STM32_TIMER_CR1_CMS_CENTER_ALIGNED_MODE_3 0x00000003
  #define STM32_TIMER_CR1_ARPE_MASK                0x00000001
  #define STM32_TIMER_CR1_ARPE                     0x00000080
  #define STM32_TIMER_CR1_ARPE_SET(x, v)           do { (x) = (((x) & ~0x80) | ((v) << 7)); } while(0)
  #define STM32_TIMER_CR1_ARPE_GET(x)              (((x) >> 7) & 0x1)
  #define STM32_TIMER_CR1_CKD_MASK                 0x00000003
  #define STM32_TIMER_CR1_CKD(v)                   ((STM32_TIMER_CR1_CKD_##v) << 8)
  #define STM32_TIMER_CR1_CKD_SET(x, v)            do { (x) = (((x) & ~0x300) | ((STM32_TIMER_CR1_CKD_##v) << 8)); } while(0)
  #define STM32_TIMER_CR1_CKD_GET(x)               (((x) >> 8) & 0x3)
    #define STM32_TIMER_CR1_CKD_NO_DIV               0x00000000
    #define STM32_TIMER_CR1_CKD_DIV_2                0x00000001
    #define STM32_TIMER_CR1_CKD_DIV_4                0x00000002

#define STM32_TIMER_CR2_ADDR                         0x00000004
#define STM32_TIMER_CR2_MASK                         0x0000fffd
  #define STM32_TIMER_CR2_CCPC_MASK                0x00000001
  #define STM32_TIMER_CR2_CCPC                     0x00000001
  #define STM32_TIMER_CR2_CCPC_SET(x, v)           do { (x) = (((x) & ~0x1) | ((v) << 0)); } while(0)
  #define STM32_TIMER_CR2_CCPC_GET(x)              (((x) >> 0) & 0x1)
  #define STM32_TIMER_CR2_CCUS_MASK                0x00000001
  #define STM32_TIMER_CR2_CCUS                     0x00000004
  #define STM32_TIMER_CR2_CCUS_SET(x, v)           do { (x) = (((x) & ~0x4) | ((v) << 2)); } while(0)
  #define STM32_TIMER_CR2_CCUS_GET(x)              (((x) >> 2) & 0x1)
  #define STM32_TIMER_CR2_CCDS_MASK                0x00000001
  #define STM32_TIMER_CR2_CCDS                     0x00000008
  #define STM32_TIMER_CR2_CCDS_SET(x, v)           do { (x) = (((x) & ~0x8) | ((v) << 3)); } while(0)
  #define STM32_TIMER_CR2_CCDS_GET(x)              (((x) >> 3) & 0x1)
  #define STM32_TIMER_CR2_MMS_MASK                 0x00000007
  #define STM32_TIMER_CR2_MMS(v)                   ((STM32_TIMER_CR2_MMS_##v) << 4)
  #define STM32_TIMER_CR2_MMS_SET(x, v)            do { (x) = (((x) & ~0x70) | ((STM32_TIMER_CR2_MMS_##v) << 4)); } while(0)
  #define STM32_TIMER_CR2_MMS_GET(x)               (((x) >> 4) & 0x7)
    #define STM32_TIMER_CR2_MMS_RESET                0x00000000
    #define STM32_TIMER_CR2_MMS_ENABLE               0x00000001
    #define STM32_TIMER_CR2_MMS_UPDATE               0x00000002
    #define STM32_TIMER_CR2_MMS_COMPARE_PULSE        0x00000003
    #define STM32_TIMER_CR2_MMS_COMPARE_OC1REF       0x00000004
    #define STM32_TIMER_CR2_MMS_COMPARE_OC2REF       0x00000005
    #define STM32_TIMER_CR2_MMS_COMPARE_OC3REF       0x00000006
    #define STM32_TIMER_CR2_MMS_COMPARE_OC4REF       0x00000007
  #define STM32_TIMER_CR2_TI1S_MASK                0x00000001
  #define STM32_TIMER_CR2_TI1S                     0x00000080
  #define STM32_TIMER_CR2_TI1S_SET(x, v)           do { (x) = (((x) & ~0x80) | ((v) << 7)); } while(0)
  #define STM32_TIMER_CR2_TI1S_GET(x)              (((x) >> 7) & 0x1)
  #define STM32_TIMER_CR2_OIS1_MASK                0x00000001
  #define STM32_TIMER_CR2_OIS1                     0x00000100
  #define STM32_TIMER_CR2_OIS1_SET(x, v)           do { (x) = (((x) & ~0x100) | ((v) << 8)); } while(0)
  #define STM32_TIMER_CR2_OIS1_GET(x)              (((x) >> 8) & 0x1)
  #define STM32_TIMER_CR2_OIS1N_MASK               0x00000001
  #define STM32_TIMER_CR2_OIS1N                    0x00000200
  #define STM32_TIMER_CR2_OIS1N_SET(x, v)          do { (x) = (((x) & ~0x200) | ((v) << 9)); } while(0)
  #define STM32_TIMER_CR2_OIS1N_GET(x)             (((x) >> 9) & 0x1)
  #define STM32_TIMER_CR2_OIS2_MASK                0x00000001
  #define STM32_TIMER_CR2_OIS2                     0x00000400
  #define STM32_TIMER_CR2_OIS2_SET(x, v)           do { (x) = (((x) & ~0x400) | ((v) << 10)); } while(0)
  #define STM32_TIMER_CR2_OIS2_GET(x)              (((x) >> 10) & 0x1)
  #define STM32_TIMER_CR2_OIS2N_MASK               0x00000001
  #define STM32_TIMER_CR2_OIS2N                    0x00000800
  #define STM32_TIMER_CR2_OIS2N_SET(x, v)          do { (x) = (((x) & ~0x800) | ((v) << 11)); } while(0)
  #define STM32_TIMER_CR2_OIS2N_GET(x)             (((x) >> 11) & 0x1)
  #define STM32_TIMER_CR2_OIS3_MASK                0x00000001
  #define STM32_TIMER_CR2_OIS3                     0x00001000
  #define STM32_TIMER_CR2_OIS3_SET(x, v)           do { (x) = (((x) & ~0x1000) | ((v) << 12)); } while(0)
  #define STM32_TIMER_CR2_OIS3_GET(x)              (((x) >> 12) & 0x1)
  #define STM32_TIMER_CR2_OIS3N_MASK               0x00000001
  #define STM32_TIMER_CR2_OIS3N                    0x00002000
  #define STM32_TIMER_CR2_OIS3N_SET(x, v)          do { (x) = (((x) & ~0x2000) | ((v) << 13)); } while(0)
  #define STM32_TIMER_CR2_OIS3N_GET(x)             (((x) >> 13) & 0x1)
  #define STM32_TIMER_CR2_OIS4_MASK                0x00000001
  #define STM32_TIMER_CR2_OIS4                     0x00004000
  #define STM32_TIMER_CR2_OIS4_SET(x, v)           do { (x) = (((x) & ~0x4000) | ((v) << 14)); } while(0)
  #define STM32_TIMER_CR2_OIS4_GET(x)              (((x) >> 14) & 0x1)
  #define STM32_TIMER_CR2_OIS4N_MASK               0x00000001
  #define STM32_TIMER_CR2_OIS4N                    0x00008000
  #define STM32_TIMER_CR2_OIS4N_SET(x, v)          do { (x) = (((x) & ~0x8000) | ((v) << 15)); } while(0)
  #define STM32_TIMER_CR2_OIS4N_GET(x)             (((x) >> 15) & 0x1)

#define STM32_TIMER_SMCR_ADDR                        0x00000008
#define STM32_TIMER_SMCR_MASK                        0x0000fff7
  #define STM32_TIMER_SMCR_SMS_MASK                0x00000007
  #define STM32_TIMER_SMCR_SMS(v)                  ((STM32_TIMER_SMCR_SMS_##v) << 0)
  #define STM32_TIMER_SMCR_SMS_SET(x, v)           do { (x) = (((x) & ~0x7) | ((STM32_TIMER_SMCR_SMS_##v) << 0)); } while(0)
  #define STM32_TIMER_SMCR_SMS_GET(x)              (((x) >> 0) & 0x7)
    #define STM32_TIMER_SMCR_SMS_DISABLED            0x00000000
    #define STM32_TIMER_SMCR_SMS_ENCODER_MODE_1      0x00000001
    #define STM32_TIMER_SMCR_SMS_ENCODER_MODE_2      0x00000002
    #define STM32_TIMER_SMCR_SMS_ENCODER_MODE_3      0x00000003
    #define STM32_TIMER_SMCR_SMS_RESET_MODE          0x00000004
    #define STM32_TIMER_SMCR_SMS_GATED_MODE          0x00000005
    #define STM32_TIMER_SMCR_SMS_TRIGGER_MODE        0x00000006
    #define STM32_TIMER_SMCR_SMS_EXTERNAL_CLOCK_MODE_1 0x00000007
  #define STM32_TIMER_SMCR_TS_MASK                 0x00000007
  #define STM32_TIMER_SMCR_TS(v)                   ((STM32_TIMER_SMCR_TS_##v) << 4)
  #define STM32_TIMER_SMCR_TS_SET(x, v)            do { (x) = (((x) & ~0x70) | ((STM32_TIMER_SMCR_TS_##v) << 4)); } while(0)
  #define STM32_TIMER_SMCR_TS_GET(x)               (((x) >> 4) & 0x7)
    #define STM32_TIMER_SMCR_TS_INTERNAL_TRIGGER_0   0x00000000
    #define STM32_TIMER_SMCR_TS_INTERNAL_TRIGGER_1   0x00000001
    #define STM32_TIMER_SMCR_TS_INTERNAL_TRIGGER_2   0x00000002
    #define STM32_TIMER_SMCR_TS_INTERNAL_TRIGGER_3   0x00000003
    #define STM32_TIMER_SMCR_TS_TI1_EDGE_DETECTOR    0x00000004
    #define STM32_TIMER_SMCR_TS_FILTERED_TIMER_INPUT_1 0x00000005
    #define STM32_TIMER_SMCR_TS_FILTERED_TIMER_INPUT_2 0x00000006
    #define STM32_TIMER_SMCR_TS_EXTERNAL_TRIGGER_INPUT 0x00000007
  #define STM32_TIMER_SMCR_MSM_MASK                0x00000001
  #define STM32_TIMER_SMCR_MSM                     0x00000080
  #define STM32_TIMER_SMCR_MSM_SET(x, v)           do { (x) = (((x) & ~0x80) | ((v) << 7)); } while(0)
  #define STM32_TIMER_SMCR_MSM_GET(x)              (((x) >> 7) & 0x1)
  #define STM32_TIMER_SMCR_ETF_MASK                0x0000000f
  #define STM32_TIMER_SMCR_ETF(v)                  ((v) << 8)
  #define STM32_TIMER_SMCR_ETF_SET(x, v)           do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define STM32_TIMER_SMCR_ETF_GET(x)              (((x) >> 8) & 0xf)
  #define STM32_TIMER_SMCR_ETPS_MASK               0x00000003
  #define STM32_TIMER_SMCR_ETPS(v)                 ((v) << 12)
  #define STM32_TIMER_SMCR_ETPS_SET(x, v)          do { (x) = (((x) & ~0x3000) | ((v) << 12)); } while(0)
  #define STM32_TIMER_SMCR_ETPS_GET(x)             (((x) >> 12) & 0x3)
  #define STM32_TIMER_SMCR_ECE_MASK                0x00000001
  #define STM32_TIMER_SMCR_ECE                     0x00004000
  #define STM32_TIMER_SMCR_ECE_SET(x, v)           do { (x) = (((x) & ~0x4000) | ((v) << 14)); } while(0)
  #define STM32_TIMER_SMCR_ECE_GET(x)              (((x) >> 14) & 0x1)
  #define STM32_TIMER_SMCR_ETP_MASK                0x00000001
  #define STM32_TIMER_SMCR_ETP                     0x00008000
  #define STM32_TIMER_SMCR_ETP_SET(x, v)           do { (x) = (((x) & ~0x8000) | ((v) << 15)); } while(0)
  #define STM32_TIMER_SMCR_ETP_GET(x)              (((x) >> 15) & 0x1)

#define STM32_TIMER_DIER_ADDR                        0x0000000c
#define STM32_TIMER_DIER_MASK                        0x000003ff
  #define STM32_TIMER_DIER_UIE_MASK                0x00000001
  #define STM32_TIMER_DIER_UIE                     0x00000001
  #define STM32_TIMER_DIER_UIE_SET(x, v)           do { (x) = (((x) & ~0x1) | ((v) << 0)); } while(0)
  #define STM32_TIMER_DIER_UIE_GET(x)              (((x) >> 0) & 0x1)
  #define STM32_TIMER_DIER_CCIE_MASK               0x00000001
  #define STM32_TIMER_DIER_CCIE_COUNT              4
  #define STM32_TIMER_DIER_CCIE(fidx)              (0x00000002 << ((fidx)))
  #define STM32_TIMER_DIER_CCIE_SET(fidx, x, v)    do { (x) = (((x) & ~(0x2 << ((fidx)))) | ((v) << ((fidx) + 1))); } while(0)
  #define STM32_TIMER_DIER_CCIE_GET(fidx, x)       (((x) >> ((fidx) + 1)) & 0x1)
  #define STM32_TIMER_DIER_COMIE_MASK              0x00000001
  #define STM32_TIMER_DIER_COMIE                   0x00000004
  #define STM32_TIMER_DIER_COMIE_SET(x, v)         do { (x) = (((x) & ~0x4) | ((v) << 2)); } while(0)
  #define STM32_TIMER_DIER_COMIE_GET(x)            (((x) >> 2) & 0x1)
  #define STM32_TIMER_DIER_TIE_MASK                0x00000001
  #define STM32_TIMER_DIER_TIE                     0x00000008
  #define STM32_TIMER_DIER_TIE_SET(x, v)           do { (x) = (((x) & ~0x8) | ((v) << 3)); } while(0)
  #define STM32_TIMER_DIER_TIE_GET(x)              (((x) >> 3) & 0x1)
  #define STM32_TIMER_DIER_BIE_MASK                0x00000001
  #define STM32_TIMER_DIER_BIE                     0x00000010
  #define STM32_TIMER_DIER_BIE_SET(x, v)           do { (x) = (((x) & ~0x10) | ((v) << 4)); } while(0)
  #define STM32_TIMER_DIER_BIE_GET(x)              (((x) >> 4) & 0x1)
  #define STM32_TIMER_DIER_UDE_MASK                0x00000001
  #define STM32_TIMER_DIER_UDE                     0x00000020
  #define STM32_TIMER_DIER_UDE_SET(x, v)           do { (x) = (((x) & ~0x20) | ((v) << 5)); } while(0)
  #define STM32_TIMER_DIER_UDE_GET(x)              (((x) >> 5) & 0x1)
  #define STM32_TIMER_DIER_CCDE_MASK               0x00000001
  #define STM32_TIMER_DIER_CCDE_COUNT              4
  #define STM32_TIMER_DIER_CCDE(fidx)              (0x00000040 << ((fidx)))
  #define STM32_TIMER_DIER_CCDE_SET(fidx, x, v)    do { (x) = (((x) & ~(0x40 << ((fidx)))) | ((v) << ((fidx) + 6))); } while(0)
  #define STM32_TIMER_DIER_CCDE_GET(fidx, x)       (((x) >> ((fidx) + 6)) & 0x1)
  #define STM32_TIMER_DIER_COMDE_MASK              0x00000001
  #define STM32_TIMER_DIER_COMDE                   0x00000080
  #define STM32_TIMER_DIER_COMDE_SET(x, v)         do { (x) = (((x) & ~0x80) | ((v) << 7)); } while(0)
  #define STM32_TIMER_DIER_COMDE_GET(x)            (((x) >> 7) & 0x1)
  #define STM32_TIMER_DIER_TDE_MASK                0x00000001
  #define STM32_TIMER_DIER_TDE                     0x00000100
  #define STM32_TIMER_DIER_TDE_SET(x, v)           do { (x) = (((x) & ~0x100) | ((v) << 8)); } while(0)
  #define STM32_TIMER_DIER_TDE_GET(x)              (((x) >> 8) & 0x1)

#define STM32_TIMER_SR_ADDR                          0x00000010
#define STM32_TIMER_SR_MASK                          0x000003df
  #define STM32_TIMER_SR_UIF_MASK                  0x00000001
  #define STM32_TIMER_SR_UIF                       0x00000001
  #define STM32_TIMER_SR_UIF_SET(x, v)             do { (x) = (((x) & ~0x1) | ((v) << 0)); } while(0)
  #define STM32_TIMER_SR_UIF_GET(x)                (((x) >> 0) & 0x1)
  #define STM32_TIMER_SR_CCIF_MASK                 0x00000001
  #define STM32_TIMER_SR_CCIF_COUNT                4
  #define STM32_TIMER_SR_CCIF(fidx)                (0x00000002 << ((fidx)))
  #define STM32_TIMER_SR_CCIF_SET(fidx, x, v)      do { (x) = (((x) & ~(0x2 << ((fidx)))) | ((v) << ((fidx) + 1))); } while(0)
  #define STM32_TIMER_SR_CCIF_GET(fidx, x)         (((x) >> ((fidx) + 1)) & 0x1)
  #define STM32_TIMER_SR_COMIF_MASK                0x00000001
  #define STM32_TIMER_SR_COMIF                     0x00000004
  #define STM32_TIMER_SR_COMIF_SET(x, v)           do { (x) = (((x) & ~0x4) | ((v) << 2)); } while(0)
  #define STM32_TIMER_SR_COMIF_GET(x)              (((x) >> 2) & 0x1)
  #define STM32_TIMER_SR_TIF_MASK                  0x00000001
  #define STM32_TIMER_SR_TIF                       0x00000008
  #define STM32_TIMER_SR_TIF_SET(x, v)             do { (x) = (((x) & ~0x8) | ((v) << 3)); } while(0)
  #define STM32_TIMER_SR_TIF_GET(x)                (((x) >> 3) & 0x1)
  #define STM32_TIMER_SR_BIF_MASK                  0x00000001
  #define STM32_TIMER_SR_BIF                       0x00000010
  #define STM32_TIMER_SR_BIF_SET(x, v)             do { (x) = (((x) & ~0x10) | ((v) << 4)); } while(0)
  #define STM32_TIMER_SR_BIF_GET(x)                (((x) >> 4) & 0x1)
  #define STM32_TIMER_SR_CCOF_MASK                 0x00000001
  #define STM32_TIMER_SR_CCOF_COUNT                4
  #define STM32_TIMER_SR_CCOF(fidx)                (0x00000040 << ((fidx)))
  #define STM32_TIMER_SR_CCOF_SET(fidx, x, v)      do { (x) = (((x) & ~(0x40 << ((fidx)))) | ((v) << ((fidx) + 6))); } while(0)
  #define STM32_TIMER_SR_CCOF_GET(fidx, x)         (((x) >> ((fidx) + 6)) & 0x1)

#define STM32_TIMER_EGR_ADDR                         0x00000014
#define STM32_TIMER_EGR_MASK                         0x0000001f
  #define STM32_TIMER_EGR_UG_MASK                  0x00000001
  #define STM32_TIMER_EGR_UG                       0x00000001
  #define STM32_TIMER_EGR_UG_SET(x, v)             do { (x) = (((x) & ~0x1) | ((v) << 0)); } while(0)
  #define STM32_TIMER_EGR_UG_GET(x)                (((x) >> 0) & 0x1)
  #define STM32_TIMER_EGR_CCG_MASK                 0x00000001
  #define STM32_TIMER_EGR_CCG_COUNT                4
  #define STM32_TIMER_EGR_CCG(fidx)                (0x00000002 << ((fidx)))
  #define STM32_TIMER_EGR_CCG_SET(fidx, x, v)      do { (x) = (((x) & ~(0x2 << ((fidx)))) | ((v) << ((fidx) + 1))); } while(0)
  #define STM32_TIMER_EGR_CCG_GET(fidx, x)         (((x) >> ((fidx) + 1)) & 0x1)
  #define STM32_TIMER_EGR_COMG_MASK                0x00000001
  #define STM32_TIMER_EGR_COMG                     0x00000004
  #define STM32_TIMER_EGR_COMG_SET(x, v)           do { (x) = (((x) & ~0x4) | ((v) << 2)); } while(0)
  #define STM32_TIMER_EGR_COMG_GET(x)              (((x) >> 2) & 0x1)
  #define STM32_TIMER_EGR_TG_MASK                  0x00000001
  #define STM32_TIMER_EGR_TG                       0x00000008
  #define STM32_TIMER_EGR_TG_SET(x, v)             do { (x) = (((x) & ~0x8) | ((v) << 3)); } while(0)
  #define STM32_TIMER_EGR_TG_GET(x)                (((x) >> 3) & 0x1)
  #define STM32_TIMER_EGR_BG_MASK                  0x00000001
  #define STM32_TIMER_EGR_BG                       0x00000010
  #define STM32_TIMER_EGR_BG_SET(x, v)             do { (x) = (((x) & ~0x10) | ((v) << 4)); } while(0)
  #define STM32_TIMER_EGR_BG_GET(x)                (((x) >> 4) & 0x1)

#define STM32_TIMER_CCMR1OC_ADDR                     0x00000018
#define STM32_TIMER_CCMR1OC_MASK                     0x0000ffff
  #define STM32_TIMER_CCMR1OC_CC1S_MASK            0x00000003
  #define STM32_TIMER_CCMR1OC_CC1S(v)              ((STM32_TIMER_CCMR1OC_CC1S_##v) << 0)
  #define STM32_TIMER_CCMR1OC_CC1S_SET(x, v)       do { (x) = (((x) & ~0x3) | ((STM32_TIMER_CCMR1OC_CC1S_##v) << 0)); } while(0)
  #define STM32_TIMER_CCMR1OC_CC1S_GET(x)          (((x) >> 0) & 0x3)
    #define STM32_TIMER_CCMR1OC_CC1S_OUTPUT          0x00000000
    #define STM32_TIMER_CCMR1OC_CC1S_INPUT_TI1       0x00000001
    #define STM32_TIMER_CCMR1OC_CC1S_INPUT_TI2       0x00000002
    #define STM32_TIMER_CCMR1OC_CC1S_INPUT_TRC       0x00000003
  #define STM32_TIMER_CCMR1OC_OC1FE_MASK           0x00000001
  #define STM32_TIMER_CCMR1OC_OC1FE                0x00000004
  #define STM32_TIMER_CCMR1OC_OC1FE_SET(x, v)      do { (x) = (((x) & ~0x4) | ((v) << 2)); } while(0)
  #define STM32_TIMER_CCMR1OC_OC1FE_GET(x)         (((x) >> 2) & 0x1)
  #define STM32_TIMER_CCMR1OC_OC1PE_MASK           0x00000001
  #define STM32_TIMER_CCMR1OC_OC1PE                0x00000008
  #define STM32_TIMER_CCMR1OC_OC1PE_SET(x, v)      do { (x) = (((x) & ~0x8) | ((v) << 3)); } while(0)
  #define STM32_TIMER_CCMR1OC_OC1PE_GET(x)         (((x) >> 3) & 0x1)
  #define STM32_TIMER_CCMR1OC_OC1M_MASK            0x00000007
  #define STM32_TIMER_CCMR1OC_OC1M(v)              ((STM32_TIMER_CCMR1OC_OC1M_##v) << 4)
  #define STM32_TIMER_CCMR1OC_OC1M_SET(x, v)       do { (x) = (((x) & ~0x70) | ((STM32_TIMER_CCMR1OC_OC1M_##v) << 4)); } while(0)
  #define STM32_TIMER_CCMR1OC_OC1M_GET(x)          (((x) >> 4) & 0x7)
    #define STM32_TIMER_CCMR1OC_OC1M_FROZEN          0x00000000
    #define STM32_TIMER_CCMR1OC_OC1M_ACTIVE          0x00000001
    #define STM32_TIMER_CCMR1OC_OC1M_INACTIVE        0x00000002
    #define STM32_TIMER_CCMR1OC_OC1M_TOGGLE          0x00000003
    #define STM32_TIMER_CCMR1OC_OC1M_FORCE_INACTIVE  0x00000004
    #define STM32_TIMER_CCMR1OC_OC1M_FORCE_ACTIVE    0x00000005
    #define STM32_TIMER_CCMR1OC_OC1M_PWM_MODE_1      0x00000006
    #define STM32_TIMER_CCMR1OC_OC1M_PWM_MODE_2      0x00000007
  #define STM32_TIMER_CCMR1OC_OC1CE_MASK           0x00000001
  #define STM32_TIMER_CCMR1OC_OC1CE                0x00000080
  #define STM32_TIMER_CCMR1OC_OC1CE_SET(x, v)      do { (x) = (((x) & ~0x80) | ((v) << 7)); } while(0)
  #define STM32_TIMER_CCMR1OC_OC1CE_GET(x)         (((x) >> 7) & 0x1)
  #define STM32_TIMER_CCMR1OC_CC2S_MASK            0x00000003
  #define STM32_TIMER_CCMR1OC_CC2S(v)              ((STM32_TIMER_CCMR1OC_CC2S_##v) << 8)
  #define STM32_TIMER_CCMR1OC_CC2S_SET(x, v)       do { (x) = (((x) & ~0x300) | ((STM32_TIMER_CCMR1OC_CC2S_##v) << 8)); } while(0)
  #define STM32_TIMER_CCMR1OC_CC2S_GET(x)          (((x) >> 8) & 0x3)
    #define STM32_TIMER_CCMR1OC_CC2S_OUTPUT          0x00000000
    #define STM32_TIMER_CCMR1OC_CC2S_INPUT_TI2       0x00000001
    #define STM32_TIMER_CCMR1OC_CC2S_INPUT_TI1       0x00000002
    #define STM32_TIMER_CCMR1OC_CC2S_INPUT_TRC       0x00000003
  #define STM32_TIMER_CCMR1OC_OC2FE_MASK           0x00000001
  #define STM32_TIMER_CCMR1OC_OC2FE                0x00000400
  #define STM32_TIMER_CCMR1OC_OC2FE_SET(x, v)      do { (x) = (((x) & ~0x400) | ((v) << 10)); } while(0)
  #define STM32_TIMER_CCMR1OC_OC2FE_GET(x)         (((x) >> 10) & 0x1)
  #define STM32_TIMER_CCMR1OC_OC2PE_MASK           0x00000001
  #define STM32_TIMER_CCMR1OC_OC2PE                0x00000800
  #define STM32_TIMER_CCMR1OC_OC2PE_SET(x, v)      do { (x) = (((x) & ~0x800) | ((v) << 11)); } while(0)
  #define STM32_TIMER_CCMR1OC_OC2PE_GET(x)         (((x) >> 11) & 0x1)
  #define STM32_TIMER_CCMR1OC_OC2M_MASK            0x00000007
  #define STM32_TIMER_CCMR1OC_OC2M(v)              ((STM32_TIMER_CCMR1OC_OC2M_##v) << 12)
  #define STM32_TIMER_CCMR1OC_OC2M_SET(x, v)       do { (x) = (((x) & ~0x7000) | ((STM32_TIMER_CCMR1OC_OC2M_##v) << 12)); } while(0)
  #define STM32_TIMER_CCMR1OC_OC2M_GET(x)          (((x) >> 12) & 0x7)
    #define STM32_TIMER_CCMR1OC_OC2M_FROZEN          0x00000000
    #define STM32_TIMER_CCMR1OC_OC2M_ACTIVE          0x00000001
    #define STM32_TIMER_CCMR1OC_OC2M_INACTIVE        0x00000002
    #define STM32_TIMER_CCMR1OC_OC2M_TOGGLE          0x00000003
    #define STM32_TIMER_CCMR1OC_OC2M_FORCE_INACTIVE  0x00000004
    #define STM32_TIMER_CCMR1OC_OC2M_FORCE_ACTIVE    0x00000005
    #define STM32_TIMER_CCMR1OC_OC2M_PWM_MODE_1      0x00000006
    #define STM32_TIMER_CCMR1OC_OC2M_PWM_MODE_2      0x00000007
  #define STM32_TIMER_CCMR1OC_OC2CE_MASK           0x00000001
  #define STM32_TIMER_CCMR1OC_OC2CE                0x00008000
  #define STM32_TIMER_CCMR1OC_OC2CE_SET(x, v)      do { (x) = (((x) & ~0x8000) | ((v) << 15)); } while(0)
  #define STM32_TIMER_CCMR1OC_OC2CE_GET(x)         (((x) >> 15) & 0x1)

#define STM32_TIMER_CCMR1IC_ADDR                     0x00000018
#define STM32_TIMER_CCMR1IC_MASK                     0x0000ffff
  #define STM32_TIMER_CCMR1IC_CC1S_MASK            0x00000003
  #define STM32_TIMER_CCMR1IC_CC1S(v)              ((STM32_TIMER_CCMR1IC_CC1S_##v) << 0)
  #define STM32_TIMER_CCMR1IC_CC1S_SET(x, v)       do { (x) = (((x) & ~0x3) | ((STM32_TIMER_CCMR1IC_CC1S_##v) << 0)); } while(0)
  #define STM32_TIMER_CCMR1IC_CC1S_GET(x)          (((x) >> 0) & 0x3)
    #define STM32_TIMER_CCMR1IC_CC1S_OUTPUT          0x00000000
    #define STM32_TIMER_CCMR1IC_CC1S_INPUT_TI1       0x00000001
    #define STM32_TIMER_CCMR1IC_CC1S_INPUT_TI2       0x00000002
    #define STM32_TIMER_CCMR1IC_CC1S_INPUT_TRC       0x00000003
  #define STM32_TIMER_CCMR1IC_IC1PSC_MASK          0x00000003
  #define STM32_TIMER_CCMR1IC_IC1PSC(v)            ((STM32_TIMER_CCMR1IC_IC1PSC_##v) << 2)
  #define STM32_TIMER_CCMR1IC_IC1PSC_SET(x, v)     do { (x) = (((x) & ~0xc) | ((STM32_TIMER_CCMR1IC_IC1PSC_##v) << 2)); } while(0)
  #define STM32_TIMER_CCMR1IC_IC1PSC_GET(x)        (((x) >> 2) & 0x3)
    #define STM32_TIMER_CCMR1IC_IC1PSC_NO_PRESCALER  0x00000000
    #define STM32_TIMER_CCMR1IC_IC1PSC_DIV_2         0x00000001
    #define STM32_TIMER_CCMR1IC_IC1PSC_DIV_4         0x00000002
    #define STM32_TIMER_CCMR1IC_IC1PSC_DIV_8         0x00000003
  #define STM32_TIMER_CCMR1IC_IC1F_MASK            0x0000000f
  #define STM32_TIMER_CCMR1IC_IC1F(v)              ((v) << 4)
  #define STM32_TIMER_CCMR1IC_IC1F_SET(x, v)       do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define STM32_TIMER_CCMR1IC_IC1F_GET(x)          (((x) >> 4) & 0xf)
  #define STM32_TIMER_CCMR1IC_CC2S_MASK            0x00000003
  #define STM32_TIMER_CCMR1IC_CC2S(v)              ((STM32_TIMER_CCMR1IC_CC2S_##v) << 8)
  #define STM32_TIMER_CCMR1IC_CC2S_SET(x, v)       do { (x) = (((x) & ~0x300) | ((STM32_TIMER_CCMR1IC_CC2S_##v) << 8)); } while(0)
  #define STM32_TIMER_CCMR1IC_CC2S_GET(x)          (((x) >> 8) & 0x3)
    #define STM32_TIMER_CCMR1IC_CC2S_OUTPUT          0x00000000
    #define STM32_TIMER_CCMR1IC_CC2S_INPUT_TI2       0x00000001
    #define STM32_TIMER_CCMR1IC_CC2S_INPUT_TI1       0x00000002
    #define STM32_TIMER_CCMR1IC_CC2S_INPUT_TRC       0x00000003
  #define STM32_TIMER_CCMR1IC_IC2PSC_MASK          0x00000003
  #define STM32_TIMER_CCMR1IC_IC2PSC(v)            ((STM32_TIMER_CCMR1IC_IC2PSC_##v) << 10)
  #define STM32_TIMER_CCMR1IC_IC2PSC_SET(x, v)     do { (x) = (((x) & ~0xc00) | ((STM32_TIMER_CCMR1IC_IC2PSC_##v) << 10)); } while(0)
  #define STM32_TIMER_CCMR1IC_IC2PSC_GET(x)        (((x) >> 10) & 0x3)
    #define STM32_TIMER_CCMR1IC_IC2PSC_NO_PRESCALER  0x00000000
    #define STM32_TIMER_CCMR1IC_IC2PSC_DIV_2         0x00000001
    #define STM32_TIMER_CCMR1IC_IC2PSC_DIV_4         0x00000002
    #define STM32_TIMER_CCMR1IC_IC2PSC_DIV_8         0x00000003
  #define STM32_TIMER_CCMR1IC_IC2F_MASK            0x0000000f
  #define STM32_TIMER_CCMR1IC_IC2F(v)              ((v) << 12)
  #define STM32_TIMER_CCMR1IC_IC2F_SET(x, v)       do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define STM32_TIMER_CCMR1IC_IC2F_GET(x)          (((x) >> 12) & 0xf)

#define STM32_TIMER_CCMR2OC_ADDR                     0x0000001c
#define STM32_TIMER_CCMR2OC_MASK                     0x0000ffff
  #define STM32_TIMER_CCMR2OC_CC3S_MASK            0x00000003
  #define STM32_TIMER_CCMR2OC_CC3S(v)              ((STM32_TIMER_CCMR2OC_CC3S_##v) << 0)
  #define STM32_TIMER_CCMR2OC_CC3S_SET(x, v)       do { (x) = (((x) & ~0x3) | ((STM32_TIMER_CCMR2OC_CC3S_##v) << 0)); } while(0)
  #define STM32_TIMER_CCMR2OC_CC3S_GET(x)          (((x) >> 0) & 0x3)
    #define STM32_TIMER_CCMR2OC_CC3S_OUTPUT          0x00000000
    #define STM32_TIMER_CCMR2OC_CC3S_INPUT_TI3       0x00000001
    #define STM32_TIMER_CCMR2OC_CC3S_INPUT_TI4       0x00000002
    #define STM32_TIMER_CCMR2OC_CC3S_INPUT_TRC       0x00000003
  #define STM32_TIMER_CCMR2OC_OC3FE_MASK           0x00000001
  #define STM32_TIMER_CCMR2OC_OC3FE                0x00000004
  #define STM32_TIMER_CCMR2OC_OC3FE_SET(x, v)      do { (x) = (((x) & ~0x4) | ((v) << 2)); } while(0)
  #define STM32_TIMER_CCMR2OC_OC3FE_GET(x)         (((x) >> 2) & 0x1)
  #define STM32_TIMER_CCMR2OC_OC3PE_MASK           0x00000001
  #define STM32_TIMER_CCMR2OC_OC3PE                0x00000008
  #define STM32_TIMER_CCMR2OC_OC3PE_SET(x, v)      do { (x) = (((x) & ~0x8) | ((v) << 3)); } while(0)
  #define STM32_TIMER_CCMR2OC_OC3PE_GET(x)         (((x) >> 3) & 0x1)
  #define STM32_TIMER_CCMR2OC_OC3M_MASK            0x00000007
  #define STM32_TIMER_CCMR2OC_OC3M(v)              ((STM32_TIMER_CCMR2OC_OC3M_##v) << 4)
  #define STM32_TIMER_CCMR2OC_OC3M_SET(x, v)       do { (x) = (((x) & ~0x70) | ((STM32_TIMER_CCMR2OC_OC3M_##v) << 4)); } while(0)
  #define STM32_TIMER_CCMR2OC_OC3M_GET(x)          (((x) >> 4) & 0x7)
    #define STM32_TIMER_CCMR2OC_OC3M_FROZEN          0x00000000
    #define STM32_TIMER_CCMR2OC_OC3M_ACTIVE          0x00000001
    #define STM32_TIMER_CCMR2OC_OC3M_INACTIVE        0x00000002
    #define STM32_TIMER_CCMR2OC_OC3M_TOGGLE          0x00000003
    #define STM32_TIMER_CCMR2OC_OC3M_FORCE_INACTIVE  0x00000004
    #define STM32_TIMER_CCMR2OC_OC3M_FORCE_ACTIVE    0x00000005
    #define STM32_TIMER_CCMR2OC_OC3M_PWM_MODE_1      0x00000006
    #define STM32_TIMER_CCMR2OC_OC3M_PWM_MODE_2      0x00000007
  #define STM32_TIMER_CCMR2OC_OC3CE_MASK           0x00000001
  #define STM32_TIMER_CCMR2OC_OC3CE                0x00000080
  #define STM32_TIMER_CCMR2OC_OC3CE_SET(x, v)      do { (x) = (((x) & ~0x80) | ((v) << 7)); } while(0)
  #define STM32_TIMER_CCMR2OC_OC3CE_GET(x)         (((x) >> 7) & 0x1)
  #define STM32_TIMER_CCMR2OC_CC4S_MASK            0x00000003
  #define STM32_TIMER_CCMR2OC_CC4S(v)              ((STM32_TIMER_CCMR2OC_CC4S_##v) << 8)
  #define STM32_TIMER_CCMR2OC_CC4S_SET(x, v)       do { (x) = (((x) & ~0x300) | ((STM32_TIMER_CCMR2OC_CC4S_##v) << 8)); } while(0)
  #define STM32_TIMER_CCMR2OC_CC4S_GET(x)          (((x) >> 8) & 0x3)
    #define STM32_TIMER_CCMR2OC_CC4S_OUTPUT          0x00000000
    #define STM32_TIMER_CCMR2OC_CC4S_INPUT_TI4       0x00000001
    #define STM32_TIMER_CCMR2OC_CC4S_INPUT_TI3       0x00000002
    #define STM32_TIMER_CCMR2OC_CC4S_INPUT_TRC       0x00000003
  #define STM32_TIMER_CCMR2OC_OC4FE_MASK           0x00000001
  #define STM32_TIMER_CCMR2OC_OC4FE                0x00000400
  #define STM32_TIMER_CCMR2OC_OC4FE_SET(x, v)      do { (x) = (((x) & ~0x400) | ((v) << 10)); } while(0)
  #define STM32_TIMER_CCMR2OC_OC4FE_GET(x)         (((x) >> 10) & 0x1)
  #define STM32_TIMER_CCMR2OC_OC4PE_MASK           0x00000001
  #define STM32_TIMER_CCMR2OC_OC4PE                0x00000800
  #define STM32_TIMER_CCMR2OC_OC4PE_SET(x, v)      do { (x) = (((x) & ~0x800) | ((v) << 11)); } while(0)
  #define STM32_TIMER_CCMR2OC_OC4PE_GET(x)         (((x) >> 11) & 0x1)
  #define STM32_TIMER_CCMR2OC_OC4M_MASK            0x00000007
  #define STM32_TIMER_CCMR2OC_OC4M(v)              ((STM32_TIMER_CCMR2OC_OC4M_##v) << 12)
  #define STM32_TIMER_CCMR2OC_OC4M_SET(x, v)       do { (x) = (((x) & ~0x7000) | ((STM32_TIMER_CCMR2OC_OC4M_##v) << 12)); } while(0)
  #define STM32_TIMER_CCMR2OC_OC4M_GET(x)          (((x) >> 12) & 0x7)
    #define STM32_TIMER_CCMR2OC_OC4M_FROZEN          0x00000000
    #define STM32_TIMER_CCMR2OC_OC4M_ACTIVE          0x00000001
    #define STM32_TIMER_CCMR2OC_OC4M_INACTIVE        0x00000002
    #define STM32_TIMER_CCMR2OC_OC4M_TOGGLE          0x00000003
    #define STM32_TIMER_CCMR2OC_OC4M_FORCE_INACTIVE  0x00000004
    #define STM32_TIMER_CCMR2OC_OC4M_FORCE_ACTIVE    0x00000005
    #define STM32_TIMER_CCMR2OC_OC4M_PWM_MODE_1      0x00000006
    #define STM32_TIMER_CCMR2OC_OC4M_PWM_MODE_2      0x00000007
  #define STM32_TIMER_CCMR2OC_OC4CE_MASK           0x00000001
  #define STM32_TIMER_CCMR2OC_OC4CE                0x00008000
  #define STM32_TIMER_CCMR2OC_OC4CE_SET(x, v)      do { (x) = (((x) & ~0x8000) | ((v) << 15)); } while(0)
  #define STM32_TIMER_CCMR2OC_OC4CE_GET(x)         (((x) >> 15) & 0x1)

#define STM32_TIMER_CCMR2IC_ADDR                     0x0000001c
#define STM32_TIMER_CCMR2IC_MASK                     0x0000ffff
  #define STM32_TIMER_CCMR2IC_CC3S_MASK            0x00000003
  #define STM32_TIMER_CCMR2IC_CC3S(v)              ((STM32_TIMER_CCMR2IC_CC3S_##v) << 0)
  #define STM32_TIMER_CCMR2IC_CC3S_SET(x, v)       do { (x) = (((x) & ~0x3) | ((STM32_TIMER_CCMR2IC_CC3S_##v) << 0)); } while(0)
  #define STM32_TIMER_CCMR2IC_CC3S_GET(x)          (((x) >> 0) & 0x3)
    #define STM32_TIMER_CCMR2IC_CC3S_OUTPUT          0x00000000
    #define STM32_TIMER_CCMR2IC_CC3S_INPUT_TI3       0x00000001
    #define STM32_TIMER_CCMR2IC_CC3S_INPUT_TI4       0x00000002
    #define STM32_TIMER_CCMR2IC_CC3S_INPUT_TRC       0x00000003
  #define STM32_TIMER_CCMR2IC_IC3PSC_MASK          0x00000003
  #define STM32_TIMER_CCMR2IC_IC3PSC(v)            ((STM32_TIMER_CCMR2IC_IC3PSC_##v) << 2)
  #define STM32_TIMER_CCMR2IC_IC3PSC_SET(x, v)     do { (x) = (((x) & ~0xc) | ((STM32_TIMER_CCMR2IC_IC3PSC_##v) << 2)); } while(0)
  #define STM32_TIMER_CCMR2IC_IC3PSC_GET(x)        (((x) >> 2) & 0x3)
    #define STM32_TIMER_CCMR2IC_IC3PSC_NO_PRESCALER  0x00000000
    #define STM32_TIMER_CCMR2IC_IC3PSC_DIV_2         0x00000001
    #define STM32_TIMER_CCMR2IC_IC3PSC_DIV_4         0x00000002
    #define STM32_TIMER_CCMR2IC_IC3PSC_DIV_8         0x00000003
  #define STM32_TIMER_CCMR2IC_IC3F_MASK            0x0000000f
  #define STM32_TIMER_CCMR2IC_IC3F(v)              ((v) << 4)
  #define STM32_TIMER_CCMR2IC_IC3F_SET(x, v)       do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define STM32_TIMER_CCMR2IC_IC3F_GET(x)          (((x) >> 4) & 0xf)
  #define STM32_TIMER_CCMR2IC_CC4S_MASK            0x00000003
  #define STM32_TIMER_CCMR2IC_CC4S(v)              ((STM32_TIMER_CCMR2IC_CC4S_##v) << 8)
  #define STM32_TIMER_CCMR2IC_CC4S_SET(x, v)       do { (x) = (((x) & ~0x300) | ((STM32_TIMER_CCMR2IC_CC4S_##v) << 8)); } while(0)
  #define STM32_TIMER_CCMR2IC_CC4S_GET(x)          (((x) >> 8) & 0x3)
    #define STM32_TIMER_CCMR2IC_CC4S_OUTPUT          0x00000000
    #define STM32_TIMER_CCMR2IC_CC4S_INPUT_TI4       0x00000001
    #define STM32_TIMER_CCMR2IC_CC4S_INPUT_TI3       0x00000002
    #define STM32_TIMER_CCMR2IC_CC4S_INPUT_TRC       0x00000003
  #define STM32_TIMER_CCMR2IC_IC4PSC_MASK          0x00000003
  #define STM32_TIMER_CCMR2IC_IC4PSC(v)            ((STM32_TIMER_CCMR2IC_IC4PSC_##v) << 10)
  #define STM32_TIMER_CCMR2IC_IC4PSC_SET(x, v)     do { (x) = (((x) & ~0xc00) | ((STM32_TIMER_CCMR2IC_IC4PSC_##v) << 10)); } while(0)
  #define STM32_TIMER_CCMR2IC_IC4PSC_GET(x)        (((x) >> 10) & 0x3)
    #define STM32_TIMER_CCMR2IC_IC4PSC_NO_PRESCALER  0x00000000
    #define STM32_TIMER_CCMR2IC_IC4PSC_DIV_2         0x00000001
    #define STM32_TIMER_CCMR2IC_IC4PSC_DIV_4         0x00000002
    #define STM32_TIMER_CCMR2IC_IC4PSC_DIV_8         0x00000003
  #define STM32_TIMER_CCMR2IC_IC4F_MASK            0x0000000f
  #define STM32_TIMER_CCMR2IC_IC4F(v)              ((v) << 12)
  #define STM32_TIMER_CCMR2IC_IC4F_SET(x, v)       do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define STM32_TIMER_CCMR2IC_IC4F_GET(x)          (((x) >> 12) & 0xf)

#define STM32_TIMER_CCER_ADDR                        0x00000020
#define STM32_TIMER_CCER_MASK                        0x0000bbbf
  #define STM32_TIMER_CCER_CCE_MASK                0x00000001
  #define STM32_TIMER_CCER_CCE_COUNT               4
  #define STM32_TIMER_CCER_CCE(fidx)               (0x00000001 << ((fidx) * 4))
  #define STM32_TIMER_CCER_CCE_SET(fidx, x, v)     do { (x) = (((x) & ~(0x1 << ((fidx) * 4))) | ((v) << ((fidx) * 4 + 0))); } while(0)
  #define STM32_TIMER_CCER_CCE_GET(fidx, x)        (((x) >> ((fidx) * 4 + 0)) & 0x1)
  #define STM32_TIMER_CCER_CCP_MASK                0x00000001
  #define STM32_TIMER_CCER_CCP_COUNT               4
  #define STM32_TIMER_CCER_CCP(fidx, v)            ((STM32_TIMER_CCER_CCP_##v) << ((fidx) * 4 + 1))
  #define STM32_TIMER_CCER_CCP_SET(fidx, x, v)     do { (x) = (((x) & ~(0x2 << ((fidx) * 4))) | ((STM32_TIMER_CCER_CCP_##v) << ((fidx) * 4 + 1))); } while(0)
  #define STM32_TIMER_CCER_CCP_GET(fidx, x)        (((x) >> ((fidx) * 4 + 1)) & 0x1)
  #define STM32_TIMER_CCER_CCP_HIGH                0x00000000
  #define STM32_TIMER_CCER_CCP_LOW                 0x00000001
  #define STM32_TIMER_CCER_CCNE_MASK               0x00000001
  #define STM32_TIMER_CCER_CCNE                    0x00000004
  #define STM32_TIMER_CCER_CCNE_SET(x, v)          do { (x) = (((x) & ~0x4) | ((v) << 2)); } while(0)
  #define STM32_TIMER_CCER_CCNE_GET(x)             (((x) >> 2) & 0x1)
  #define STM32_TIMER_CCER_CCNP_MASK               0x00000001
  #define STM32_TIMER_CCER_CCNP_COUNT              4
  #define STM32_TIMER_CCER_CCNP(fidx, v)           ((STM32_TIMER_CCER_CCNP_##v) << ((fidx) * 4 + 3))
  #define STM32_TIMER_CCER_CCNP_SET(fidx, x, v)    do { (x) = (((x) & ~(0x8 << ((fidx) * 4))) | ((STM32_TIMER_CCER_CCNP_##v) << ((fidx) * 4 + 3))); } while(0)
  #define STM32_TIMER_CCER_CCNP_GET(fidx, x)       (((x) >> ((fidx) * 4 + 3)) & 0x1)
  #define STM32_TIMER_CCER_CCNP_HIGH               0x00000000
  #define STM32_TIMER_CCER_CCNP_LOW                0x00000001

#define STM32_TIMER_CNT_ADDR                         0x00000024
#define STM32_TIMER_CNT_MASK                         0x00000000

#define STM32_TIMER_PSC_ADDR                         0x00000028
#define STM32_TIMER_PSC_MASK                         0x0000ffff
  #define STM32_TIMER_PSC_PSC_MASK                 0x0000ffff
  #define STM32_TIMER_PSC_PSC(v)                   ((v) << 0)
  #define STM32_TIMER_PSC_PSC_SET(x, v)            do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define STM32_TIMER_PSC_PSC_GET(x)               (((x) >> 0) & 0xffff)

#define STM32_TIMER_ARR_ADDR                         0x0000002c
#define STM32_TIMER_ARR_MASK                         0x00000000

#define STM32_TIMER_RCR_ADDR                         0x00000030
#define STM32_TIMER_RCR_MASK                         0x000000ff
  #define STM32_TIMER_RCR_REP_MASK                 0x000000ff
  #define STM32_TIMER_RCR_REP(v)                   ((v) << 0)
  #define STM32_TIMER_RCR_REP_SET(x, v)            do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define STM32_TIMER_RCR_REP_GET(x)               (((x) >> 0) & 0xff)

#define STM32_TIMER_CCR_ADDR(ridx)                   (0x00000034 + (ridx) * 4)
#define STM32_TIMER_CCR_COUNT                        4
#define STM32_TIMER_CCR_MASK                         0x00000000

#define STM32_TIMER_BDTR_ADDR                        0x00000038
#define STM32_TIMER_BDTR_MASK                        0x0000ffff
  #define STM32_TIMER_BDTR_DTG_MASK                0x000000ff
  #define STM32_TIMER_BDTR_DTG(v)                  ((v) << 0)
  #define STM32_TIMER_BDTR_DTG_SET(x, v)           do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define STM32_TIMER_BDTR_DTG_GET(x)              (((x) >> 0) & 0xff)
  #define STM32_TIMER_BDTR_LOCK_MASK               0x00000003
  #define STM32_TIMER_BDTR_LOCK(v)                 ((v) << 8)
  #define STM32_TIMER_BDTR_LOCK_SET(x, v)          do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define STM32_TIMER_BDTR_LOCK_GET(x)             (((x) >> 8) & 0x3)
  #define STM32_TIMER_BDTR_OSSI_MASK               0x00000001
  #define STM32_TIMER_BDTR_OSSI                    0x00000400
  #define STM32_TIMER_BDTR_OSSI_SET(x, v)          do { (x) = (((x) & ~0x400) | ((v) << 10)); } while(0)
  #define STM32_TIMER_BDTR_OSSI_GET(x)             (((x) >> 10) & 0x1)
  #define STM32_TIMER_BDTR_OSSR_MASK               0x00000001
  #define STM32_TIMER_BDTR_OSSR                    0x00000800
  #define STM32_TIMER_BDTR_OSSR_SET(x, v)          do { (x) = (((x) & ~0x800) | ((v) << 11)); } while(0)
  #define STM32_TIMER_BDTR_OSSR_GET(x)             (((x) >> 11) & 0x1)
  #define STM32_TIMER_BDTR_BKE_MASK                0x00000001
  #define STM32_TIMER_BDTR_BKE                     0x00001000
  #define STM32_TIMER_BDTR_BKE_SET(x, v)           do { (x) = (((x) & ~0x1000) | ((v) << 12)); } while(0)
  #define STM32_TIMER_BDTR_BKE_GET(x)              (((x) >> 12) & 0x1)
  #define STM32_TIMER_BDTR_BKP_MASK                0x00000001
  #define STM32_TIMER_BDTR_BKP                     0x00002000
  #define STM32_TIMER_BDTR_BKP_SET(x, v)           do { (x) = (((x) & ~0x2000) | ((v) << 13)); } while(0)
  #define STM32_TIMER_BDTR_BKP_GET(x)              (((x) >> 13) & 0x1)
  #define STM32_TIMER_BDTR_AOE_MASK                0x00000001
  #define STM32_TIMER_BDTR_AOE                     0x00004000
  #define STM32_TIMER_BDTR_AOE_SET(x, v)           do { (x) = (((x) & ~0x4000) | ((v) << 14)); } while(0)
  #define STM32_TIMER_BDTR_AOE_GET(x)              (((x) >> 14) & 0x1)
  #define STM32_TIMER_BDTR_MOE_MASK                0x00000001
  #define STM32_TIMER_BDTR_MOE                     0x00008000
  #define STM32_TIMER_BDTR_MOE_SET(x, v)           do { (x) = (((x) & ~0x8000) | ((v) << 15)); } while(0)
  #define STM32_TIMER_BDTR_MOE_GET(x)              (((x) >> 15) & 0x1)

#define STM32_TIMER_DCR_ADDR                         0x0000003c
#define STM32_TIMER_DCR_MASK                         0x00001f1f
  #define STM32_TIMER_DCR_DBA_MASK                 0x0000001f
  #define STM32_TIMER_DCR_DBA(v)                   ((v) << 0)
  #define STM32_TIMER_DCR_DBA_SET(x, v)            do { (x) = (((x) & ~0x1f) | ((v) << 0)); } while(0)
  #define STM32_TIMER_DCR_DBA_GET(x)               (((x) >> 0) & 0x1f)
  #define STM32_TIMER_DCR_DBL_MASK                 0x0000001f
  #define STM32_TIMER_DCR_DBL(v)                   ((v) << 8)
  #define STM32_TIMER_DCR_DBL_SET(x, v)            do { (x) = (((x) & ~0x1f00) | ((v) << 8)); } while(0)
  #define STM32_TIMER_DCR_DBL_GET(x)               (((x) >> 8) & 0x1f)

#define STM32_TIMER_DMAR_ADDR                        0x00000040
#define STM32_TIMER_DMAR_MASK                        0x0000ffff
  #define STM32_TIMER_DMAR_DMAR_MASK               0x0000ffff
  #define STM32_TIMER_DMAR_DMAR(v)                 ((v) << 0)
  #define STM32_TIMER_DMAR_DMAR_SET(x, v)          do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define STM32_TIMER_DMAR_DMAR_GET(x)             (((x) >> 0) & 0xffff)

#endif

