/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs cdefs_use_reg_mask=1 cdefs_use_field_set=1                   \
     cdefs_use_field_get=1 reg_prefix=STM32F4xx field_prefix=STM32F4xx         \
     cdefs_use_field_mask=1
*/

#ifndef _I2C_BFGEN_DEFS_
#define _I2C_BFGEN_DEFS_

#define STM32F4xx_I2C_CR1_ADDR                       0x00000000
#define STM32F4xx_I2C_CR1_MASK                       0x0000bffb
  #define STM32F4xx_I2C_CR1_PE_MASK                0x00000001
  #define STM32F4xx_I2C_CR1_PE                     0x00000001
  #define STM32F4xx_I2C_CR1_PE_SET(x, v)           do { (x) = (((x) & ~0x1) | ((v) << 0)); } while(0)
  #define STM32F4xx_I2C_CR1_PE_GET(x)              (((x) >> 0) & 0x1)
  #define STM32F4xx_I2C_CR1_SMBUS_MASK             0x00000001
  #define STM32F4xx_I2C_CR1_SMBUS                  0x00000002
  #define STM32F4xx_I2C_CR1_SMBUS_SET(x, v)        do { (x) = (((x) & ~0x2) | ((v) << 1)); } while(0)
  #define STM32F4xx_I2C_CR1_SMBUS_GET(x)           (((x) >> 1) & 0x1)
  #define STM32F4xx_I2C_CR1_SMBTYPE_MASK           0x00000001
  #define STM32F4xx_I2C_CR1_SMBTYPE                0x00000008
  #define STM32F4xx_I2C_CR1_SMBTYPE_SET(x, v)      do { (x) = (((x) & ~0x8) | ((v) << 3)); } while(0)
  #define STM32F4xx_I2C_CR1_SMBTYPE_GET(x)         (((x) >> 3) & 0x1)
  #define STM32F4xx_I2C_CR1_ENARP_MASK             0x00000001
  #define STM32F4xx_I2C_CR1_ENARP                  0x00000010
  #define STM32F4xx_I2C_CR1_ENARP_SET(x, v)        do { (x) = (((x) & ~0x10) | ((v) << 4)); } while(0)
  #define STM32F4xx_I2C_CR1_ENARP_GET(x)           (((x) >> 4) & 0x1)
  #define STM32F4xx_I2C_CR1_ENPEC_MASK             0x00000001
  #define STM32F4xx_I2C_CR1_ENPEC                  0x00000020
  #define STM32F4xx_I2C_CR1_ENPEC_SET(x, v)        do { (x) = (((x) & ~0x20) | ((v) << 5)); } while(0)
  #define STM32F4xx_I2C_CR1_ENPEC_GET(x)           (((x) >> 5) & 0x1)
  #define STM32F4xx_I2C_CR1_ENGC_MASK              0x00000001
  #define STM32F4xx_I2C_CR1_ENGC                   0x00000040
  #define STM32F4xx_I2C_CR1_ENGC_SET(x, v)         do { (x) = (((x) & ~0x40) | ((v) << 6)); } while(0)
  #define STM32F4xx_I2C_CR1_ENGC_GET(x)            (((x) >> 6) & 0x1)
  #define STM32F4xx_I2C_CR1_NOSTRETCH_MASK         0x00000001
  #define STM32F4xx_I2C_CR1_NOSTRETCH              0x00000080
  #define STM32F4xx_I2C_CR1_NOSTRETCH_SET(x, v)    do { (x) = (((x) & ~0x80) | ((v) << 7)); } while(0)
  #define STM32F4xx_I2C_CR1_NOSTRETCH_GET(x)       (((x) >> 7) & 0x1)
  #define STM32F4xx_I2C_CR1_START_MASK             0x00000001
  #define STM32F4xx_I2C_CR1_START                  0x00000100
  #define STM32F4xx_I2C_CR1_START_SET(x, v)        do { (x) = (((x) & ~0x100) | ((v) << 8)); } while(0)
  #define STM32F4xx_I2C_CR1_START_GET(x)           (((x) >> 8) & 0x1)
  #define STM32F4xx_I2C_CR1_STOP_MASK              0x00000001
  #define STM32F4xx_I2C_CR1_STOP                   0x00000200
  #define STM32F4xx_I2C_CR1_STOP_SET(x, v)         do { (x) = (((x) & ~0x200) | ((v) << 9)); } while(0)
  #define STM32F4xx_I2C_CR1_STOP_GET(x)            (((x) >> 9) & 0x1)
  #define STM32F4xx_I2C_CR1_ACK_MASK               0x00000001
  #define STM32F4xx_I2C_CR1_ACK                    0x00000400
  #define STM32F4xx_I2C_CR1_ACK_SET(x, v)          do { (x) = (((x) & ~0x400) | ((v) << 10)); } while(0)
  #define STM32F4xx_I2C_CR1_ACK_GET(x)             (((x) >> 10) & 0x1)
  #define STM32F4xx_I2C_CR1_POS_MASK               0x00000001
  #define STM32F4xx_I2C_CR1_POS                    0x00000800
  #define STM32F4xx_I2C_CR1_POS_SET(x, v)          do { (x) = (((x) & ~0x800) | ((v) << 11)); } while(0)
  #define STM32F4xx_I2C_CR1_POS_GET(x)             (((x) >> 11) & 0x1)
  #define STM32F4xx_I2C_CR1_PEC_MASK               0x00000001
  #define STM32F4xx_I2C_CR1_PEC                    0x00001000
  #define STM32F4xx_I2C_CR1_PEC_SET(x, v)          do { (x) = (((x) & ~0x1000) | ((v) << 12)); } while(0)
  #define STM32F4xx_I2C_CR1_PEC_GET(x)             (((x) >> 12) & 0x1)
  #define STM32F4xx_I2C_CR1_ALERT_MASK             0x00000001
  #define STM32F4xx_I2C_CR1_ALERT                  0x00002000
  #define STM32F4xx_I2C_CR1_ALERT_SET(x, v)        do { (x) = (((x) & ~0x2000) | ((v) << 13)); } while(0)
  #define STM32F4xx_I2C_CR1_ALERT_GET(x)           (((x) >> 13) & 0x1)
  #define STM32F4xx_I2C_CR1_SWRST_MASK             0x00000001
  #define STM32F4xx_I2C_CR1_SWRST                  0x00008000
  #define STM32F4xx_I2C_CR1_SWRST_SET(x, v)        do { (x) = (((x) & ~0x8000) | ((v) << 15)); } while(0)
  #define STM32F4xx_I2C_CR1_SWRST_GET(x)           (((x) >> 15) & 0x1)

#define STM32F4xx_I2C_CR2_ADDR                       0x00000004
#define STM32F4xx_I2C_CR2_MASK                       0x00001f3f
  #define STM32F4xx_I2C_CR2_FREQ_MASK              0x0000003f
  #define STM32F4xx_I2C_CR2_FREQ(v)                ((v) << 0)
  #define STM32F4xx_I2C_CR2_FREQ_SET(x, v)         do { (x) = (((x) & ~0x3f) | ((v) << 0)); } while(0)
  #define STM32F4xx_I2C_CR2_FREQ_GET(x)            (((x) >> 0) & 0x3f)
  #define STM32F4xx_I2C_CR2_ITERREN_MASK           0x00000001
  #define STM32F4xx_I2C_CR2_ITERREN                0x00000100
  #define STM32F4xx_I2C_CR2_ITERREN_SET(x, v)      do { (x) = (((x) & ~0x100) | ((v) << 8)); } while(0)
  #define STM32F4xx_I2C_CR2_ITERREN_GET(x)         (((x) >> 8) & 0x1)
  #define STM32F4xx_I2C_CR2_ITEVTEN_MASK           0x00000001
  #define STM32F4xx_I2C_CR2_ITEVTEN                0x00000200
  #define STM32F4xx_I2C_CR2_ITEVTEN_SET(x, v)      do { (x) = (((x) & ~0x200) | ((v) << 9)); } while(0)
  #define STM32F4xx_I2C_CR2_ITEVTEN_GET(x)         (((x) >> 9) & 0x1)
  #define STM32F4xx_I2C_CR2_ITBUFEN_MASK           0x00000001
  #define STM32F4xx_I2C_CR2_ITBUFEN                0x00000400
  #define STM32F4xx_I2C_CR2_ITBUFEN_SET(x, v)      do { (x) = (((x) & ~0x400) | ((v) << 10)); } while(0)
  #define STM32F4xx_I2C_CR2_ITBUFEN_GET(x)         (((x) >> 10) & 0x1)
  #define STM32F4xx_I2C_CR2_DMAEN_MASK             0x00000001
  #define STM32F4xx_I2C_CR2_DMAEN                  0x00000800
  #define STM32F4xx_I2C_CR2_DMAEN_SET(x, v)        do { (x) = (((x) & ~0x800) | ((v) << 11)); } while(0)
  #define STM32F4xx_I2C_CR2_DMAEN_GET(x)           (((x) >> 11) & 0x1)
  #define STM32F4xx_I2C_CR2_LAST_MASK              0x00000001
  #define STM32F4xx_I2C_CR2_LAST                   0x00001000
  #define STM32F4xx_I2C_CR2_LAST_SET(x, v)         do { (x) = (((x) & ~0x1000) | ((v) << 12)); } while(0)
  #define STM32F4xx_I2C_CR2_LAST_GET(x)            (((x) >> 12) & 0x1)

#define STM32F4xx_I2C_OAR1_ADDR                      0x00000008
#define STM32F4xx_I2C_OAR1_MASK                      0x000083ff
  #define STM32F4xx_I2C_OAR1_ADD_MASK              0x000003ff
  #define STM32F4xx_I2C_OAR1_ADD(v)                ((v) << 0)
  #define STM32F4xx_I2C_OAR1_ADD_SET(x, v)         do { (x) = (((x) & ~0x3ff) | ((v) << 0)); } while(0)
  #define STM32F4xx_I2C_OAR1_ADD_GET(x)            (((x) >> 0) & 0x3ff)
  #define STM32F4xx_I2C_OAR1_ADDMODE_MASK          0x00000001
  #define STM32F4xx_I2C_OAR1_ADDMODE               0x00008000
  #define STM32F4xx_I2C_OAR1_ADDMODE_SET(x, v)     do { (x) = (((x) & ~0x8000) | ((v) << 15)); } while(0)
  #define STM32F4xx_I2C_OAR1_ADDMODE_GET(x)        (((x) >> 15) & 0x1)

#define STM32F4xx_I2C_OAR2_ADDR                      0x0000000c
#define STM32F4xx_I2C_OAR2_MASK                      0x000000ff
  #define STM32F4xx_I2C_OAR2_ENDUAL_MASK           0x00000001
  #define STM32F4xx_I2C_OAR2_ENDUAL                0x00000001
  #define STM32F4xx_I2C_OAR2_ENDUAL_SET(x, v)      do { (x) = (((x) & ~0x1) | ((v) << 0)); } while(0)
  #define STM32F4xx_I2C_OAR2_ENDUAL_GET(x)         (((x) >> 0) & 0x1)
  #define STM32F4xx_I2C_OAR2_ADD2_MASK             0x0000007f
  #define STM32F4xx_I2C_OAR2_ADD2(v)               ((v) << 1)
  #define STM32F4xx_I2C_OAR2_ADD2_SET(x, v)        do { (x) = (((x) & ~0xfe) | ((v) << 1)); } while(0)
  #define STM32F4xx_I2C_OAR2_ADD2_GET(x)           (((x) >> 1) & 0x7f)

#define STM32F4xx_I2C_DR_ADDR                        0x00000010
#define STM32F4xx_I2C_DR_MASK                        0x000000ff
  #define STM32F4xx_I2C_DR_DATA_MASK               0x000000ff
  #define STM32F4xx_I2C_DR_DATA(v)                 ((v) << 0)
  #define STM32F4xx_I2C_DR_DATA_SET(x, v)          do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define STM32F4xx_I2C_DR_DATA_GET(x)             (((x) >> 0) & 0xff)

#define STM32F4xx_I2C_SR1_ADDR                       0x00000014
#define STM32F4xx_I2C_SR1_MASK                       0x0000dfdf
  #define STM32F4xx_I2C_SR1_SB_MASK                0x00000001
  #define STM32F4xx_I2C_SR1_SB                     0x00000001
  #define STM32F4xx_I2C_SR1_SB_SET(x, v)           do { (x) = (((x) & ~0x1) | ((v) << 0)); } while(0)
  #define STM32F4xx_I2C_SR1_SB_GET(x)              (((x) >> 0) & 0x1)
  #define STM32F4xx_I2C_SR1_ADDRESS_MASK           0x00000001
  #define STM32F4xx_I2C_SR1_ADDRESS                0x00000002
  #define STM32F4xx_I2C_SR1_ADDRESS_SET(x, v)      do { (x) = (((x) & ~0x2) | ((v) << 1)); } while(0)
  #define STM32F4xx_I2C_SR1_ADDRESS_GET(x)         (((x) >> 1) & 0x1)
  #define STM32F4xx_I2C_SR1_BTF_MASK               0x00000001
  #define STM32F4xx_I2C_SR1_BTF                    0x00000004
  #define STM32F4xx_I2C_SR1_BTF_SET(x, v)          do { (x) = (((x) & ~0x4) | ((v) << 2)); } while(0)
  #define STM32F4xx_I2C_SR1_BTF_GET(x)             (((x) >> 2) & 0x1)
  #define STM32F4xx_I2C_SR1_ADD10_MASK             0x00000001
  #define STM32F4xx_I2C_SR1_ADD10                  0x00000008
  #define STM32F4xx_I2C_SR1_ADD10_SET(x, v)        do { (x) = (((x) & ~0x8) | ((v) << 3)); } while(0)
  #define STM32F4xx_I2C_SR1_ADD10_GET(x)           (((x) >> 3) & 0x1)
  #define STM32F4xx_I2C_SR1_STOP_MASK              0x00000001
  #define STM32F4xx_I2C_SR1_STOP                   0x00000010
  #define STM32F4xx_I2C_SR1_STOP_SET(x, v)         do { (x) = (((x) & ~0x10) | ((v) << 4)); } while(0)
  #define STM32F4xx_I2C_SR1_STOP_GET(x)            (((x) >> 4) & 0x1)
  #define STM32F4xx_I2C_SR1_RXNE_MASK              0x00000001
  #define STM32F4xx_I2C_SR1_RXNE                   0x00000040
  #define STM32F4xx_I2C_SR1_RXNE_SET(x, v)         do { (x) = (((x) & ~0x40) | ((v) << 6)); } while(0)
  #define STM32F4xx_I2C_SR1_RXNE_GET(x)            (((x) >> 6) & 0x1)
  #define STM32F4xx_I2C_SR1_TXE_MASK               0x00000001
  #define STM32F4xx_I2C_SR1_TXE                    0x00000080
  #define STM32F4xx_I2C_SR1_TXE_SET(x, v)          do { (x) = (((x) & ~0x80) | ((v) << 7)); } while(0)
  #define STM32F4xx_I2C_SR1_TXE_GET(x)             (((x) >> 7) & 0x1)
  #define STM32F4xx_I2C_SR1_BERR_MASK              0x00000001
  #define STM32F4xx_I2C_SR1_BERR                   0x00000100
  #define STM32F4xx_I2C_SR1_BERR_SET(x, v)         do { (x) = (((x) & ~0x100) | ((v) << 8)); } while(0)
  #define STM32F4xx_I2C_SR1_BERR_GET(x)            (((x) >> 8) & 0x1)
  #define STM32F4xx_I2C_SR1_ARLO_MASK              0x00000001
  #define STM32F4xx_I2C_SR1_ARLO                   0x00000200
  #define STM32F4xx_I2C_SR1_ARLO_SET(x, v)         do { (x) = (((x) & ~0x200) | ((v) << 9)); } while(0)
  #define STM32F4xx_I2C_SR1_ARLO_GET(x)            (((x) >> 9) & 0x1)
  #define STM32F4xx_I2C_SR1_AF_MASK                0x00000001
  #define STM32F4xx_I2C_SR1_AF                     0x00000400
  #define STM32F4xx_I2C_SR1_AF_SET(x, v)           do { (x) = (((x) & ~0x400) | ((v) << 10)); } while(0)
  #define STM32F4xx_I2C_SR1_AF_GET(x)              (((x) >> 10) & 0x1)
  #define STM32F4xx_I2C_SR1_OVR_MASK               0x00000001
  #define STM32F4xx_I2C_SR1_OVR                    0x00000800
  #define STM32F4xx_I2C_SR1_OVR_SET(x, v)          do { (x) = (((x) & ~0x800) | ((v) << 11)); } while(0)
  #define STM32F4xx_I2C_SR1_OVR_GET(x)             (((x) >> 11) & 0x1)
  #define STM32F4xx_I2C_SR1_PECERR_MASK            0x00000001
  #define STM32F4xx_I2C_SR1_PECERR                 0x00001000
  #define STM32F4xx_I2C_SR1_PECERR_SET(x, v)       do { (x) = (((x) & ~0x1000) | ((v) << 12)); } while(0)
  #define STM32F4xx_I2C_SR1_PECERR_GET(x)          (((x) >> 12) & 0x1)
  #define STM32F4xx_I2C_SR1_TIMEOUT_MASK           0x00000001
  #define STM32F4xx_I2C_SR1_TIMEOUT                0x00004000
  #define STM32F4xx_I2C_SR1_TIMEOUT_SET(x, v)      do { (x) = (((x) & ~0x4000) | ((v) << 14)); } while(0)
  #define STM32F4xx_I2C_SR1_TIMEOUT_GET(x)         (((x) >> 14) & 0x1)
  #define STM32F4xx_I2C_SR1_SMBALERT_MASK          0x00000001
  #define STM32F4xx_I2C_SR1_SMBALERT               0x00008000
  #define STM32F4xx_I2C_SR1_SMBALERT_SET(x, v)     do { (x) = (((x) & ~0x8000) | ((v) << 15)); } while(0)
  #define STM32F4xx_I2C_SR1_SMBALERT_GET(x)        (((x) >> 15) & 0x1)

#define STM32F4xx_I2C_SR2_ADDR                       0x00000018
#define STM32F4xx_I2C_SR2_MASK                       0x0000fff7
  #define STM32F4xx_I2C_SR2_MSL_MASK               0x00000001
  #define STM32F4xx_I2C_SR2_MSL                    0x00000001
  #define STM32F4xx_I2C_SR2_MSL_SET(x, v)          do { (x) = (((x) & ~0x1) | ((v) << 0)); } while(0)
  #define STM32F4xx_I2C_SR2_MSL_GET(x)             (((x) >> 0) & 0x1)
  #define STM32F4xx_I2C_SR2_BUSY_MASK              0x00000001
  #define STM32F4xx_I2C_SR2_BUSY                   0x00000002
  #define STM32F4xx_I2C_SR2_BUSY_SET(x, v)         do { (x) = (((x) & ~0x2) | ((v) << 1)); } while(0)
  #define STM32F4xx_I2C_SR2_BUSY_GET(x)            (((x) >> 1) & 0x1)
  #define STM32F4xx_I2C_SR2_TRA_MASK               0x00000001
  #define STM32F4xx_I2C_SR2_TRA                    0x00000004
  #define STM32F4xx_I2C_SR2_TRA_SET(x, v)          do { (x) = (((x) & ~0x4) | ((v) << 2)); } while(0)
  #define STM32F4xx_I2C_SR2_TRA_GET(x)             (((x) >> 2) & 0x1)
  #define STM32F4xx_I2C_SR2_GENCALL_MASK           0x00000001
  #define STM32F4xx_I2C_SR2_GENCALL                0x00000010
  #define STM32F4xx_I2C_SR2_GENCALL_SET(x, v)      do { (x) = (((x) & ~0x10) | ((v) << 4)); } while(0)
  #define STM32F4xx_I2C_SR2_GENCALL_GET(x)         (((x) >> 4) & 0x1)
  #define STM32F4xx_I2C_SR2_SMBDEFAULT_MASK        0x00000001
  #define STM32F4xx_I2C_SR2_SMBDEFAULT             0x00000020
  #define STM32F4xx_I2C_SR2_SMBDEFAULT_SET(x, v)   do { (x) = (((x) & ~0x20) | ((v) << 5)); } while(0)
  #define STM32F4xx_I2C_SR2_SMBDEFAULT_GET(x)      (((x) >> 5) & 0x1)
  #define STM32F4xx_I2C_SR2_SMBHOST_MASK           0x00000001
  #define STM32F4xx_I2C_SR2_SMBHOST                0x00000040
  #define STM32F4xx_I2C_SR2_SMBHOST_SET(x, v)      do { (x) = (((x) & ~0x40) | ((v) << 6)); } while(0)
  #define STM32F4xx_I2C_SR2_SMBHOST_GET(x)         (((x) >> 6) & 0x1)
  #define STM32F4xx_I2C_SR2_DUALF_MASK             0x00000001
  #define STM32F4xx_I2C_SR2_DUALF                  0x00000080
  #define STM32F4xx_I2C_SR2_DUALF_SET(x, v)        do { (x) = (((x) & ~0x80) | ((v) << 7)); } while(0)
  #define STM32F4xx_I2C_SR2_DUALF_GET(x)           (((x) >> 7) & 0x1)
  #define STM32F4xx_I2C_SR2_PEC_MASK               0x000000ff
  #define STM32F4xx_I2C_SR2_PEC(v)                 ((v) << 8)
  #define STM32F4xx_I2C_SR2_PEC_SET(x, v)          do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define STM32F4xx_I2C_SR2_PEC_GET(x)             (((x) >> 8) & 0xff)

#define STM32F4xx_I2C_CCR_ADDR                       0x0000001c
#define STM32F4xx_I2C_CCR_MASK                       0x0000cfff
  #define STM32F4xx_I2C_CCR_CCR_MASK               0x00000fff
  #define STM32F4xx_I2C_CCR_CCR(v)                 ((v) << 0)
  #define STM32F4xx_I2C_CCR_CCR_SET(x, v)          do { (x) = (((x) & ~0xfff) | ((v) << 0)); } while(0)
  #define STM32F4xx_I2C_CCR_CCR_GET(x)             (((x) >> 0) & 0xfff)
  #define STM32F4xx_I2C_CCR_DUTY_MASK              0x00000001
  #define STM32F4xx_I2C_CCR_DUTY                   0x00004000
  #define STM32F4xx_I2C_CCR_DUTY_SET(x, v)         do { (x) = (((x) & ~0x4000) | ((v) << 14)); } while(0)
  #define STM32F4xx_I2C_CCR_DUTY_GET(x)            (((x) >> 14) & 0x1)
  #define STM32F4xx_I2C_CCR_FS_MASK                0x00000001
  #define STM32F4xx_I2C_CCR_FS(v)                  ((STM32F4xx_I2C_CCR_FS_##v) << 15)
  #define STM32F4xx_I2C_CCR_FS_SET(x, v)           do { (x) = (((x) & ~0x8000) | ((STM32F4xx_I2C_CCR_FS_##v) << 15)); } while(0)
  #define STM32F4xx_I2C_CCR_FS_GET(x)              (((x) >> 15) & 0x1)
    #define STM32F4xx_I2C_CCR_FS_SM                  0x00000000
    #define STM32F4xx_I2C_CCR_FS_FM                  0x00000001

#define STM32F4xx_I2C_TRISE_ADDR                     0x00000020
#define STM32F4xx_I2C_TRISE_MASK                     0x00000000

#define STM32F4xx_I2C_FLTR_ADDR                      0x00000024
#define STM32F4xx_I2C_FLTR_MASK                      0x0000001f
  #define STM32F4xx_I2C_FLTR_DNF_MASK              0x0000000f
  #define STM32F4xx_I2C_FLTR_DNF(v)                ((v) << 0)
  #define STM32F4xx_I2C_FLTR_DNF_SET(x, v)         do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define STM32F4xx_I2C_FLTR_DNF_GET(x)            (((x) >> 0) & 0xf)
  #define STM32F4xx_I2C_FLTR_ANOFF_MASK            0x00000001
  #define STM32F4xx_I2C_FLTR_ANOFF                 0x00000010
  #define STM32F4xx_I2C_FLTR_ANOFF_SET(x, v)       do { (x) = (((x) & ~0x10) | ((v) << 4)); } while(0)
  #define STM32F4xx_I2C_FLTR_ANOFF_GET(x)          (((x) >> 4) & 0x1)

#endif

