# PPI

%config CONFIG_DRIVER_NRF5X_PPI_ENUM
  desc nRF5x PPI allocator
  parent CONFIG_ARCH_NRF5X
  flags enum
  default 0
%config end

# Clock

%config CONFIG_DRIVER_NRF5X_CLOCK
  desc Enable nRF5x clock driver
  parent CONFIG_ARCH_NRF5X
  depend CONFIG_DEVICE_CLOCK
  depend CONFIG_DEVICE_IRQ
  flags auto
%config end

%init INIT_NRF5X_CLOCK_INIT
  parent CONFIG_ARCH_NRF5X
  during INIT_BOOTSTRAP
  before INIT_MEMORY
  function arch_nrf5x_clock_init
%init end

%config CONFIG_DRIVER_NRF5X_CLOCK_USE
  desc Allow to explicitly call device_use on clock devices
  parent CONFIG_DEVICE_CLOCK
%config end

%config CONFIG_DRIVER_NRF5X_CLOCK_HFCLK_FREQ
  desc nRF5x High frequency clock frequency (MHz); 0 = not present
  parent CONFIG_ARCH_NRF5X
  flags value
  default 0
%config end

%config CONFIG_DRIVER_NRF5X_CLOCK_LFCLK_XOSC
  desc nRF5x Low frequency clock is 32.768KHz external christal
  parent CONFIG_ARCH_NRF5X
%config end

# GPIO

%config CONFIG_DRIVER_NRF5X_GPIO
  desc Enable nRF5x GPIO driver
  parent CONFIG_ARCH_NRF5X
  depend CONFIG_DEVICE_GPIO
%config end

%config CONFIG_DRIVER_NRF5X_GPIO_ICU_CHANNEL_COUNT
  desc Enable nRF5x GPIO IRQ routing
  parent CONFIG_DRIVER_NRF5X_GPIO
  flags value
  default 0
  range [0,4]
%config end

%config CONFIG_DRIVER_NRF5X_GPIO_ICU
  desc Enable nRF5x GPIO IRQ routing
  parent CONFIG_DRIVER_NRF5X_GPIO
  depend CONFIG_DEVICE_ICU
  depend CONFIG_DEVICE_IRQ
  when CONFIG_DRIVER_NRF5X_GPIO_ICU_CHANNEL_COUNT>0
%config end

%config CONFIG_DRIVER_NRF5X_GPIO_PPI_COUNT
  desc nRF5x GPIO PPI channel count
  parent CONFIG_DRIVER_NRF5X_GPIO
  flags value
  provide CONFIG_DRIVER_NRF5X_PPI_ENUM
  default CONFIG_DRIVER_NRF5X_GPIO_ICU_CHANNEL_COUNT
%config end

%config CONFIG_DRIVER_NRF5X_GPIO_INPUT_RANGE
  desc Enable nRF5x GPIO driver
  parent CONFIG_DRIVER_NRF5X_GPIO
  depend CONFIG_DEVICE_ICU
  depend CONFIG_DEVICE_IRQ
%config end

# Timer+GPIOTE-based PWM

%config CONFIG_DRIVER_NRF5X_GPIO_PWM
  desc Enable nRF5x GPIOTE-based PWM driver
  parent CONFIG_ARCH_NRF5X
  depend CONFIG_DEVICE_PWM
  depend CONFIG_DEVICE_IRQ
  depend CONFIG_DEVICE_IOMUX
%config end

%config CONFIG_DRIVER_NRF5X_GPIO_PWM_CHANNEL_COUNT
  desc Count of nRF5x GPIO PWM driver
  parent CONFIG_DRIVER_NRF5X_GPIO_PWM
  flags value
  default 1
  range [1,3]
%config end

%config CONFIG_DRIVER_NRF5X_GPIO_PWM_PPI_COUNT
  desc Count of nRF5x GPIO PPI channels
  parent CONFIG_DRIVER_NRF5X_GPIO_PWM
  flags value
  provide CONFIG_DRIVER_NRF5X_PPI_ENUM
  default CONFIG_DRIVER_NRF5X_GPIO_PWM_CHANNEL_COUNT*2
%config end

# UART

%config CONFIG_DRIVER_NRF5X_UART
  desc Enable nRF5x UART driver
  parent CONFIG_ARCH_NRF5X
  depend CONFIG_DEVICE_IOMUX
  depend CONFIG_DEVICE_CHAR
  depend CONFIG_DEVICE_IRQ
%config end

%config CONFIG_DRIVER_NRF5X_UART_SWFIFO
  desc Size of the software FIFO.
  parent CONFIG_DRIVER_NRF5X_UART
  flags value
  default 32
  range [1,64]
%config end

# printk() output

%config CONFIG_DRIVER_NRF5X_PRINTK
  desc Pin to use for UART console output
  parent CONFIG_ARCH_NRF5X
  provide CONFIG_MUTEK_PRINTK_HANDLER
%config end

%init INIT_DRIVER_NRF5X_PRINTK
  parent CONFIG_DRIVER_NRF5X_PRINTK
  during INIT_MUTEK_PRINTK
  function nrf5x_printk_init
%init end

%config CONFIG_DRIVER_NRF5X_PRINTK_PIN
  desc Pin to use for UART console output
  parent CONFIG_DRIVER_NRF5X_PRINTK
  flags value
%config end

%config CONFIG_DRIVER_NRF5X_PRINTK_RATE
  desc Baudrate to use for UART console output
  parent CONFIG_DRIVER_NRF5X_PRINTK
  flags value
  default 1000000
%config end
