/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs cdefs_use_reg_mask=1 cdefs_use_field_setval=1
*/

#ifndef _EFM32_CMU_BFGEN_DEFS_
#define _EFM32_CMU_BFGEN_DEFS_

#define EFM32_CMU_CTRL_ADDR                          0x00000000
#define EFM32_CMU_CTRL_MASK                          0x003101ef
  #define EFM32_CMU_CTRL_CLKOUTSEL0(v)             ((EFM32_CMU_CTRL_CLKOUTSEL0_##v) << 0)
  #define EFM32_CMU_CTRL_CLKOUTSEL0_SET(x, v)      do { (x) = (((x) & ~0xf) | ((EFM32_CMU_CTRL_CLKOUTSEL0_##v) << 0)); } while(0)
  #define EFM32_CMU_CTRL_CLKOUTSEL0_SETVAL(x, v)   do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFM32_CMU_CTRL_CLKOUTSEL0_GET(x)         (((x) >> 0) & 0xf)
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL0_DISABLED       0x00000000
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL0_ULFRCO         0x00000001
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL0_LFRCO          0x00000002
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL0_LFXO           0x00000003
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL0_HFXO           0x00000006
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL0_HFEXPCLK       0x00000007
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL0_ULFRCOQ        0x00000009
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL0_LFRCOQ         0x0000000a
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL0_LFXOQ          0x0000000b
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL0_HFRCOQ         0x0000000c
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL0_AUXHFRCOQ      0x0000000d
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL0_HFXOQ          0x0000000e
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL0_HFSRCCLK       0x0000000f
  #define EFM32_CMU_CTRL_CLKOUTSEL1(v)             ((EFM32_CMU_CTRL_CLKOUTSEL1_##v) << 5)
  #define EFM32_CMU_CTRL_CLKOUTSEL1_SET(x, v)      do { (x) = (((x) & ~0x1e0) | ((EFM32_CMU_CTRL_CLKOUTSEL1_##v) << 5)); } while(0)
  #define EFM32_CMU_CTRL_CLKOUTSEL1_SETVAL(x, v)   do { (x) = (((x) & ~0x1e0) | ((v) << 5)); } while(0)
  #define EFM32_CMU_CTRL_CLKOUTSEL1_GET(x)         (((x) >> 5) & 0xf)
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL1_DISABLED       0x00000000
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL1_ULFRCO         0x00000001
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL1_LFRCO          0x00000002
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL1_LFXO           0x00000003
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL1_HFXO           0x00000006
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL1_HFEXPCLK       0x00000007
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL1_ULFRCOQ        0x00000009
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL1_LFRCOQ         0x0000000a
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL1_LFXOQ          0x0000000b
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL1_HFRCOQ         0x0000000c
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL1_AUXHFRCOQ      0x0000000d
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL1_HFXOQ          0x0000000e
/**  */
    #define EFM32_CMU_CTRL_CLKOUTSEL1_HFSRCCLK       0x0000000f
  #define EFM32_CMU_CTRL_WSHFLE                    0x00010000
  #define EFM32_CMU_CTRL_HFPERCLKEN                0x00100000
  #define EFM32_CMU_CTRL_HFRADIOCLKEN              0x00200000

#define EFM32_CMU_HFRCOCTRL_ADDR                     0x00000010
#define EFM32_CMU_HFRCOCTRL_MASK                     0xffff3f7f
  #define EFM32_CMU_HFRCOCTRL_TUNING(v)            ((v) << 0)
  #define EFM32_CMU_HFRCOCTRL_TUNING_SET(x, v)     do { (x) = (((x) & ~0x7f) | ((v) << 0)); } while(0)
  #define EFM32_CMU_HFRCOCTRL_TUNING_GET(x)        (((x) >> 0) & 0x7f)
  #define EFM32_CMU_HFRCOCTRL_FINETUNING(v)        ((v) << 8)
  #define EFM32_CMU_HFRCOCTRL_FINETUNING_SET(x, v) do { (x) = (((x) & ~0x3f00) | ((v) << 8)); } while(0)
  #define EFM32_CMU_HFRCOCTRL_FINETUNING_GET(x)    (((x) >> 8) & 0x3f)
  #define EFM32_CMU_HFRCOCTRL_FREQRANGE(v)         ((EFM32_CMU_HFRCOCTRL_FREQRANGE_##v) << 16)
  #define EFM32_CMU_HFRCOCTRL_FREQRANGE_SET(x, v)  do { (x) = (((x) & ~0x1f0000) | ((EFM32_CMU_HFRCOCTRL_FREQRANGE_##v) << 16)); } while(0)
  #define EFM32_CMU_HFRCOCTRL_FREQRANGE_SETVAL(x, v) do { (x) = (((x) & ~0x1f0000) | ((v) << 16)); } while(0)
  #define EFM32_CMU_HFRCOCTRL_FREQRANGE_GET(x)     (((x) >> 16) & 0x1f)
    #define EFM32_CMU_HFRCOCTRL_FREQRANGE_4MHZ       0x00000000
    #define EFM32_CMU_HFRCOCTRL_FREQRANGE_7MHZ       0x00000003
    #define EFM32_CMU_HFRCOCTRL_FREQRANGE_13MHZ      0x00000006
    #define EFM32_CMU_HFRCOCTRL_FREQRANGE_16MHZ      0x00000007
    #define EFM32_CMU_HFRCOCTRL_FREQRANGE_19MHZ      0x00000008
    #define EFM32_CMU_HFRCOCTRL_FREQRANGE_26MHZ      0x0000000a
    #define EFM32_CMU_HFRCOCTRL_FREQRANGE_32MHZ      0x0000000b
    #define EFM32_CMU_HFRCOCTRL_FREQRANGE_38MHZ      0x0000000c
  #define EFM32_CMU_HFRCOCTRL_CMPBIAS(v)           ((v) << 21)
  #define EFM32_CMU_HFRCOCTRL_CMPBIAS_SET(x, v)    do { (x) = (((x) & ~0xe00000) | ((v) << 21)); } while(0)
  #define EFM32_CMU_HFRCOCTRL_CMPBIAS_GET(x)       (((x) >> 21) & 0x7)
  #define EFM32_CMU_HFRCOCTRL_LDOHP                0x01000000
  #define EFM32_CMU_HFRCOCTRL_CLKDIV(v)            ((EFM32_CMU_HFRCOCTRL_CLKDIV_##v) << 25)
  #define EFM32_CMU_HFRCOCTRL_CLKDIV_SET(x, v)     do { (x) = (((x) & ~0x6000000) | ((EFM32_CMU_HFRCOCTRL_CLKDIV_##v) << 25)); } while(0)
  #define EFM32_CMU_HFRCOCTRL_CLKDIV_SETVAL(x, v)  do { (x) = (((x) & ~0x6000000) | ((v) << 25)); } while(0)
  #define EFM32_CMU_HFRCOCTRL_CLKDIV_GET(x)        (((x) >> 25) & 0x3)
/**  */
    #define EFM32_CMU_HFRCOCTRL_CLKDIV_DIV1          0x00000000
/**  */
    #define EFM32_CMU_HFRCOCTRL_CLKDIV_DIV2          0x00000001
/**  */
    #define EFM32_CMU_HFRCOCTRL_CLKDIV_DIV4          0x00000002
  #define EFM32_CMU_HFRCOCTRL_FINETUNINGEN         0x08000000
  #define EFM32_CMU_HFRCOCTRL_VREFTC(v)            ((v) << 28)
  #define EFM32_CMU_HFRCOCTRL_VREFTC_SET(x, v)     do { (x) = (((x) & ~0xf0000000) | ((v) << 28)); } while(0)
  #define EFM32_CMU_HFRCOCTRL_VREFTC_GET(x)        (((x) >> 28) & 0xf)

#define EFM32_CMU_HFRCOLDOCTRL_ADDR                  0x00000014
#define EFM32_CMU_HFRCOLDOCTRL_MASK                  0x00000077
  #define EFM32_CMU_HFRCOLDOCTRL_STANDBY           0x00000001
  #define EFM32_CMU_HFRCOLDOCTRL_PSRENHANCE        0x00000002
  #define EFM32_CMU_HFRCOLDOCTRL_PDDIS             0x00000004
  #define EFM32_CMU_HFRCOLDOCTRL_TRIM(v)           ((v) << 4)
  #define EFM32_CMU_HFRCOLDOCTRL_TRIM_SET(x, v)    do { (x) = (((x) & ~0x70) | ((v) << 4)); } while(0)
  #define EFM32_CMU_HFRCOLDOCTRL_TRIM_GET(x)       (((x) >> 4) & 0x7)

#define EFM32_CMU_AUXHFRCOCTRL_ADDR                  0x00000018
#define EFM32_CMU_AUXHFRCOCTRL_MASK                  0xffff3f7f
  #define EFM32_CMU_AUXHFRCOCTRL_TUNING(v)         ((v) << 0)
  #define EFM32_CMU_AUXHFRCOCTRL_TUNING_SET(x, v)  do { (x) = (((x) & ~0x7f) | ((v) << 0)); } while(0)
  #define EFM32_CMU_AUXHFRCOCTRL_TUNING_GET(x)     (((x) >> 0) & 0x7f)
  #define EFM32_CMU_AUXHFRCOCTRL_FINETUNING(v)     ((v) << 8)
  #define EFM32_CMU_AUXHFRCOCTRL_FINETUNING_SET(x, v) do { (x) = (((x) & ~0x3f00) | ((v) << 8)); } while(0)
  #define EFM32_CMU_AUXHFRCOCTRL_FINETUNING_GET(x) (((x) >> 8) & 0x3f)
  #define EFM32_CMU_AUXHFRCOCTRL_FREQRANGE(v)      ((EFM32_CMU_AUXHFRCOCTRL_FREQRANGE_##v) << 16)
  #define EFM32_CMU_AUXHFRCOCTRL_FREQRANGE_SET(x, v) do { (x) = (((x) & ~0x1f0000) | ((EFM32_CMU_AUXHFRCOCTRL_FREQRANGE_##v) << 16)); } while(0)
  #define EFM32_CMU_AUXHFRCOCTRL_FREQRANGE_SETVAL(x, v) do { (x) = (((x) & ~0x1f0000) | ((v) << 16)); } while(0)
  #define EFM32_CMU_AUXHFRCOCTRL_FREQRANGE_GET(x)  (((x) >> 16) & 0x1f)
    #define EFM32_CMU_AUXHFRCOCTRL_FREQRANGE_4MHZ    0x00000000
    #define EFM32_CMU_AUXHFRCOCTRL_FREQRANGE_7MHZ    0x00000003
    #define EFM32_CMU_AUXHFRCOCTRL_FREQRANGE_13MHZ   0x00000006
    #define EFM32_CMU_AUXHFRCOCTRL_FREQRANGE_16MHZ   0x00000007
    #define EFM32_CMU_AUXHFRCOCTRL_FREQRANGE_19MHZ   0x00000008
    #define EFM32_CMU_AUXHFRCOCTRL_FREQRANGE_26MHZ   0x0000000a
    #define EFM32_CMU_AUXHFRCOCTRL_FREQRANGE_32MHZ   0x0000000b
    #define EFM32_CMU_AUXHFRCOCTRL_FREQRANGE_38MHZ   0x0000000c
  #define EFM32_CMU_AUXHFRCOCTRL_CMPBIAS(v)        ((v) << 21)
  #define EFM32_CMU_AUXHFRCOCTRL_CMPBIAS_SET(x, v) do { (x) = (((x) & ~0xe00000) | ((v) << 21)); } while(0)
  #define EFM32_CMU_AUXHFRCOCTRL_CMPBIAS_GET(x)    (((x) >> 21) & 0x7)
  #define EFM32_CMU_AUXHFRCOCTRL_LDOHP             0x01000000
  #define EFM32_CMU_AUXHFRCOCTRL_CLKDIV(v)         ((EFM32_CMU_AUXHFRCOCTRL_CLKDIV_##v) << 25)
  #define EFM32_CMU_AUXHFRCOCTRL_CLKDIV_SET(x, v)  do { (x) = (((x) & ~0x6000000) | ((EFM32_CMU_AUXHFRCOCTRL_CLKDIV_##v) << 25)); } while(0)
  #define EFM32_CMU_AUXHFRCOCTRL_CLKDIV_SETVAL(x, v) do { (x) = (((x) & ~0x6000000) | ((v) << 25)); } while(0)
  #define EFM32_CMU_AUXHFRCOCTRL_CLKDIV_GET(x)     (((x) >> 25) & 0x3)
/**  */
    #define EFM32_CMU_AUXHFRCOCTRL_CLKDIV_DIV1       0x00000000
/**  */
    #define EFM32_CMU_AUXHFRCOCTRL_CLKDIV_DIV2       0x00000001
/**  */
    #define EFM32_CMU_AUXHFRCOCTRL_CLKDIV_DIV4       0x00000002
  #define EFM32_CMU_AUXHFRCOCTRL_FINETUNINGEN      0x08000000
  #define EFM32_CMU_AUXHFRCOCTRL_VREFTC(v)         ((v) << 28)
  #define EFM32_CMU_AUXHFRCOCTRL_VREFTC_SET(x, v)  do { (x) = (((x) & ~0xf0000000) | ((v) << 28)); } while(0)
  #define EFM32_CMU_AUXHFRCOCTRL_VREFTC_GET(x)     (((x) >> 28) & 0xf)

#define EFM32_CMU_AUXHFRCOLDOCTRL_ADDR               0x0000001c
#define EFM32_CMU_AUXHFRCOLDOCTRL_MASK               0x00000077
  #define EFM32_CMU_AUXHFRCOLDOCTRL_STANDBY        0x00000001
  #define EFM32_CMU_AUXHFRCOLDOCTRL_PSRENHANCE     0x00000002
  #define EFM32_CMU_AUXHFRCOLDOCTRL_PDDIS          0x00000004
  #define EFM32_CMU_AUXHFRCOLDOCTRL_TRIM(v)        ((v) << 4)
  #define EFM32_CMU_AUXHFRCOLDOCTRL_TRIM_SET(x, v) do { (x) = (((x) & ~0x70) | ((v) << 4)); } while(0)
  #define EFM32_CMU_AUXHFRCOLDOCTRL_TRIM_GET(x)    (((x) >> 4) & 0x7)

#define EFM32_CMU_LFRCOCTRL_ADDR                     0x00000020
#define EFM32_CMU_LFRCOCTRL_MASK                     0xf30701ff
  #define EFM32_CMU_LFRCOCTRL_TUNING(v)            ((v) << 0)
  #define EFM32_CMU_LFRCOCTRL_TUNING_SET(x, v)     do { (x) = (((x) & ~0x1ff) | ((v) << 0)); } while(0)
  #define EFM32_CMU_LFRCOCTRL_TUNING_GET(x)        (((x) >> 0) & 0x1ff)
  #define EFM32_CMU_LFRCOCTRL_ENVREF               0x00010000
  #define EFM32_CMU_LFRCOCTRL_ENCHOP               0x00020000
  #define EFM32_CMU_LFRCOCTRL_ENDEM                0x00040000
  #define EFM32_CMU_LFRCOCTRL_TIMEOUT(v)           ((EFM32_CMU_LFRCOCTRL_TIMEOUT_##v) << 24)
  #define EFM32_CMU_LFRCOCTRL_TIMEOUT_SET(x, v)    do { (x) = (((x) & ~0x3000000) | ((EFM32_CMU_LFRCOCTRL_TIMEOUT_##v) << 24)); } while(0)
  #define EFM32_CMU_LFRCOCTRL_TIMEOUT_SETVAL(x, v) do { (x) = (((x) & ~0x3000000) | ((v) << 24)); } while(0)
  #define EFM32_CMU_LFRCOCTRL_TIMEOUT_GET(x)       (((x) >> 24) & 0x3)
/**  */
    #define EFM32_CMU_LFRCOCTRL_TIMEOUT_E2CYCLES     0x00000000
/**  */
    #define EFM32_CMU_LFRCOCTRL_TIMEOUT_E16CYCLES    0x00000001
/**  */
    #define EFM32_CMU_LFRCOCTRL_TIMEOUT_E32CYCLES    0x00000002
  #define EFM32_CMU_LFRCOCTRL_GMCCURTUNE(v)        ((v) << 28)
  #define EFM32_CMU_LFRCOCTRL_GMCCURTUNE_SET(x, v) do { (x) = (((x) & ~0xf0000000) | ((v) << 28)); } while(0)
  #define EFM32_CMU_LFRCOCTRL_GMCCURTUNE_GET(x)    (((x) >> 28) & 0xf)

#define EFM32_CMU_HFXOCTRL_ADDR                      0x00000024
#define EFM32_CMU_HFXOCTRL_MASK                      0x77000f31
  #define EFM32_CMU_HFXOCTRL_MODE                  0x00000001
  #define EFM32_CMU_HFXOCTRL_PEAKDETSHUNTOPTMODE(v) ((EFM32_CMU_HFXOCTRL_PEAKDETSHUNTOPTMODE_##v) << 4)
  #define EFM32_CMU_HFXOCTRL_PEAKDETSHUNTOPTMODE_SET(x, v) do { (x) = (((x) & ~0x30) | ((EFM32_CMU_HFXOCTRL_PEAKDETSHUNTOPTMODE_##v) << 4)); } while(0)
  #define EFM32_CMU_HFXOCTRL_PEAKDETSHUNTOPTMODE_SETVAL(x, v) do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define EFM32_CMU_HFXOCTRL_PEAKDETSHUNTOPTMODE_GET(x) (((x) >> 4) & 0x3)
/**  */
    #define EFM32_CMU_HFXOCTRL_PEAKDETSHUNTOPTMODE_AUTOCMD 0x00000000
/**  */
    #define EFM32_CMU_HFXOCTRL_PEAKDETSHUNTOPTMODE_CMD 0x00000001
/**  */
    #define EFM32_CMU_HFXOCTRL_PEAKDETSHUNTOPTMODE_MANUAL 0x00000002
  #define EFM32_CMU_HFXOCTRL_LOWPOWER              0x00000100
  #define EFM32_CMU_HFXOCTRL_XTI2GND               0x00000200
  #define EFM32_CMU_HFXOCTRL_XTO2GND               0x00000400
  #define EFM32_CMU_HFXOCTRL_KEEPWARM              0x00000800
  #define EFM32_CMU_HFXOCTRL_LFTIMEOUT(v)          ((EFM32_CMU_HFXOCTRL_LFTIMEOUT_##v) << 24)
  #define EFM32_CMU_HFXOCTRL_LFTIMEOUT_SET(x, v)   do { (x) = (((x) & ~0x7000000) | ((EFM32_CMU_HFXOCTRL_LFTIMEOUT_##v) << 24)); } while(0)
  #define EFM32_CMU_HFXOCTRL_LFTIMEOUT_SETVAL(x, v) do { (x) = (((x) & ~0x7000000) | ((v) << 24)); } while(0)
  #define EFM32_CMU_HFXOCTRL_LFTIMEOUT_GET(x)      (((x) >> 24) & 0x7)
/**  */
    #define EFM32_CMU_HFXOCTRL_LFTIMEOUT_E0CYCLES    0x00000000
/**  */
    #define EFM32_CMU_HFXOCTRL_LFTIMEOUT_E2CYCLES    0x00000001
/**  */
    #define EFM32_CMU_HFXOCTRL_LFTIMEOUT_E4CYCLES    0x00000002
/**  */
    #define EFM32_CMU_HFXOCTRL_LFTIMEOUT_E16CYCLES   0x00000003
/**  */
    #define EFM32_CMU_HFXOCTRL_LFTIMEOUT_E32CYCLES   0x00000004
/**  */
    #define EFM32_CMU_HFXOCTRL_LFTIMEOUT_E64CYCLES   0x00000005
/**  */
    #define EFM32_CMU_HFXOCTRL_LFTIMEOUT_E1KCYCLES   0x00000006
/**  */
    #define EFM32_CMU_HFXOCTRL_LFTIMEOUT_E4KCYCLES   0x00000007
  #define EFM32_CMU_HFXOCTRL_AUTOSTARTEM0EM1       0x10000000
  #define EFM32_CMU_HFXOCTRL_AUTOSTARTSELEM0EM1    0x20000000
  #define EFM32_CMU_HFXOCTRL_AUTOSTARTRDYSELRAC    0x40000000

#define EFM32_CMU_HFXOCTRL1_ADDR                     0x00000028
#define EFM32_CMU_HFXOCTRL1_MASK                     0x00000f77
  #define EFM32_CMU_HFXOCTRL1_PEAKDETTHR(v)        ((v) << 0)
  #define EFM32_CMU_HFXOCTRL1_PEAKDETTHR_SET(x, v) do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFM32_CMU_HFXOCTRL1_PEAKDETTHR_GET(x)    (((x) >> 0) & 0x7)
  #define EFM32_CMU_HFXOCTRL1_REGLVL(v)            ((v) << 4)
  #define EFM32_CMU_HFXOCTRL1_REGLVL_SET(x, v)     do { (x) = (((x) & ~0x70) | ((v) << 4)); } while(0)
  #define EFM32_CMU_HFXOCTRL1_REGLVL_GET(x)        (((x) >> 4) & 0x7)
  #define EFM32_CMU_HFXOCTRL1_SQBLWPDCEN           0x00000100
  #define EFM32_CMU_HFXOCTRL1_XTIBIASEN            0x00000200
  #define EFM32_CMU_HFXOCTRL1_SQBMODE(v)           ((v) << 10)
  #define EFM32_CMU_HFXOCTRL1_SQBMODE_SET(x, v)    do { (x) = (((x) & ~0xc00) | ((v) << 10)); } while(0)
  #define EFM32_CMU_HFXOCTRL1_SQBMODE_GET(x)       (((x) >> 10) & 0x3)

#define EFM32_CMU_HFXOSTARTUPCTRL_ADDR               0x0000002c
#define EFM32_CMU_HFXOSTARTUPCTRL_MASK               0xffeff87f
  #define EFM32_CMU_HFXOSTARTUPCTRL_IBTRIMXOCORE(v) ((v) << 0)
  #define EFM32_CMU_HFXOSTARTUPCTRL_IBTRIMXOCORE_SET(x, v) do { (x) = (((x) & ~0x7f) | ((v) << 0)); } while(0)
  #define EFM32_CMU_HFXOSTARTUPCTRL_IBTRIMXOCORE_GET(x) (((x) >> 0) & 0x7f)
  #define EFM32_CMU_HFXOSTARTUPCTRL_CTUNE(v)       ((v) << 11)
  #define EFM32_CMU_HFXOSTARTUPCTRL_CTUNE_SET(x, v) do { (x) = (((x) & ~0xff800) | ((v) << 11)); } while(0)
  #define EFM32_CMU_HFXOSTARTUPCTRL_CTUNE_GET(x)   (((x) >> 11) & 0x1ff)
  #define EFM32_CMU_HFXOSTARTUPCTRL_IBTRIMXOCOREWARM(v) ((v) << 21)
  #define EFM32_CMU_HFXOSTARTUPCTRL_IBTRIMXOCOREWARM_SET(x, v) do { (x) = (((x) & ~0xfe00000) | ((v) << 21)); } while(0)
  #define EFM32_CMU_HFXOSTARTUPCTRL_IBTRIMXOCOREWARM_GET(x) (((x) >> 21) & 0x7f)
  #define EFM32_CMU_HFXOSTARTUPCTRL_REGISHWARM(v)  ((v) << 28)
  #define EFM32_CMU_HFXOSTARTUPCTRL_REGISHWARM_SET(x, v) do { (x) = (((x) & ~0xf0000000) | ((v) << 28)); } while(0)
  #define EFM32_CMU_HFXOSTARTUPCTRL_REGISHWARM_GET(x) (((x) >> 28) & 0xf)

#define EFM32_CMU_HFXOSTEADYSTATECTRL_ADDR           0x00000030
#define EFM32_CMU_HFXOSTEADYSTATECTRL_MASK           0xf70fffff
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_IBTRIMXOCORE(v) ((v) << 0)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_IBTRIMXOCORE_SET(x, v) do { (x) = (((x) & ~0x7f) | ((v) << 0)); } while(0)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_IBTRIMXOCORE_GET(x) (((x) >> 0) & 0x7f)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_REGISH(v)  ((v) << 7)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_REGISH_SET(x, v) do { (x) = (((x) & ~0x780) | ((v) << 7)); } while(0)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_REGISH_GET(x) (((x) >> 7) & 0xf)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_CTUNE(v)   ((v) << 11)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_CTUNE_SET(x, v) do { (x) = (((x) & ~0xff800) | ((v) << 11)); } while(0)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_CTUNE_GET(x) (((x) >> 11) & 0x1ff)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_REGSELILOW(v) ((v) << 24)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_REGSELILOW_SET(x, v) do { (x) = (((x) & ~0x3000000) | ((v) << 24)); } while(0)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_REGSELILOW_GET(x) (((x) >> 24) & 0x3)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_PEAKDETEN  0x04000000
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_REGISHUPPER(v) ((v) << 28)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_REGISHUPPER_SET(x, v) do { (x) = (((x) & ~0xf0000000) | ((v) << 28)); } while(0)
  #define EFM32_CMU_HFXOSTEADYSTATECTRL_REGISHUPPER_GET(x) (((x) >> 28) & 0xf)

#define EFM32_CMU_HFXOTIMEOUTCTRL_ADDR               0x00000034
#define EFM32_CMU_HFXOTIMEOUTCTRL_MASK               0x000fffff
  #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT(v) ((EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_##v) << 0)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_SET(x, v) do { (x) = (((x) & ~0xf) | ((EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_##v) << 0)); } while(0)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_SETVAL(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_GET(x) (((x) >> 0) & 0xf)
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_E2CYCLES 0x00000000
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_E4CYCLES 0x00000001
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_E16CYCLES 0x00000002
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_E32CYCLES 0x00000003
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_E256CYCLES 0x00000004
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_E1KCYCLES 0x00000005
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_E2KCYCLES 0x00000006
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_E4KCYCLES 0x00000007
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_E8KCYCLES 0x00000008
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_E16KCYCLES 0x00000009
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT_E32KCYCLES 0x0000000a
  #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT(v) ((EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_##v) << 4)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_SET(x, v) do { (x) = (((x) & ~0xf0) | ((EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_##v) << 4)); } while(0)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_SETVAL(x, v) do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_GET(x) (((x) >> 4) & 0xf)
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_E2CYCLES 0x00000000
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_E4CYCLES 0x00000001
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_E16CYCLES 0x00000002
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_E32CYCLES 0x00000003
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_E256CYCLES 0x00000004
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_E1KCYCLES 0x00000005
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_E2KCYCLES 0x00000006
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_E4KCYCLES 0x00000007
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_E8KCYCLES 0x00000008
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_E16KCYCLES 0x00000009
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT_E32KCYCLES 0x0000000a
  #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT(v) ((EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_##v) << 8)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_SET(x, v) do { (x) = (((x) & ~0xf00) | ((EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_##v) << 8)); } while(0)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_SETVAL(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_GET(x) (((x) >> 8) & 0xf)
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_E2CYCLES 0x00000000
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_E4CYCLES 0x00000001
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_E16CYCLES 0x00000002
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_E32CYCLES 0x00000003
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_E256CYCLES 0x00000004
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_E1KCYCLES 0x00000005
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_E2KCYCLES 0x00000006
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_E4KCYCLES 0x00000007
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_E8KCYCLES 0x00000008
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_E16KCYCLES 0x00000009
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_WARMSTEADYTIMEOUT_E32KCYCLES 0x0000000a
  #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT(v) ((EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_##v) << 12)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_SET(x, v) do { (x) = (((x) & ~0xf000) | ((EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_##v) << 12)); } while(0)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_SETVAL(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_GET(x) (((x) >> 12) & 0xf)
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_E2CYCLES 0x00000000
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_E4CYCLES 0x00000001
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_E16CYCLES 0x00000002
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_E32CYCLES 0x00000003
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_E256CYCLES 0x00000004
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_E1KCYCLES 0x00000005
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_E2KCYCLES 0x00000006
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_E4KCYCLES 0x00000007
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_E8KCYCLES 0x00000008
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_E16KCYCLES 0x00000009
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT_E32KCYCLES 0x0000000a
  #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT(v) ((EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_##v) << 16)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_SET(x, v) do { (x) = (((x) & ~0xf0000) | ((EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_##v) << 16)); } while(0)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_SETVAL(x, v) do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_GET(x) (((x) >> 16) & 0xf)
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_E2CYCLES 0x00000000
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_E4CYCLES 0x00000001
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_E16CYCLES 0x00000002
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_E32CYCLES 0x00000003
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_E256CYCLES 0x00000004
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_E1KCYCLES 0x00000005
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_E2KCYCLES 0x00000006
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_E4KCYCLES 0x00000007
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_E8KCYCLES 0x00000008
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_E16KCYCLES 0x00000009
/**  */
    #define EFM32_CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT_E32KCYCLES 0x0000000a

#define EFM32_CMU_LFXOCTRL_ADDR                      0x00000038
#define EFM32_CMU_LFXOCTRL_MASK                      0x0713db7f
  #define EFM32_CMU_LFXOCTRL_TUNING(v)             ((v) << 0)
  #define EFM32_CMU_LFXOCTRL_TUNING_SET(x, v)      do { (x) = (((x) & ~0x7f) | ((v) << 0)); } while(0)
  #define EFM32_CMU_LFXOCTRL_TUNING_GET(x)         (((x) >> 0) & 0x7f)
  #define EFM32_CMU_LFXOCTRL_MODE(v)               ((EFM32_CMU_LFXOCTRL_MODE_##v) << 8)
  #define EFM32_CMU_LFXOCTRL_MODE_SET(x, v)        do { (x) = (((x) & ~0x300) | ((EFM32_CMU_LFXOCTRL_MODE_##v) << 8)); } while(0)
  #define EFM32_CMU_LFXOCTRL_MODE_SETVAL(x, v)     do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define EFM32_CMU_LFXOCTRL_MODE_GET(x)           (((x) >> 8) & 0x3)
/**  */
    #define EFM32_CMU_LFXOCTRL_MODE_XTAL             0x00000000
/**  */
    #define EFM32_CMU_LFXOCTRL_MODE_BUFEXTCLK        0x00000001
/**  */
    #define EFM32_CMU_LFXOCTRL_MODE_DIGEXTCLK        0x00000002
  #define EFM32_CMU_LFXOCTRL_GAIN(v)               ((v) << 11)
  #define EFM32_CMU_LFXOCTRL_GAIN_SET(x, v)        do { (x) = (((x) & ~0x1800) | ((v) << 11)); } while(0)
  #define EFM32_CMU_LFXOCTRL_GAIN_GET(x)           (((x) >> 11) & 0x3)
  #define EFM32_CMU_LFXOCTRL_HIGHAMPL              0x00004000
  #define EFM32_CMU_LFXOCTRL_AGC                   0x00008000
  #define EFM32_CMU_LFXOCTRL_CUR(v)                ((v) << 16)
  #define EFM32_CMU_LFXOCTRL_CUR_SET(x, v)         do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define EFM32_CMU_LFXOCTRL_CUR_GET(x)            (((x) >> 16) & 0x3)
  #define EFM32_CMU_LFXOCTRL_BUFCUR                0x00100000
  #define EFM32_CMU_LFXOCTRL_TIMEOUT(v)            ((EFM32_CMU_LFXOCTRL_TIMEOUT_##v) << 24)
  #define EFM32_CMU_LFXOCTRL_TIMEOUT_SET(x, v)     do { (x) = (((x) & ~0x7000000) | ((EFM32_CMU_LFXOCTRL_TIMEOUT_##v) << 24)); } while(0)
  #define EFM32_CMU_LFXOCTRL_TIMEOUT_SETVAL(x, v)  do { (x) = (((x) & ~0x7000000) | ((v) << 24)); } while(0)
  #define EFM32_CMU_LFXOCTRL_TIMEOUT_GET(x)        (((x) >> 24) & 0x7)
/**  */
    #define EFM32_CMU_LFXOCTRL_TIMEOUT_E2CYCLES      0x00000000
/**  */
    #define EFM32_CMU_LFXOCTRL_TIMEOUT_E256CYCLES    0x00000001
/**  */
    #define EFM32_CMU_LFXOCTRL_TIMEOUT_E1KCYCLES     0x00000002
/**  */
    #define EFM32_CMU_LFXOCTRL_TIMEOUT_E2KCYCLES     0x00000003
/**  */
    #define EFM32_CMU_LFXOCTRL_TIMEOUT_E4KCYCLES     0x00000004
/**  */
    #define EFM32_CMU_LFXOCTRL_TIMEOUT_E8KCYCLES     0x00000005
/**  */
    #define EFM32_CMU_LFXOCTRL_TIMEOUT_E16KCYCLES    0x00000006
/**  */
    #define EFM32_CMU_LFXOCTRL_TIMEOUT_E32KCYCLES    0x00000007

#define EFM32_CMU_ULFRCOCTRL_ADDR                    0x0000003c
#define EFM32_CMU_ULFRCOCTRL_MASK                    0x00030d3f
  #define EFM32_CMU_ULFRCOCTRL_TUNING(v)           ((v) << 0)
  #define EFM32_CMU_ULFRCOCTRL_TUNING_SET(x, v)    do { (x) = (((x) & ~0x3f) | ((v) << 0)); } while(0)
  #define EFM32_CMU_ULFRCOCTRL_TUNING_GET(x)       (((x) >> 0) & 0x3f)
  #define EFM32_CMU_ULFRCOCTRL_EN                  0x00000100
  #define EFM32_CMU_ULFRCOCTRL_MODE(v)             ((EFM32_CMU_ULFRCOCTRL_MODE_##v) << 10)
  #define EFM32_CMU_ULFRCOCTRL_MODE_SET(x, v)      do { (x) = (((x) & ~0xc00) | ((EFM32_CMU_ULFRCOCTRL_MODE_##v) << 10)); } while(0)
  #define EFM32_CMU_ULFRCOCTRL_MODE_SETVAL(x, v)   do { (x) = (((x) & ~0xc00) | ((v) << 10)); } while(0)
  #define EFM32_CMU_ULFRCOCTRL_MODE_GET(x)         (((x) >> 10) & 0x3)
/**  */
    #define EFM32_CMU_ULFRCOCTRL_MODE_E1KHZ          0x00000000
/**  */
    #define EFM32_CMU_ULFRCOCTRL_MODE_E2KHZ          0x00000001
/**  */
    #define EFM32_CMU_ULFRCOCTRL_MODE_E4KHZ          0x00000002
/**  */
    #define EFM32_CMU_ULFRCOCTRL_MODE_E32KHZ         0x00000003
  #define EFM32_CMU_ULFRCOCTRL_RESTRIM(v)          ((v) << 16)
  #define EFM32_CMU_ULFRCOCTRL_RESTRIM_SET(x, v)   do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define EFM32_CMU_ULFRCOCTRL_RESTRIM_GET(x)      (((x) >> 16) & 0x3)

#define EFM32_CMU_CALCTRL_ADDR                       0x00000050
#define EFM32_CMU_CALCTRL_MASK                       0x0f0f0177
  #define EFM32_CMU_CALCTRL_UPSEL(v)               ((EFM32_CMU_CALCTRL_UPSEL_##v) << 0)
  #define EFM32_CMU_CALCTRL_UPSEL_SET(x, v)        do { (x) = (((x) & ~0x7) | ((EFM32_CMU_CALCTRL_UPSEL_##v) << 0)); } while(0)
  #define EFM32_CMU_CALCTRL_UPSEL_SETVAL(x, v)     do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFM32_CMU_CALCTRL_UPSEL_GET(x)           (((x) >> 0) & 0x7)
/**  */
    #define EFM32_CMU_CALCTRL_UPSEL_HFXO             0x00000000
/**  */
    #define EFM32_CMU_CALCTRL_UPSEL_LFXO             0x00000001
/**  */
    #define EFM32_CMU_CALCTRL_UPSEL_HFRCO            0x00000002
/**  */
    #define EFM32_CMU_CALCTRL_UPSEL_LFRCO            0x00000003
/**  */
    #define EFM32_CMU_CALCTRL_UPSEL_AUXHFRCO         0x00000004
/**  */
    #define EFM32_CMU_CALCTRL_UPSEL_PRS              0x00000005
  #define EFM32_CMU_CALCTRL_DOWNSEL(v)             ((EFM32_CMU_CALCTRL_DOWNSEL_##v) << 4)
  #define EFM32_CMU_CALCTRL_DOWNSEL_SET(x, v)      do { (x) = (((x) & ~0x70) | ((EFM32_CMU_CALCTRL_DOWNSEL_##v) << 4)); } while(0)
  #define EFM32_CMU_CALCTRL_DOWNSEL_SETVAL(x, v)   do { (x) = (((x) & ~0x70) | ((v) << 4)); } while(0)
  #define EFM32_CMU_CALCTRL_DOWNSEL_GET(x)         (((x) >> 4) & 0x7)
/**  */
    #define EFM32_CMU_CALCTRL_DOWNSEL_HFCLK          0x00000000
/**  */
    #define EFM32_CMU_CALCTRL_DOWNSEL_HFXO           0x00000001
/**  */
    #define EFM32_CMU_CALCTRL_DOWNSEL_LFXO           0x00000002
/**  */
    #define EFM32_CMU_CALCTRL_DOWNSEL_HFRCO          0x00000003
/**  */
    #define EFM32_CMU_CALCTRL_DOWNSEL_LFRCO          0x00000004
/**  */
    #define EFM32_CMU_CALCTRL_DOWNSEL_AUXHFRCO       0x00000005
/**  */
    #define EFM32_CMU_CALCTRL_DOWNSEL_PRS            0x00000006
  #define EFM32_CMU_CALCTRL_CONT                   0x00000100
  #define EFM32_CMU_CALCTRL_PRSUPSEL(v)            ((EFM32_CMU_CALCTRL_PRSUPSEL_##v) << 16)
  #define EFM32_CMU_CALCTRL_PRSUPSEL_SET(x, v)     do { (x) = (((x) & ~0xf0000) | ((EFM32_CMU_CALCTRL_PRSUPSEL_##v) << 16)); } while(0)
  #define EFM32_CMU_CALCTRL_PRSUPSEL_SETVAL(x, v)  do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFM32_CMU_CALCTRL_PRSUPSEL_GET(x)        (((x) >> 16) & 0xf)
/**  */
    #define EFM32_CMU_CALCTRL_PRSUPSEL_PRSCH0        0x00000000
/**  */
    #define EFM32_CMU_CALCTRL_PRSUPSEL_PRSCH1        0x00000001
/**  */
    #define EFM32_CMU_CALCTRL_PRSUPSEL_PRSCH2        0x00000002
/**  */
    #define EFM32_CMU_CALCTRL_PRSUPSEL_PRSCH3        0x00000003
/**  */
    #define EFM32_CMU_CALCTRL_PRSUPSEL_PRSCH4        0x00000004
/**  */
    #define EFM32_CMU_CALCTRL_PRSUPSEL_PRSCH5        0x00000005
/**  */
    #define EFM32_CMU_CALCTRL_PRSUPSEL_PRSCH6        0x00000006
/**  */
    #define EFM32_CMU_CALCTRL_PRSUPSEL_PRSCH7        0x00000007
/**  */
    #define EFM32_CMU_CALCTRL_PRSUPSEL_PRSCH8        0x00000008
/**  */
    #define EFM32_CMU_CALCTRL_PRSUPSEL_PRSCH9        0x00000009
/**  */
    #define EFM32_CMU_CALCTRL_PRSUPSEL_PRSCH10       0x0000000a
/**  */
    #define EFM32_CMU_CALCTRL_PRSUPSEL_PRSCH11       0x0000000b
  #define EFM32_CMU_CALCTRL_PRSDOWNSEL(v)          ((EFM32_CMU_CALCTRL_PRSDOWNSEL_##v) << 24)
  #define EFM32_CMU_CALCTRL_PRSDOWNSEL_SET(x, v)   do { (x) = (((x) & ~0xf000000) | ((EFM32_CMU_CALCTRL_PRSDOWNSEL_##v) << 24)); } while(0)
  #define EFM32_CMU_CALCTRL_PRSDOWNSEL_SETVAL(x, v) do { (x) = (((x) & ~0xf000000) | ((v) << 24)); } while(0)
  #define EFM32_CMU_CALCTRL_PRSDOWNSEL_GET(x)      (((x) >> 24) & 0xf)
/**  */
    #define EFM32_CMU_CALCTRL_PRSDOWNSEL_PRSCH0      0x00000000
/**  */
    #define EFM32_CMU_CALCTRL_PRSDOWNSEL_PRSCH1      0x00000001
/**  */
    #define EFM32_CMU_CALCTRL_PRSDOWNSEL_PRSCH2      0x00000002
/**  */
    #define EFM32_CMU_CALCTRL_PRSDOWNSEL_PRSCH3      0x00000003
/**  */
    #define EFM32_CMU_CALCTRL_PRSDOWNSEL_PRSCH4      0x00000004
/**  */
    #define EFM32_CMU_CALCTRL_PRSDOWNSEL_PRSCH5      0x00000005
/**  */
    #define EFM32_CMU_CALCTRL_PRSDOWNSEL_PRSCH6      0x00000006
/**  */
    #define EFM32_CMU_CALCTRL_PRSDOWNSEL_PRSCH7      0x00000007
/**  */
    #define EFM32_CMU_CALCTRL_PRSDOWNSEL_PRSCH8      0x00000008
/**  */
    #define EFM32_CMU_CALCTRL_PRSDOWNSEL_PRSCH9      0x00000009
/**  */
    #define EFM32_CMU_CALCTRL_PRSDOWNSEL_PRSCH10     0x0000000a
/**  */
    #define EFM32_CMU_CALCTRL_PRSDOWNSEL_PRSCH11     0x0000000b

#define EFM32_CMU_CALCNT_ADDR                        0x00000054
#define EFM32_CMU_CALCNT_MASK                        0x000fffff
  #define EFM32_CMU_CALCNT_CALCNT(v)               ((v) << 0)
  #define EFM32_CMU_CALCNT_CALCNT_SET(x, v)        do { (x) = (((x) & ~0xfffff) | ((v) << 0)); } while(0)
  #define EFM32_CMU_CALCNT_CALCNT_GET(x)           (((x) >> 0) & 0xfffff)

#define EFM32_CMU_OSCENCMD_ADDR                      0x00000060
#define EFM32_CMU_OSCENCMD_MASK                      0x000003ff
  #define EFM32_CMU_OSCENCMD_HFRCOEN               0x00000001
  #define EFM32_CMU_OSCENCMD_HFRCODIS              0x00000002
  #define EFM32_CMU_OSCENCMD_HFXOEN                0x00000004
  #define EFM32_CMU_OSCENCMD_HFXODIS               0x00000008
  #define EFM32_CMU_OSCENCMD_AUXHFRCOEN            0x00000010
  #define EFM32_CMU_OSCENCMD_AUXHFRCODIS           0x00000020
  #define EFM32_CMU_OSCENCMD_LFRCOEN               0x00000040
  #define EFM32_CMU_OSCENCMD_LFRCODIS              0x00000080
  #define EFM32_CMU_OSCENCMD_LFXOEN                0x00000100
  #define EFM32_CMU_OSCENCMD_LFXODIS               0x00000200

#define EFM32_CMU_CMD_ADDR                           0x00000064
#define EFM32_CMU_CMD_MASK                           0x00000033
  #define EFM32_CMU_CMD_CALSTART                   0x00000001
  #define EFM32_CMU_CMD_CALSTOP                    0x00000002
  #define EFM32_CMU_CMD_HFXOPEAKDETSTART           0x00000010
  #define EFM32_CMU_CMD_HFXOSHUNTOPTSTART          0x00000020

#define EFM32_CMU_DBGCLKSEL_ADDR                     0x00000070
#define EFM32_CMU_DBGCLKSEL_MASK                     0x00000001
  #define EFM32_CMU_DBGCLKSEL_DBG                  0x00000001

#define EFM32_CMU_HFCLKSEL_ADDR                      0x00000074
#define EFM32_CMU_HFCLKSEL_MASK                      0x00000007
  #define EFM32_CMU_HFCLKSEL_HF(v)                 ((EFM32_CMU_HFCLKSEL_HF_##v) << 0)
  #define EFM32_CMU_HFCLKSEL_HF_SET(x, v)          do { (x) = (((x) & ~0x7) | ((EFM32_CMU_HFCLKSEL_HF_##v) << 0)); } while(0)
  #define EFM32_CMU_HFCLKSEL_HF_SETVAL(x, v)       do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFM32_CMU_HFCLKSEL_HF_GET(x)             (((x) >> 0) & 0x7)
/**  */
    #define EFM32_CMU_HFCLKSEL_HF_HFRCO              0x00000001
/**  */
    #define EFM32_CMU_HFCLKSEL_HF_HFXO               0x00000002
/**  */
    #define EFM32_CMU_HFCLKSEL_HF_LFRCO              0x00000003
/**  */
    #define EFM32_CMU_HFCLKSEL_HF_LFXO               0x00000004

#define EFM32_CMU_LFACLKSEL_ADDR                     0x00000080
#define EFM32_CMU_LFACLKSEL_MASK                     0x00000007
  #define EFM32_CMU_LFACLKSEL_LFA(v)               ((EFM32_CMU_LFACLKSEL_LFA_##v) << 0)
  #define EFM32_CMU_LFACLKSEL_LFA_SET(x, v)        do { (x) = (((x) & ~0x7) | ((EFM32_CMU_LFACLKSEL_LFA_##v) << 0)); } while(0)
  #define EFM32_CMU_LFACLKSEL_LFA_SETVAL(x, v)     do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFM32_CMU_LFACLKSEL_LFA_GET(x)           (((x) >> 0) & 0x7)
/**  */
    #define EFM32_CMU_LFACLKSEL_LFA_DISABLED         0x00000000
/**  */
    #define EFM32_CMU_LFACLKSEL_LFA_LFRCO            0x00000001
/**  */
    #define EFM32_CMU_LFACLKSEL_LFA_LFXO             0x00000002
/**  */
    #define EFM32_CMU_LFACLKSEL_LFA_HFCLKLE          0x00000003
/**  */
    #define EFM32_CMU_LFACLKSEL_LFA_ULFRCO           0x00000004

#define EFM32_CMU_LFBCLKSEL_ADDR                     0x00000084
#define EFM32_CMU_LFBCLKSEL_MASK                     0x00000007
  #define EFM32_CMU_LFBCLKSEL_LFB(v)               ((EFM32_CMU_LFBCLKSEL_LFB_##v) << 0)
  #define EFM32_CMU_LFBCLKSEL_LFB_SET(x, v)        do { (x) = (((x) & ~0x7) | ((EFM32_CMU_LFBCLKSEL_LFB_##v) << 0)); } while(0)
  #define EFM32_CMU_LFBCLKSEL_LFB_SETVAL(x, v)     do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFM32_CMU_LFBCLKSEL_LFB_GET(x)           (((x) >> 0) & 0x7)
/**  */
    #define EFM32_CMU_LFBCLKSEL_LFB_DISABLED         0x00000000
/**  */
    #define EFM32_CMU_LFBCLKSEL_LFB_LFRCO            0x00000001
/**  */
    #define EFM32_CMU_LFBCLKSEL_LFB_LFXO             0x00000002
/**  */
    #define EFM32_CMU_LFBCLKSEL_LFB_HFCLKLE          0x00000003
/**  */
    #define EFM32_CMU_LFBCLKSEL_LFB_ULFRCO           0x00000004

#define EFM32_CMU_LFECLKSEL_ADDR                     0x00000088
#define EFM32_CMU_LFECLKSEL_MASK                     0x00000007
  #define EFM32_CMU_LFECLKSEL_LFE(v)               ((EFM32_CMU_LFECLKSEL_LFE_##v) << 0)
  #define EFM32_CMU_LFECLKSEL_LFE_SET(x, v)        do { (x) = (((x) & ~0x7) | ((EFM32_CMU_LFECLKSEL_LFE_##v) << 0)); } while(0)
  #define EFM32_CMU_LFECLKSEL_LFE_SETVAL(x, v)     do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFM32_CMU_LFECLKSEL_LFE_GET(x)           (((x) >> 0) & 0x7)
/**  */
    #define EFM32_CMU_LFECLKSEL_LFE_DISABLED         0x00000000
/**  */
    #define EFM32_CMU_LFECLKSEL_LFE_LFRCO            0x00000001
/**  */
    #define EFM32_CMU_LFECLKSEL_LFE_LFXO             0x00000002
/**  */
    #define EFM32_CMU_LFECLKSEL_LFE_HFCLKLE          0x00000003
/**  */
    #define EFM32_CMU_LFECLKSEL_LFE_ULFRCO           0x00000004

#define EFM32_CMU_STATUS_ADDR                        0x00000090
#define EFM32_CMU_STATUS_MASK                        0x07f103ff
  #define EFM32_CMU_STATUS_HFRCOENS                0x00000001
  #define EFM32_CMU_STATUS_HFRCORDY                0x00000002
  #define EFM32_CMU_STATUS_HFXOENS                 0x00000004
  #define EFM32_CMU_STATUS_HFXORDY                 0x00000008
  #define EFM32_CMU_STATUS_AUXHFRCOENS             0x00000010
  #define EFM32_CMU_STATUS_AUXHFRCORDY             0x00000020
  #define EFM32_CMU_STATUS_LFRCOENS                0x00000040
  #define EFM32_CMU_STATUS_LFRCORDY                0x00000080
  #define EFM32_CMU_STATUS_LFXOENS                 0x00000100
  #define EFM32_CMU_STATUS_LFXORDY                 0x00000200
  #define EFM32_CMU_STATUS_CALRDY                  0x00010000
  #define EFM32_CMU_STATUS_HFXOWARMS               0x00100000
  #define EFM32_CMU_STATUS_HFXOREQ                 0x00200000
  #define EFM32_CMU_STATUS_HFXOPEAKDETRDY          0x00400000
  #define EFM32_CMU_STATUS_HFXOSHUNTOPTRDY         0x00800000
  #define EFM32_CMU_STATUS_HFXOAMPHIGH             0x01000000
  #define EFM32_CMU_STATUS_HFXOAMPLOW              0x02000000
  #define EFM32_CMU_STATUS_HFXOREGILOW             0x04000000

#define EFM32_CMU_HFCLKSTATUS_ADDR                   0x00000094
#define EFM32_CMU_HFCLKSTATUS_MASK                   0x00000007
  #define EFM32_CMU_HFCLKSTATUS_SELECTED(v)        ((EFM32_CMU_HFCLKSTATUS_SELECTED_##v) << 0)
  #define EFM32_CMU_HFCLKSTATUS_SELECTED_SET(x, v) do { (x) = (((x) & ~0x7) | ((EFM32_CMU_HFCLKSTATUS_SELECTED_##v) << 0)); } while(0)
  #define EFM32_CMU_HFCLKSTATUS_SELECTED_SETVAL(x, v) do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFM32_CMU_HFCLKSTATUS_SELECTED_GET(x)    (((x) >> 0) & 0x7)
/**  */
    #define EFM32_CMU_HFCLKSTATUS_SELECTED_HFRCO     0x00000001
/**  */
    #define EFM32_CMU_HFCLKSTATUS_SELECTED_HFXO      0x00000002
/**  */
    #define EFM32_CMU_HFCLKSTATUS_SELECTED_LFRCO     0x00000003
/**  */
    #define EFM32_CMU_HFCLKSTATUS_SELECTED_LFXO      0x00000004

#define EFM32_CMU_HFXOTRIMSTATUS_ADDR                0x0000009c
#define EFM32_CMU_HFXOTRIMSTATUS_MASK                0x000007ff
  #define EFM32_CMU_HFXOTRIMSTATUS_IBTRIMXOCORE(v) ((v) << 0)
  #define EFM32_CMU_HFXOTRIMSTATUS_IBTRIMXOCORE_SET(x, v) do { (x) = (((x) & ~0x7f) | ((v) << 0)); } while(0)
  #define EFM32_CMU_HFXOTRIMSTATUS_IBTRIMXOCORE_GET(x) (((x) >> 0) & 0x7f)
  #define EFM32_CMU_HFXOTRIMSTATUS_REGISH(v)       ((v) << 7)
  #define EFM32_CMU_HFXOTRIMSTATUS_REGISH_SET(x, v) do { (x) = (((x) & ~0x780) | ((v) << 7)); } while(0)
  #define EFM32_CMU_HFXOTRIMSTATUS_REGISH_GET(x)   (((x) >> 7) & 0xf)

#define EFM32_CMU_IF_ADDR                            0x000000a0
#define EFM32_CMU_IF_MASK                            0x80007f7f
  #define EFM32_CMU_IF_HFRCORDY                    0x00000001
  #define EFM32_CMU_IF_HFXORDY                     0x00000002
  #define EFM32_CMU_IF_LFRCORDY                    0x00000004
  #define EFM32_CMU_IF_LFXORDY                     0x00000008
  #define EFM32_CMU_IF_AUXHFRCORDY                 0x00000010
  #define EFM32_CMU_IF_CALRDY                      0x00000020
  #define EFM32_CMU_IF_CALOF                       0x00000040
  #define EFM32_CMU_IF_HFXODISERR                  0x00000100
  #define EFM32_CMU_IF_HFXOAUTOSW                  0x00000200
  #define EFM32_CMU_IF_HFXOPEAKDETERR              0x00000400
  #define EFM32_CMU_IF_HFXOPEAKDETRDY              0x00000800
  #define EFM32_CMU_IF_HFXOSHUNTOPTRDY             0x00001000
  #define EFM32_CMU_IF_HFRCODIS                    0x00002000
  #define EFM32_CMU_IF_LFTIMEOUTERR                0x00004000
  #define EFM32_CMU_IF_CMUERR                      0x80000000

#define EFM32_CMU_IFS_ADDR                           0x000000a4
#define EFM32_CMU_IFS_MASK                           0x80007f7f
  #define EFM32_CMU_IFS_HFRCORDY                   0x00000001
  #define EFM32_CMU_IFS_HFXORDY                    0x00000002
  #define EFM32_CMU_IFS_LFRCORDY                   0x00000004
  #define EFM32_CMU_IFS_LFXORDY                    0x00000008
  #define EFM32_CMU_IFS_AUXHFRCORDY                0x00000010
  #define EFM32_CMU_IFS_CALRDY                     0x00000020
  #define EFM32_CMU_IFS_CALOF                      0x00000040
  #define EFM32_CMU_IFS_HFXODISERR                 0x00000100
  #define EFM32_CMU_IFS_HFXOAUTOSW                 0x00000200
  #define EFM32_CMU_IFS_HFXOPEAKDETERR             0x00000400
  #define EFM32_CMU_IFS_HFXOPEAKDETRDY             0x00000800
  #define EFM32_CMU_IFS_HFXOSHUNTOPTRDY            0x00001000
  #define EFM32_CMU_IFS_HFRCODIS                   0x00002000
  #define EFM32_CMU_IFS_LFTIMEOUTERR               0x00004000
  #define EFM32_CMU_IFS_CMUERR                     0x80000000

#define EFM32_CMU_IFC_ADDR                           0x000000a8
#define EFM32_CMU_IFC_MASK                           0x80007f7f
  #define EFM32_CMU_IFC_HFRCORDY                   0x00000001
  #define EFM32_CMU_IFC_HFXORDY                    0x00000002
  #define EFM32_CMU_IFC_LFRCORDY                   0x00000004
  #define EFM32_CMU_IFC_LFXORDY                    0x00000008
  #define EFM32_CMU_IFC_AUXHFRCORDY                0x00000010
  #define EFM32_CMU_IFC_CALRDY                     0x00000020
  #define EFM32_CMU_IFC_CALOF                      0x00000040
  #define EFM32_CMU_IFC_HFXODISERR                 0x00000100
  #define EFM32_CMU_IFC_HFXOAUTOSW                 0x00000200
  #define EFM32_CMU_IFC_HFXOPEAKDETERR             0x00000400
  #define EFM32_CMU_IFC_HFXOPEAKDETRDY             0x00000800
  #define EFM32_CMU_IFC_HFXOSHUNTOPTRDY            0x00001000
  #define EFM32_CMU_IFC_HFRCODIS                   0x00002000
  #define EFM32_CMU_IFC_LFTIMEOUTERR               0x00004000
  #define EFM32_CMU_IFC_CMUERR                     0x80000000

#define EFM32_CMU_IEN_ADDR                           0x000000ac
#define EFM32_CMU_IEN_MASK                           0x80007f7f
  #define EFM32_CMU_IEN_HFRCORDY                   0x00000001
  #define EFM32_CMU_IEN_HFXORDY                    0x00000002
  #define EFM32_CMU_IEN_LFRCORDY                   0x00000004
  #define EFM32_CMU_IEN_LFXORDY                    0x00000008
  #define EFM32_CMU_IEN_AUXHFRCORDY                0x00000010
  #define EFM32_CMU_IEN_CALRDY                     0x00000020
  #define EFM32_CMU_IEN_CALOF                      0x00000040
  #define EFM32_CMU_IEN_HFXODISERR                 0x00000100
  #define EFM32_CMU_IEN_HFXOAUTOSW                 0x00000200
  #define EFM32_CMU_IEN_HFXOPEAKDETERR             0x00000400
  #define EFM32_CMU_IEN_HFXOPEAKDETRDY             0x00000800
  #define EFM32_CMU_IEN_HFXOSHUNTOPTRDY            0x00001000
  #define EFM32_CMU_IEN_HFRCODIS                   0x00002000
  #define EFM32_CMU_IEN_LFTIMEOUTERR               0x00004000
  #define EFM32_CMU_IEN_CMUERR                     0x80000000

#define EFM32_CMU_HFBUSCLKEN0_ADDR                   0x000000b0
#define EFM32_CMU_HFBUSCLKEN0_MASK                   0x0000003f
  #define EFM32_CMU_HFBUSCLKEN0_LE                 0x00000001
  #define EFM32_CMU_HFBUSCLKEN0_CRYPTO             0x00000002
  #define EFM32_CMU_HFBUSCLKEN0_GPIO               0x00000004
  #define EFM32_CMU_HFBUSCLKEN0_PRS                0x00000008
  #define EFM32_CMU_HFBUSCLKEN0_LDMA               0x00000010
  #define EFM32_CMU_HFBUSCLKEN0_GPCRC              0x00000020

#define EFM32_CMU_HFPERCLKEN0_ADDR                   0x000000c0
#define EFM32_CMU_HFPERCLKEN0_MASK                   0x000007ff
  #define EFM32_CMU_HFPERCLKEN0_TIMER0             0x00000001
  #define EFM32_CMU_HFPERCLKEN0_TIMER1             0x00000002
  #define EFM32_CMU_HFPERCLKEN0_USART0             0x00000004
  #define EFM32_CMU_HFPERCLKEN0_USART1             0x00000008
  #define EFM32_CMU_HFPERCLKEN0_ACMP0              0x00000010
  #define EFM32_CMU_HFPERCLKEN0_ACMP1              0x00000020
  #define EFM32_CMU_HFPERCLKEN0_CRYOTIMER          0x00000040
  #define EFM32_CMU_HFPERCLKEN0_I2C0               0x00000080
  #define EFM32_CMU_HFPERCLKEN0_ADC0               0x00000100
  #define EFM32_CMU_HFPERCLKEN0_IDAC0              0x00000200
  #define EFM32_CMU_HFPERCLKEN0_SYSCFG             0x00000400

#define EFM32_CMU_HFRADIOCLKEN0_ADDR                 0x000000c8
#define EFM32_CMU_HFRADIOCLKEN0_MASK                 0x000001ff
  #define EFM32_CMU_HFRADIOCLKEN0_PROTIMER         0x00000001
  #define EFM32_CMU_HFRADIOCLKEN0_RFSENSE          0x00000002
  #define EFM32_CMU_HFRADIOCLKEN0_RAC              0x00000004
  #define EFM32_CMU_HFRADIOCLKEN0_FRC              0x00000008
  #define EFM32_CMU_HFRADIOCLKEN0_BUFC             0x00000010
  #define EFM32_CMU_HFRADIOCLKEN0_CRC              0x00000020
  #define EFM32_CMU_HFRADIOCLKEN0_SYNTH            0x00000040
  #define EFM32_CMU_HFRADIOCLKEN0_MODEM            0x00000080
  #define EFM32_CMU_HFRADIOCLKEN0_AGC              0x00000100

#define EFM32_CMU_LFACLKEN0_ADDR                     0x000000e0
#define EFM32_CMU_LFACLKEN0_MASK                     0x00000001
  #define EFM32_CMU_LFACLKEN0_LETIMER0             0x00000001

#define EFM32_CMU_LFBCLKEN0_ADDR                     0x000000e8
#define EFM32_CMU_LFBCLKEN0_MASK                     0x00000001
  #define EFM32_CMU_LFBCLKEN0_LEUART0              0x00000001

#define EFM32_CMU_LFECLKEN0_ADDR                     0x000000f0
#define EFM32_CMU_LFECLKEN0_MASK                     0x00000001
  #define EFM32_CMU_LFECLKEN0_RTCC                 0x00000001

#define EFM32_CMU_HFPRESC_ADDR                       0x00000100
#define EFM32_CMU_HFPRESC_MASK                       0x01001f00
  #define EFM32_CMU_HFPRESC_PRESC(v)               ((EFM32_CMU_HFPRESC_PRESC_##v) << 8)
  #define EFM32_CMU_HFPRESC_PRESC_SET(x, v)        do { (x) = (((x) & ~0x1f00) | ((EFM32_CMU_HFPRESC_PRESC_##v) << 8)); } while(0)
  #define EFM32_CMU_HFPRESC_PRESC_SETVAL(x, v)     do { (x) = (((x) & ~0x1f00) | ((v) << 8)); } while(0)
  #define EFM32_CMU_HFPRESC_PRESC_GET(x)           (((x) >> 8) & 0x1f)
/**  */
    #define EFM32_CMU_HFPRESC_PRESC_NODIVISION       0x00000000
  #define EFM32_CMU_HFPRESC_HFCLKLEPRESC           0x01000000

#define EFM32_CMU_HFCOREPRESC_ADDR                   0x00000108
#define EFM32_CMU_HFCOREPRESC_MASK                   0x0001ff00
  #define EFM32_CMU_HFCOREPRESC_PRESC(v)           ((EFM32_CMU_HFCOREPRESC_PRESC_##v) << 8)
  #define EFM32_CMU_HFCOREPRESC_PRESC_SET(x, v)    do { (x) = (((x) & ~0x1ff00) | ((EFM32_CMU_HFCOREPRESC_PRESC_##v) << 8)); } while(0)
  #define EFM32_CMU_HFCOREPRESC_PRESC_SETVAL(x, v) do { (x) = (((x) & ~0x1ff00) | ((v) << 8)); } while(0)
  #define EFM32_CMU_HFCOREPRESC_PRESC_GET(x)       (((x) >> 8) & 0x1ff)
/**  */
    #define EFM32_CMU_HFCOREPRESC_PRESC_NODIVISION   0x00000000

#define EFM32_CMU_HFPERPRESC_ADDR                    0x0000010c
#define EFM32_CMU_HFPERPRESC_MASK                    0x0001ff00
  #define EFM32_CMU_HFPERPRESC_PRESC(v)            ((EFM32_CMU_HFPERPRESC_PRESC_##v) << 8)
  #define EFM32_CMU_HFPERPRESC_PRESC_SET(x, v)     do { (x) = (((x) & ~0x1ff00) | ((EFM32_CMU_HFPERPRESC_PRESC_##v) << 8)); } while(0)
  #define EFM32_CMU_HFPERPRESC_PRESC_SETVAL(x, v)  do { (x) = (((x) & ~0x1ff00) | ((v) << 8)); } while(0)
  #define EFM32_CMU_HFPERPRESC_PRESC_GET(x)        (((x) >> 8) & 0x1ff)
/**  */
    #define EFM32_CMU_HFPERPRESC_PRESC_NODIVISION    0x00000000

#define EFM32_CMU_HFRADIOPRESC_ADDR                  0x00000110
#define EFM32_CMU_HFRADIOPRESC_MASK                  0x0001ff00
  #define EFM32_CMU_HFRADIOPRESC_PRESC(v)          ((EFM32_CMU_HFRADIOPRESC_PRESC_##v) << 8)
  #define EFM32_CMU_HFRADIOPRESC_PRESC_SET(x, v)   do { (x) = (((x) & ~0x1ff00) | ((EFM32_CMU_HFRADIOPRESC_PRESC_##v) << 8)); } while(0)
  #define EFM32_CMU_HFRADIOPRESC_PRESC_SETVAL(x, v) do { (x) = (((x) & ~0x1ff00) | ((v) << 8)); } while(0)
  #define EFM32_CMU_HFRADIOPRESC_PRESC_GET(x)      (((x) >> 8) & 0x1ff)
/**  */
    #define EFM32_CMU_HFRADIOPRESC_PRESC_NODIVISION  0x00000000

#define EFM32_CMU_HFEXPPRESC_ADDR                    0x00000114
#define EFM32_CMU_HFEXPPRESC_MASK                    0x00001f00
  #define EFM32_CMU_HFEXPPRESC_PRESC(v)            ((EFM32_CMU_HFEXPPRESC_PRESC_##v) << 8)
  #define EFM32_CMU_HFEXPPRESC_PRESC_SET(x, v)     do { (x) = (((x) & ~0x1f00) | ((EFM32_CMU_HFEXPPRESC_PRESC_##v) << 8)); } while(0)
  #define EFM32_CMU_HFEXPPRESC_PRESC_SETVAL(x, v)  do { (x) = (((x) & ~0x1f00) | ((v) << 8)); } while(0)
  #define EFM32_CMU_HFEXPPRESC_PRESC_GET(x)        (((x) >> 8) & 0x1f)
/**  */
    #define EFM32_CMU_HFEXPPRESC_PRESC_NODIVISION    0x00000000

#define EFM32_CMU_LFAPRESC0_ADDR                     0x00000120
#define EFM32_CMU_LFAPRESC0_MASK                     0x0000000f
  #define EFM32_CMU_LFAPRESC0_LETIMER0(v)          ((EFM32_CMU_LFAPRESC0_LETIMER0_##v) << 0)
  #define EFM32_CMU_LFAPRESC0_LETIMER0_SET(x, v)   do { (x) = (((x) & ~0xf) | ((EFM32_CMU_LFAPRESC0_LETIMER0_##v) << 0)); } while(0)
  #define EFM32_CMU_LFAPRESC0_LETIMER0_SETVAL(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFM32_CMU_LFAPRESC0_LETIMER0_GET(x)      (((x) >> 0) & 0xf)
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV1        0x00000000
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV2        0x00000001
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV4        0x00000002
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV8        0x00000003
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV16       0x00000004
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV32       0x00000005
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV64       0x00000006
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV128      0x00000007
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV256      0x00000008
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV512      0x00000009
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV1024     0x0000000a
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV2048     0x0000000b
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV4096     0x0000000c
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV8192     0x0000000d
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV16384    0x0000000e
/**  */
    #define EFM32_CMU_LFAPRESC0_LETIMER0_DIV32768    0x0000000f

#define EFM32_CMU_LFBPRESC0_ADDR                     0x00000128
#define EFM32_CMU_LFBPRESC0_MASK                     0x00000003
  #define EFM32_CMU_LFBPRESC0_LEUART0(v)           ((EFM32_CMU_LFBPRESC0_LEUART0_##v) << 0)
  #define EFM32_CMU_LFBPRESC0_LEUART0_SET(x, v)    do { (x) = (((x) & ~0x3) | ((EFM32_CMU_LFBPRESC0_LEUART0_##v) << 0)); } while(0)
  #define EFM32_CMU_LFBPRESC0_LEUART0_SETVAL(x, v) do { (x) = (((x) & ~0x3) | ((v) << 0)); } while(0)
  #define EFM32_CMU_LFBPRESC0_LEUART0_GET(x)       (((x) >> 0) & 0x3)
/**  */
    #define EFM32_CMU_LFBPRESC0_LEUART0_DIV1         0x00000000
/**  */
    #define EFM32_CMU_LFBPRESC0_LEUART0_DIV2         0x00000001
/**  */
    #define EFM32_CMU_LFBPRESC0_LEUART0_DIV4         0x00000002
/**  */
    #define EFM32_CMU_LFBPRESC0_LEUART0_DIV8         0x00000003

#define EFM32_CMU_LFEPRESC0_ADDR                     0x00000130
#define EFM32_CMU_LFEPRESC0_MASK                     0x0000000f
  #define EFM32_CMU_LFEPRESC0_RTCC(v)              ((EFM32_CMU_LFEPRESC0_RTCC_##v) << 0)
  #define EFM32_CMU_LFEPRESC0_RTCC_SET(x, v)       do { (x) = (((x) & ~0xf) | ((EFM32_CMU_LFEPRESC0_RTCC_##v) << 0)); } while(0)
  #define EFM32_CMU_LFEPRESC0_RTCC_SETVAL(x, v)    do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFM32_CMU_LFEPRESC0_RTCC_GET(x)          (((x) >> 0) & 0xf)
/**  */
    #define EFM32_CMU_LFEPRESC0_RTCC_DIV1            0x00000000

#define EFM32_CMU_SYNCBUSY_ADDR                      0x00000140
#define EFM32_CMU_SYNCBUSY_MASK                      0x3f050055
  #define EFM32_CMU_SYNCBUSY_LFACLKEN0             0x00000001
  #define EFM32_CMU_SYNCBUSY_LFAPRESC0             0x00000004
  #define EFM32_CMU_SYNCBUSY_LFBCLKEN0             0x00000010
  #define EFM32_CMU_SYNCBUSY_LFBPRESC0             0x00000040
  #define EFM32_CMU_SYNCBUSY_LFECLKEN0             0x00010000
  #define EFM32_CMU_SYNCBUSY_LFEPRESC0             0x00040000
  #define EFM32_CMU_SYNCBUSY_HFRCOBSY              0x01000000
  #define EFM32_CMU_SYNCBUSY_AUXHFRCOBSY           0x02000000
  #define EFM32_CMU_SYNCBUSY_LFRCOBSY              0x04000000
  #define EFM32_CMU_SYNCBUSY_LFRCOVREFBSY          0x08000000
  #define EFM32_CMU_SYNCBUSY_HFXOBSY               0x10000000
  #define EFM32_CMU_SYNCBUSY_LFXOBSY               0x20000000

#define EFM32_CMU_FREEZE_ADDR                        0x00000144
#define EFM32_CMU_FREEZE_MASK                        0x00000001
  #define EFM32_CMU_FREEZE_REGFREEZE               0x00000001

#define EFM32_CMU_PCNTCTRL_ADDR                      0x00000150
#define EFM32_CMU_PCNTCTRL_MASK                      0x00000003
  #define EFM32_CMU_PCNTCTRL_PCNT0CLKEN            0x00000001
  #define EFM32_CMU_PCNTCTRL_PCNT0CLKSEL           0x00000002

#define EFM32_CMU_LCDCTRL_ADDR                       0x00000154
#define EFM32_CMU_LCDCTRL_MASK                       0x0000007f
  #define EFM32_CMU_LCDCTRL_FDIV(v)                ((v) << 0)
  #define EFM32_CMU_LCDCTRL_FDIV_SET(x, v)         do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFM32_CMU_LCDCTRL_FDIV_GET(x)            (((x) >> 0) & 0x7)
  #define EFM32_CMU_LCDCTRL_VBOOSTEN               0x00000008
  #define EFM32_CMU_LCDCTRL_VBFDIV(v)              ((EFM32_CMU_LCDCTRL_VBFDIV_##v) << 4)
  #define EFM32_CMU_LCDCTRL_VBFDIV_SET(x, v)       do { (x) = (((x) & ~0x70) | ((EFM32_CMU_LCDCTRL_VBFDIV_##v) << 4)); } while(0)
  #define EFM32_CMU_LCDCTRL_VBFDIV_SETVAL(x, v)    do { (x) = (((x) & ~0x70) | ((v) << 4)); } while(0)
  #define EFM32_CMU_LCDCTRL_VBFDIV_GET(x)          (((x) >> 4) & 0x7)
/**  */
    #define EFM32_CMU_LCDCTRL_VBFDIV_DIV1            0x00000000
/**  */
    #define EFM32_CMU_LCDCTRL_VBFDIV_DIV2            0x00000001
/**  */
    #define EFM32_CMU_LCDCTRL_VBFDIV_DIV4            0x00000002
/**  */
    #define EFM32_CMU_LCDCTRL_VBFDIV_DIV8            0x00000003
/**  */
    #define EFM32_CMU_LCDCTRL_VBFDIV_DIV16           0x00000004
/**  */
    #define EFM32_CMU_LCDCTRL_VBFDIV_DIV32           0x00000005
/**  */
    #define EFM32_CMU_LCDCTRL_VBFDIV_DIV64           0x00000006
/**  */
    #define EFM32_CMU_LCDCTRL_VBFDIV_DIV128          0x00000007

#define EFM32_CMU_LVDSCTRL_ADDR                      0x00000158
#define EFM32_CMU_LVDSCTRL_MASK                      0x00000007
  #define EFM32_CMU_LVDSCTRL_EN                    0x00000001
  #define EFM32_CMU_LVDSCTRL_CLKSEL(v)             ((EFM32_CMU_LVDSCTRL_CLKSEL_##v) << 1)
  #define EFM32_CMU_LVDSCTRL_CLKSEL_SET(x, v)      do { (x) = (((x) & ~0x6) | ((EFM32_CMU_LVDSCTRL_CLKSEL_##v) << 1)); } while(0)
  #define EFM32_CMU_LVDSCTRL_CLKSEL_SETVAL(x, v)   do { (x) = (((x) & ~0x6) | ((v) << 1)); } while(0)
  #define EFM32_CMU_LVDSCTRL_CLKSEL_GET(x)         (((x) >> 1) & 0x3)
/**  */
    #define EFM32_CMU_LVDSCTRL_CLKSEL_DISABLED       0x00000000
/**  */
    #define EFM32_CMU_LVDSCTRL_CLKSEL_HFCLK          0x00000001
/**  */
    #define EFM32_CMU_LVDSCTRL_CLKSEL_AUXSYNTHCLK    0x00000002

#define EFM32_CMU_ADCCTRL_ADDR                       0x0000015c
#define EFM32_CMU_ADCCTRL_MASK                       0x00000130
  #define EFM32_CMU_ADCCTRL_CLKSEL(v)              ((EFM32_CMU_ADCCTRL_CLKSEL_##v) << 4)
  #define EFM32_CMU_ADCCTRL_CLKSEL_SET(x, v)       do { (x) = (((x) & ~0x30) | ((EFM32_CMU_ADCCTRL_CLKSEL_##v) << 4)); } while(0)
  #define EFM32_CMU_ADCCTRL_CLKSEL_SETVAL(x, v)    do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define EFM32_CMU_ADCCTRL_CLKSEL_GET(x)          (((x) >> 4) & 0x3)
/**  */
    #define EFM32_CMU_ADCCTRL_CLKSEL_DISABLED        0x00000000
/**  */
    #define EFM32_CMU_ADCCTRL_CLKSEL_AUXHFRCO        0x00000001
/**  */
    #define EFM32_CMU_ADCCTRL_CLKSEL_HFXO            0x00000002
/**  */
    #define EFM32_CMU_ADCCTRL_CLKSEL_HFSRCCLK        0x00000003
  #define EFM32_CMU_ADCCTRL_INV                    0x00000100

#define EFM32_CMU_ROUTEPEN_ADDR                      0x00000170
#define EFM32_CMU_ROUTEPEN_MASK                      0x00000003
  #define EFM32_CMU_ROUTEPEN_CLKOUT0PEN            0x00000001
  #define EFM32_CMU_ROUTEPEN_CLKOUT1PEN            0x00000002

#define EFM32_CMU_ROUTELOC0_ADDR                     0x00000174
#define EFM32_CMU_ROUTELOC0_MASK                     0x00003f3f
  #define EFM32_CMU_ROUTELOC0_CLKOUT0LOC(v)        ((EFM32_CMU_ROUTELOC0_CLKOUT0LOC_##v) << 0)
  #define EFM32_CMU_ROUTELOC0_CLKOUT0LOC_SET(x, v) do { (x) = (((x) & ~0x3f) | ((EFM32_CMU_ROUTELOC0_CLKOUT0LOC_##v) << 0)); } while(0)
  #define EFM32_CMU_ROUTELOC0_CLKOUT0LOC_SETVAL(x, v) do { (x) = (((x) & ~0x3f) | ((v) << 0)); } while(0)
  #define EFM32_CMU_ROUTELOC0_CLKOUT0LOC_GET(x)    (((x) >> 0) & 0x3f)
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT0LOC_LOC0      0x00000000
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT0LOC_LOC1      0x00000001
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT0LOC_LOC2      0x00000002
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT0LOC_LOC3      0x00000003
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT0LOC_LOC4      0x00000004
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT0LOC_LOC5      0x00000005
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT0LOC_LOC6      0x00000006
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT0LOC_LOC7      0x00000007
  #define EFM32_CMU_ROUTELOC0_CLKOUT1LOC(v)        ((EFM32_CMU_ROUTELOC0_CLKOUT1LOC_##v) << 8)
  #define EFM32_CMU_ROUTELOC0_CLKOUT1LOC_SET(x, v) do { (x) = (((x) & ~0x3f00) | ((EFM32_CMU_ROUTELOC0_CLKOUT1LOC_##v) << 8)); } while(0)
  #define EFM32_CMU_ROUTELOC0_CLKOUT1LOC_SETVAL(x, v) do { (x) = (((x) & ~0x3f00) | ((v) << 8)); } while(0)
  #define EFM32_CMU_ROUTELOC0_CLKOUT1LOC_GET(x)    (((x) >> 8) & 0x3f)
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT1LOC_LOC0      0x00000000
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT1LOC_LOC1      0x00000001
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT1LOC_LOC2      0x00000002
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT1LOC_LOC3      0x00000003
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT1LOC_LOC4      0x00000004
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT1LOC_LOC5      0x00000005
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT1LOC_LOC6      0x00000006
/**  */
    #define EFM32_CMU_ROUTELOC0_CLKOUT1LOC_LOC7      0x00000007

#define EFM32_CMU_LOCK_ADDR                          0x00000180
#define EFM32_CMU_LOCK_MASK                          0x8000ffff
  #define EFM32_CMU_LOCK_LOCKKEY(v)                ((EFM32_CMU_LOCK_LOCKKEY_##v) << 0)
  #define EFM32_CMU_LOCK_LOCKKEY_SET(x, v)         do { (x) = (((x) & ~0xffff) | ((EFM32_CMU_LOCK_LOCKKEY_##v) << 0)); } while(0)
  #define EFM32_CMU_LOCK_LOCKKEY_SETVAL(x, v)      do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFM32_CMU_LOCK_LOCKKEY_GET(x)            (((x) >> 0) & 0xffff)
/**  */
    #define EFM32_CMU_LOCK_LOCKKEY_UNLOCKED          0x00000000
/**  */
    #define EFM32_CMU_LOCK_LOCKKEY_LOCKED            0x00000001
  #define EFM32_CMU_LOCK_LFOSCUNLOCK               0x80000000

#define EFM32_CMU_RFLOCK0_ADDR                       0x00000188
#define EFM32_CMU_RFLOCK0_MASK                       0xbdffffff
  #define EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL(v)  ((EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_##v) << 0)
  #define EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_SET(x, v) do { (x) = (((x) & ~0x1ff) | ((EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_##v) << 0)); } while(0)
  #define EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_SETVAL(x, v) do { (x) = (((x) & ~0x1ff) | ((v) << 0)); } while(0)
  #define EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_GET(x) (((x) >> 0) & 0x1ff)
/**  */
    #define EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_DIV2 0x00000001
/**  */
    #define EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_DIV3 0x00000002
/**  */
    #define EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_DIV4 0x00000004
/**  */
    #define EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_DIV5 0x00000008
/**  */
    #define EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_DIV6 0x00000010
/**  */
    #define EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_DIV8 0x00000020
/**  */
    #define EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_DIV9AND10AND12 0x00000040
/**  */
    #define EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_DIV15AND16 0x00000080
/**  */
    #define EFM32_CMU_RFLOCK0_SYNTHLODIVFREQCTRL_DIVOTHER 0x00000100
  #define EFM32_CMU_RFLOCK0_RACIFLILTENABLE        0x00000200
  #define EFM32_CMU_RFLOCK0_RACAUXPLL              0x00000400
  #define EFM32_CMU_RFLOCK0_MODEMDEC1              0x00000800
  #define EFM32_CMU_RFLOCK0_MODEMANTDIVMODE        0x00001000
  #define EFM32_CMU_RFLOCK0_RACIFPGAENPGA          0x00002000
  #define EFM32_CMU_RFLOCK0_RACPASLICE(v)          ((v) << 14)
  #define EFM32_CMU_RFLOCK0_RACPASLICE_SET(x, v)   do { (x) = (((x) & ~0x1fc000) | ((v) << 14)); } while(0)
  #define EFM32_CMU_RFLOCK0_RACPASLICE_GET(x)      (((x) >> 14) & 0x7f)
  #define EFM32_CMU_RFLOCK0_RACSGPAEN              0x00200000
  #define EFM32_CMU_RFLOCK0_RACPAEN                0x00400000
  #define EFM32_CMU_RFLOCK0_RACPAEN0DBM            0x00800000
  #define EFM32_CMU_RFLOCK0_FRCCONVMODE            0x01000000
  #define EFM32_CMU_RFLOCK0_FRCPAUSING             0x04000000
  #define EFM32_CMU_RFLOCK0_MODEMDSSS              0x08000000
  #define EFM32_CMU_RFLOCK0_MODEMMODFORMAT         0x10000000
  #define EFM32_CMU_RFLOCK0_MODEMDUALSYNC          0x20000000
  #define EFM32_CMU_RFLOCK0_UNLOCKED               0x80000000

#define EFM32_CMU_HFBUSCLKENMASK0_ADDR               0x00000190
#define EFM32_CMU_HFBUSCLKENMASK0_MASK               0x00000032
  #define EFM32_CMU_HFBUSCLKENMASK0_CRYPTO         0x00000002
  #define EFM32_CMU_HFBUSCLKENMASK0_LDMA           0x00000010
  #define EFM32_CMU_HFBUSCLKENMASK0_GPCRC          0x00000020

#define EFM32_CMU_HFPERCLKENMASK0_ADDR               0x00000198
#define EFM32_CMU_HFPERCLKENMASK0_MASK               0x000003ff
  #define EFM32_CMU_HFPERCLKENMASK0_TIMER0         0x00000001
  #define EFM32_CMU_HFPERCLKENMASK0_TIMER1         0x00000002
  #define EFM32_CMU_HFPERCLKENMASK0_USART0         0x00000004
  #define EFM32_CMU_HFPERCLKENMASK0_USART1         0x00000008
  #define EFM32_CMU_HFPERCLKENMASK0_ACMP0          0x00000010
  #define EFM32_CMU_HFPERCLKENMASK0_ACMP1          0x00000020
  #define EFM32_CMU_HFPERCLKENMASK0_CRYOTIMER      0x00000040
  #define EFM32_CMU_HFPERCLKENMASK0_I2C0           0x00000080
  #define EFM32_CMU_HFPERCLKENMASK0_ADC0           0x00000100
  #define EFM32_CMU_HFPERCLKENMASK0_IDAC0          0x00000200

#define EFM32_CMU_HFRADIOCLKENMASK0_ADDR             0x000001a4
#define EFM32_CMU_HFRADIOCLKENMASK0_MASK             0x000001ff
  #define EFM32_CMU_HFRADIOCLKENMASK0_PROTIMER     0x00000001
  #define EFM32_CMU_HFRADIOCLKENMASK0_RFSENSE      0x00000002
  #define EFM32_CMU_HFRADIOCLKENMASK0_RAC          0x00000004
  #define EFM32_CMU_HFRADIOCLKENMASK0_FRC          0x00000008
  #define EFM32_CMU_HFRADIOCLKENMASK0_BUFC         0x00000010
  #define EFM32_CMU_HFRADIOCLKENMASK0_CRC          0x00000020
  #define EFM32_CMU_HFRADIOCLKENMASK0_SYNTH        0x00000040
  #define EFM32_CMU_HFRADIOCLKENMASK0_MODEM        0x00000080
  #define EFM32_CMU_HFRADIOCLKENMASK0_AGC          0x00000100

#define EFM32_CMU_LFACLKENMASK0_ADDR                 0x000001b4
#define EFM32_CMU_LFACLKENMASK0_MASK                 0x00000001
  #define EFM32_CMU_LFACLKENMASK0_LETIMER0         0x00000001

#define EFM32_CMU_LFBCLKENMASK0_ADDR                 0x000001bc
#define EFM32_CMU_LFBCLKENMASK0_MASK                 0x00000001
  #define EFM32_CMU_LFBCLKENMASK0_LEUART0          0x00000001

#define EFM32_CMU_LFECLKENMASK0_ADDR                 0x000001c4
#define EFM32_CMU_LFECLKENMASK0_MASK                 0x00000001
  #define EFM32_CMU_LFECLKENMASK0_RTCC             0x00000001

#define EFM32_CMU_PCNTCLKENMASK_ADDR                 0x000001cc
#define EFM32_CMU_PCNTCLKENMASK_MASK                 0x00000001
  #define EFM32_CMU_PCNTCLKENMASK_PCNT0            0x00000001

#define EFM32_CMU_TEST_ADDR                          0x000001d0
#define EFM32_CMU_TEST_MASK                          0x1f00ff01
  #define EFM32_CMU_TEST_EMUOSCLV                  0x00000001
  #define EFM32_CMU_TEST_CLKOUTHIDDENSEL(v)        ((EFM32_CMU_TEST_CLKOUTHIDDENSEL_##v) << 8)
  #define EFM32_CMU_TEST_CLKOUTHIDDENSEL_SET(x, v) do { (x) = (((x) & ~0xf00) | ((EFM32_CMU_TEST_CLKOUTHIDDENSEL_##v) << 8)); } while(0)
  #define EFM32_CMU_TEST_CLKOUTHIDDENSEL_SETVAL(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFM32_CMU_TEST_CLKOUTHIDDENSEL_GET(x)    (((x) >> 8) & 0xf)
/**  */
    #define EFM32_CMU_TEST_CLKOUTHIDDENSEL_DISABLED  0x00000000
/**  */
    #define EFM32_CMU_TEST_CLKOUTHIDDENSEL_ULFRCO    0x00000001
/**  */
    #define EFM32_CMU_TEST_CLKOUTHIDDENSEL_EMUOSCLV  0x00000002
/**  */
    #define EFM32_CMU_TEST_CLKOUTHIDDENSEL_EMUOSCHV  0x00000003
/**  */
    #define EFM32_CMU_TEST_CLKOUTHIDDENSEL_HFXORAW   0x00000004
/**  */
    #define EFM32_CMU_TEST_CLKOUTHIDDENSEL_LFRCOVREF 0x00000005
  #define EFM32_CMU_TEST_OSCCTRLSEL(v)             ((EFM32_CMU_TEST_OSCCTRLSEL_##v) << 12)
  #define EFM32_CMU_TEST_OSCCTRLSEL_SET(x, v)      do { (x) = (((x) & ~0xf000) | ((EFM32_CMU_TEST_OSCCTRLSEL_##v) << 12)); } while(0)
  #define EFM32_CMU_TEST_OSCCTRLSEL_SETVAL(x, v)   do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFM32_CMU_TEST_OSCCTRLSEL_GET(x)         (((x) >> 12) & 0xf)
/**  */
    #define EFM32_CMU_TEST_OSCCTRLSEL_DISABLED       0x00000000
/**  */
    #define EFM32_CMU_TEST_OSCCTRLSEL_ULFRCOEN       0x00000001
/**  */
    #define EFM32_CMU_TEST_OSCCTRLSEL_LFRCOEN        0x00000002
/**  */
    #define EFM32_CMU_TEST_OSCCTRLSEL_LFXOCOREEN     0x00000003
/**  */
    #define EFM32_CMU_TEST_OSCCTRLSEL_LFXOBUFFEREN   0x00000004
/**  */
    #define EFM32_CMU_TEST_OSCCTRLSEL_HFRCOEN        0x00000005
/**  */
    #define EFM32_CMU_TEST_OSCCTRLSEL_AUXHFRCOEN     0x00000006
/**  */
    #define EFM32_CMU_TEST_OSCCTRLSEL_HFXOCOREEN     0x00000007
/**  */
    #define EFM32_CMU_TEST_OSCCTRLSEL_HFXOCLKDIGEN   0x00000008
/**  */
    #define EFM32_CMU_TEST_OSCCTRLSEL_EMUOSCEN       0x00000009
  #define EFM32_CMU_TEST_LEWSYNCPRS                0x01000000
  #define EFM32_CMU_TEST_LEWSYNCBLOCK              0x02000000
  #define EFM32_CMU_TEST_LEWSYNCDELAY              0x04000000
  #define EFM32_CMU_TEST_LEWSYNCOBS                0x08000000
  #define EFM32_CMU_TEST_LEWSYNCOBSINV             0x10000000

#define EFM32_CMU_TESTHFRCOCTRL_ADDR                 0x000001d4
#define EFM32_CMU_TESTHFRCOCTRL_MASK                 0x000001f1
  #define EFM32_CMU_TESTHFRCOCTRL_CMPBIASSWDIS     0x00000001
  #define EFM32_CMU_TESTHFRCOCTRL_SPREADCAL(v)     ((v) << 4)
  #define EFM32_CMU_TESTHFRCOCTRL_SPREADCAL_SET(x, v) do { (x) = (((x) & ~0x1f0) | ((v) << 4)); } while(0)
  #define EFM32_CMU_TESTHFRCOCTRL_SPREADCAL_GET(x) (((x) >> 4) & 0x1f)

#define EFM32_CMU_TESTAUXHFRCOCTRL_ADDR              0x000001d8
#define EFM32_CMU_TESTAUXHFRCOCTRL_MASK              0x000001f1
  #define EFM32_CMU_TESTAUXHFRCOCTRL_CMPBIASSWDIS  0x00000001
  #define EFM32_CMU_TESTAUXHFRCOCTRL_SPREADCAL(v)  ((v) << 4)
  #define EFM32_CMU_TESTAUXHFRCOCTRL_SPREADCAL_SET(x, v) do { (x) = (((x) & ~0x1f0) | ((v) << 4)); } while(0)
  #define EFM32_CMU_TESTAUXHFRCOCTRL_SPREADCAL_GET(x) (((x) >> 4) & 0x1f)

#define EFM32_CMU_TESTLFRCOCTRL_ADDR                 0x000001dc
#define EFM32_CMU_TESTLFRCOCTRL_MASK                 0x0ff1fff3
  #define EFM32_CMU_TESTLFRCOCTRL_DISOSC           0x00000001
  #define EFM32_CMU_TESTLFRCOCTRL_DISSYNC          0x00000002
  #define EFM32_CMU_TESTLFRCOCTRL_MODE(v)          ((EFM32_CMU_TESTLFRCOCTRL_MODE_##v) << 4)
  #define EFM32_CMU_TESTLFRCOCTRL_MODE_SET(x, v)   do { (x) = (((x) & ~0x30) | ((EFM32_CMU_TESTLFRCOCTRL_MODE_##v) << 4)); } while(0)
  #define EFM32_CMU_TESTLFRCOCTRL_MODE_SETVAL(x, v) do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define EFM32_CMU_TESTLFRCOCTRL_MODE_GET(x)      (((x) >> 4) & 0x3)
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_MODE_E32KHZDUTY50 0x00000000
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_MODE_E64KHZDUTY5 0x00000001
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_MODE_E16KHZDUTY50 0x00000002
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_MODE_E32KHZDUTY5 0x00000003
  #define EFM32_CMU_TESTLFRCOCTRL_SELCLKDIV(v)     ((EFM32_CMU_TESTLFRCOCTRL_SELCLKDIV_##v) << 6)
  #define EFM32_CMU_TESTLFRCOCTRL_SELCLKDIV_SET(x, v) do { (x) = (((x) & ~0xc0) | ((EFM32_CMU_TESTLFRCOCTRL_SELCLKDIV_##v) << 6)); } while(0)
  #define EFM32_CMU_TESTLFRCOCTRL_SELCLKDIV_SETVAL(x, v) do { (x) = (((x) & ~0xc0) | ((v) << 6)); } while(0)
  #define EFM32_CMU_TESTLFRCOCTRL_SELCLKDIV_GET(x) (((x) >> 6) & 0x3)
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_SELCLKDIV_DIV1   0x00000000
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_SELCLKDIV_DIV2   0x00000001
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_SELCLKDIV_DIV4   0x00000002
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_SELCLKDIV_DIV8   0x00000003
  #define EFM32_CMU_TESTLFRCOCTRL_VREFUPDATE(v)    ((EFM32_CMU_TESTLFRCOCTRL_VREFUPDATE_##v) << 8)
  #define EFM32_CMU_TESTLFRCOCTRL_VREFUPDATE_SET(x, v) do { (x) = (((x) & ~0x300) | ((EFM32_CMU_TESTLFRCOCTRL_VREFUPDATE_##v) << 8)); } while(0)
  #define EFM32_CMU_TESTLFRCOCTRL_VREFUPDATE_SETVAL(x, v) do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define EFM32_CMU_TESTLFRCOCTRL_VREFUPDATE_GET(x) (((x) >> 8) & 0x3)
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_VREFUPDATE_E32CYCLES 0x00000000
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_VREFUPDATE_E64CYCLES 0x00000001
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_VREFUPDATE_E128CYCLES 0x00000002
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_VREFUPDATE_E256CYCLES 0x00000003
  #define EFM32_CMU_TESTLFRCOCTRL_VREFPRECH(v)     ((EFM32_CMU_TESTLFRCOCTRL_VREFPRECH_##v) << 10)
  #define EFM32_CMU_TESTLFRCOCTRL_VREFPRECH_SET(x, v) do { (x) = (((x) & ~0xc00) | ((EFM32_CMU_TESTLFRCOCTRL_VREFPRECH_##v) << 10)); } while(0)
  #define EFM32_CMU_TESTLFRCOCTRL_VREFPRECH_SETVAL(x, v) do { (x) = (((x) & ~0xc00) | ((v) << 10)); } while(0)
  #define EFM32_CMU_TESTLFRCOCTRL_VREFPRECH_GET(x) (((x) >> 10) & 0x3)
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_VREFPRECH_E2CYCLES 0x00000000
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_VREFPRECH_E4CYCLES 0x00000001
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_VREFPRECH_E8CYCLES 0x00000002
/**  */
    #define EFM32_CMU_TESTLFRCOCTRL_VREFPRECH_E16CYCLES 0x00000003
  #define EFM32_CMU_TESTLFRCOCTRL_FLIPCHOP         0x00001000
  #define EFM32_CMU_TESTLFRCOCTRL_DEMCLKSEL        0x00002000
  #define EFM32_CMU_TESTLFRCOCTRL_WELLBUFDIS       0x00004000
  #define EFM32_CMU_TESTLFRCOCTRL_FORCECOMP        0x00008000
  #define EFM32_CMU_TESTLFRCOCTRL_BLOCKIREF        0x00010000
  #define EFM32_CMU_TESTLFRCOCTRL_RNSHUNT(v)       ((v) << 20)
  #define EFM32_CMU_TESTLFRCOCTRL_RNSHUNT_SET(x, v) do { (x) = (((x) & ~0xf00000) | ((v) << 20)); } while(0)
  #define EFM32_CMU_TESTLFRCOCTRL_RNSHUNT_GET(x)   (((x) >> 20) & 0xf)
  #define EFM32_CMU_TESTLFRCOCTRL_RPSHUNT(v)       ((v) << 24)
  #define EFM32_CMU_TESTLFRCOCTRL_RPSHUNT_SET(x, v) do { (x) = (((x) & ~0xf000000) | ((v) << 24)); } while(0)
  #define EFM32_CMU_TESTLFRCOCTRL_RPSHUNT_GET(x)   (((x) >> 24) & 0xf)

#define EFM32_CMU_TESTHFXOCTRL_ADDR                  0x000001e0
#define EFM32_CMU_TESTHFXOCTRL_MASK                  0x00003fff
  #define EFM32_CMU_TESTHFXOCTRL_OVERRIDE          0x00000001
  #define EFM32_CMU_TESTHFXOCTRL_BIASEN            0x00000002
  #define EFM32_CMU_TESTHFXOCTRL_CLKDIGEN          0x00000004
  #define EFM32_CMU_TESTHFXOCTRL_CLKAUXPLLEN       0x00000008
  #define EFM32_CMU_TESTHFXOCTRL_CLKIFADCEN        0x00000010
  #define EFM32_CMU_TESTHFXOCTRL_CLKSYEN           0x00000020
  #define EFM32_CMU_TESTHFXOCTRL_COREEN            0x00000040
  #define EFM32_CMU_TESTHFXOCTRL_REGEN             0x00000080
  #define EFM32_CMU_TESTHFXOCTRL_DOXTALKICK        0x00000100
  #define EFM32_CMU_TESTHFXOCTRL_CLKDIGINV         0x00000200
  #define EFM32_CMU_TESTHFXOCTRL_CLKAUXPLLINV      0x00000400
  #define EFM32_CMU_TESTHFXOCTRL_CLKIFADCINV       0x00000800
  #define EFM32_CMU_TESTHFXOCTRL_CLKSYINV          0x00001000
  #define EFM32_CMU_TESTHFXOCTRL_CLKDRIVERSDIS     0x00002000

#define EFM32_CMU_TESTLFXOCTRL_ADDR                  0x000001e4
#define EFM32_CMU_TESTLFXOCTRL_MASK                  0x00000001
  #define EFM32_CMU_TESTLFXOCTRL_LFXOBLEEDER       0x00000001

#endif

