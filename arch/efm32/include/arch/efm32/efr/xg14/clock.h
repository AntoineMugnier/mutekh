
#ifndef EFM32_CLOCK_H_
#define EFM32_CLOCK_H_

#define EFM32_CLOCK_ENUM_NEXT(N)  /** @hidden */ N,  N##_ = N - 1
#define EFM32_CLOCK_ENUM_PREV(N)  /** @hidden */ N##_,  N = N##_ - 1

enum efm32_clock_node_e {
  /* oscillators */
  EFM32_CLOCK_HFXO,             /* internal */
  EFM32_CLOCK_HFRCO,            /* internal */
  EFM32_CLOCK_AUXHFRCO,         /* internal */
# define EFM32_CLOCK_AUXHFRCO EFM32_CLOCK_AUXHFRCO

  /* internal clock signals */
  EFM32_CLOCK_HFRCODIV2,        /* internal */
  EFM32_CLOCK_HFCLK,            /* internal */
  EFM32_CLOCK_HFCORECLK,        /* internal */
  EFM32_CLOCK_HFPERCLK,         /* internal */
  EFM32_CLOCK_HFRADIOCLK,       /* internal */
  EFM32_CLOCK_HFRADIOALTCLK,    /* internal */
  EFM32_CLOCK_HFBUSCLK,         /* internal */
  EFM32_CLOCK_LE,               /* internal */
  EFM32_CLOCK_LFACLK,           /* internal */
  EFM32_CLOCK_LFBCLK,           /* internal */
  EFM32_CLOCK_LFECLK,           /* internal */
  EFM32_CLOCK_LFRCLK,           /* internal */

  EFM32_CLOCK_LFXO,             /* internal or source ep */
  EFM32_CLOCK_LFRCO,            /* internal or source ep */
  EFM32_CLOCK_ULFRCO,           /* internal or source ep */

  EFM32_CLOCK_OUT0,             /* source ep */
  EFM32_CLOCK_OUT1,             /* source ep */

  /* source endpoints under HFCORECLK */
  EFM32_CLOCK_ENUM_NEXT(EFM32_CLOCK_HFCORECLK_first),

  EFM32_CLOCK_CPU,

  EFM32_CLOCK_ENUM_PREV(EFM32_CLOCK_HFCORECLK_last),

  /* source endpoints under HFBUSCLK */
  EFM32_CLOCK_ENUM_NEXT(EFM32_CLOCK_HFBUSCLK_first),

#ifdef CONFIG_DRIVER_EFM32_GPIO
  EFM32_CLOCK_GPIO,
# define EFM32_CLOCK_GPIO EFM32_CLOCK_GPIO
#endif

  EFM32_CLOCK_CRYPTO0,
# define EFM32_CLOCK_CRYPTO0 EFM32_CLOCK_CRYPTO0

  EFM32_CLOCK_PRS,
# define EFM32_CLOCK_PRS EFM32_CLOCK_PRS

#ifdef CONFIG_DRIVER_EFR32_DMA
  EFM32_CLOCK_LDMA,
# define EFM32_CLOCK_LDMA EFM32_CLOCK_LDMA
#endif
#if 0
  EFM32_CLOCK_GPCRC,
# define EFM32_CLOCK_GPCRC EFM32_CLOCK_GPCRC
#endif

  EFM32_CLOCK_ENUM_PREV(EFM32_CLOCK_HFBUSCLK_last),

  EFM32_CLOCK_ENUM_NEXT(EFM32_CLOCK_HFRADIOCLK_first),
  EFM32_CLOCK_PROTIMER,
# define EFM32_CLOCK_PROTIMER EFM32_CLOCK_PROTIMER
  EFM32_CLOCK_RFSENSE, 
# define EFM32_CLOCK_RFSENSE EFM32_CLOCK_RFSENSE
  EFM32_CLOCK_RAC,     
# define EFM32_CLOCK_RAC EFM32_CLOCK_RAC
  EFM32_CLOCK_FRC,     
# define EFM32_CLOCK_FRC EFM32_CLOCK_FRC
  EFM32_CLOCK_CRC,     
# define EFM32_CLOCK_CRC EFM32_CLOCK_CRC
  EFM32_CLOCK_SYNTH,   
# define EFM32_CLOCK_SYNTH EFM32_CLOCK_SYNTH
  EFM32_CLOCK_MODEM,   
# define EFM32_CLOCK_MODEM EFM32_CLOCK_MODEM
  EFM32_CLOCK_AGC,     
# define EFM32_CLOCK_AGC EFM32_CLOCK_AGC
  EFM32_CLOCK_ENUM_PREV(EFM32_CLOCK_HFRADIOCLK_last),

  EFM32_CLOCK_ENUM_NEXT(EFM32_CLOCK_HFRADIOALTCLK_first),
  EFM32_CLOCK_BUFC,    
# define EFM32_CLOCK_BUFC EFM32_CLOCK_BUFC
  EFM32_CLOCK_ENUM_PREV(EFM32_CLOCK_HFRADIOALTCLK_last),

  /* source endpoints under HFPERCLK */
  EFM32_CLOCK_ENUM_NEXT(EFM32_CLOCK_HFPERCLK_first),

#if defined(CONFIG_DRIVER_EFM32_TIMER) || defined(CONFIG_DRIVER_EFM32_PWM)
  EFM32_CLOCK_TIMER0,
# define EFM32_CLOCK_TIMER0 EFM32_CLOCK_TIMER0
  EFM32_CLOCK_TIMER1,
# define EFM32_CLOCK_TIMER1 EFM32_CLOCK_TIMER1
  EFM32_CLOCK_WTIMER0,
# define EFM32_CLOCK_WTIMER0 EFM32_CLOCK_WTIMER0
#endif

#ifdef CONFIG_DRIVER_EFM32_USART
  EFM32_CLOCK_USART1,
# define EFM32_CLOCK_USART1 EFM32_CLOCK_USART1
  EFM32_CLOCK_USART0,
# define EFM32_CLOCK_USART0 EFM32_CLOCK_USART0
#endif

#if defined(CONFIG_DRIVER_EFM32_I2C) || defined(CONFIG_DRIVER_EFM32_I2C_SLAVE)
  EFM32_CLOCK_I2C0,
# define EFM32_CLOCK_I2C0 EFM32_CLOCK_I2C0
#endif


#ifdef CONFIG_DRIVER_EFM32_ADC
  EFM32_CLOCK_ADC0,
# define EFM32_CLOCK_ADC0 EFM32_CLOCK_ADC0
#endif

#if 0
  EFM32_CLOCK_ACMP0,
# define EFM32_CLOCK_ACMP0 EFM32_CLOCK_ACMP0
  EFM32_CLOCK_DAC0,
# define EFM32_CLOCK_DAC0 EFM32_CLOCK_DAC0
  EFM32_CLOCK_ACMP1,
# define EFM32_CLOCK_ACMP1 EFM32_CLOCK_ACMP1
  EFM32_CLOCK_IDAC0,
# define EFM32_CLOCK_IDAC0 EFM32_CLOCK_IDAC0
#endif

  EFM32_CLOCK_ENUM_PREV(EFM32_CLOCK_HFPERCLK_last),

  /* source endpoints under LFACLK */

  EFM32_CLOCK_ENUM_NEXT(EFM32_CLOCK_LFACLK_first),


  EFM32_CLOCK_LESENSE,
# define EFM32_CLOCK_LESENSE EFM32_CLOCK_LESENSE
#if 0
  EFM32_CLOCK_LETIMER,
# define EFM32_CLOCK_LETIMER EFM32_CLOCK_LETIMER
#endif

  EFM32_CLOCK_ENUM_PREV(EFM32_CLOCK_LFACLK_last),

  /* source endpoints under LFBCLK */

  EFM32_CLOCK_ENUM_NEXT(EFM32_CLOCK_LFBCLK_first),

#if defined(CONFIG_DRIVER_EFM32_LEUART)
  EFM32_CLOCK_LEUART0,
# define EFM32_CLOCK_LEUART0 EFM32_CLOCK_LEUART0
#endif
#if 0
  EFM32_CLOCK_SYSTICK,
# define EFM32_CLOCK_SYSTICK EFM32_CLOCK_SYSTICK
  EFM32_CLOCK_CSEN,
# define EFM32_CLOCK_CSEN EFM32_CLOCK_CSEN
#endif

  EFM32_CLOCK_ENUM_PREV(EFM32_CLOCK_LFBCLK_last),

  EFM32_CLOCK_ENUM_NEXT(EFM32_CLOCK_LFECLK_first),
  EFM32_CLOCK_RTCC,
# define EFM32_CLOCK_RTCC EFM32_CLOCK_RTCC
  EFM32_CLOCK_ENUM_PREV(EFM32_CLOCK_LFECLK_last),

  EFM32_CLOCK_ENUM_NEXT(EFM32_CLOCK_LFRCLK_first),
  EFM32_CLOCK_PRORTCC,
  EFM32_CLOCK_ENUM_PREV(EFM32_CLOCK_LFRCLK_last),

  EFM32_CLOCK_count,
};

#define EFM32_CLOCK_OSC_COUNT 6
#define EFM32_CLOCK_INTL_COUNT 6

#if defined(CONFIG_DRIVER_EFM32_WDOG)
# define EFM32_CLOCK_FIRST_EP EFM32_CLOCK_LFXO
#else
# define EFM32_CLOCK_FIRST_EP EFM32_CLOCK_OUT0
#endif

#define EFM32_CLOCK_EP_COUNT  (EFM32_CLOCK_count - EFM32_CLOCK_FIRST_EP)

#endif

