/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs cdefs_use_reg_mask=1 cdefs_use_value_comment=0               \
     cdefs_use_reg_comment=0 cdefs_use_field_comment=0 cdefs_use_field_shift=1 \
     cdefs_sfx_field_shift=_IDX
*/

#ifndef _EFR32_PROTIMER_BFGEN_DEFS_
#define _EFR32_PROTIMER_BFGEN_DEFS_

#define EFR32_PROTIMER_CTRL_ADDR                     0x00000000
#define EFR32_PROTIMER_CTRL_MASK                     0x33f33336
  #define EFR32_PROTIMER_CTRL_DEBUGRUN             0x00000002
  #define EFR32_PROTIMER_CTRL_DEBUGRUN_IDX         1
  #define EFR32_PROTIMER_CTRL_DMACLRACT            0x00000004
  #define EFR32_PROTIMER_CTRL_DMACLRACT_IDX        2
  #define EFR32_PROTIMER_CTRL_OSMEN                0x00000010
  #define EFR32_PROTIMER_CTRL_OSMEN_IDX            4
  #define EFR32_PROTIMER_CTRL_ZEROSTARTEN          0x00000020
  #define EFR32_PROTIMER_CTRL_ZEROSTARTEN_IDX      5
  #define EFR32_PROTIMER_CTRL_PRECNTSRC_IDX        8
  #define EFR32_PROTIMER_CTRL_PRECNTSRC(v)         ((EFR32_PROTIMER_CTRL_PRECNTSRC_##v) << 8)
  #define EFR32_PROTIMER_CTRL_PRECNTSRC_SET(x, v)  do { (x) = (((x) & ~0x300) | ((EFR32_PROTIMER_CTRL_PRECNTSRC_##v) << 8)); } while(0)
  #define EFR32_PROTIMER_CTRL_PRECNTSRC_GET(x)     (((x) >> 8) & 0x3)
    #define EFR32_PROTIMER_CTRL_PRECNTSRC_DISABLED   0x00000000
    #define EFR32_PROTIMER_CTRL_PRECNTSRC_CLOCK      0x00000001
  #define EFR32_PROTIMER_CTRL_BASECNTSRC_IDX       12
  #define EFR32_PROTIMER_CTRL_BASECNTSRC(v)        ((EFR32_PROTIMER_CTRL_BASECNTSRC_##v) << 12)
  #define EFR32_PROTIMER_CTRL_BASECNTSRC_SET(x, v) do { (x) = (((x) & ~0x3000) | ((EFR32_PROTIMER_CTRL_BASECNTSRC_##v) << 12)); } while(0)
  #define EFR32_PROTIMER_CTRL_BASECNTSRC_GET(x)    (((x) >> 12) & 0x3)
    #define EFR32_PROTIMER_CTRL_BASECNTSRC_DISABLED  0x00000000
    #define EFR32_PROTIMER_CTRL_BASECNTSRC_PRECNTOF  0x00000001
  #define EFR32_PROTIMER_CTRL_WRAPCNTSRC_IDX       16
  #define EFR32_PROTIMER_CTRL_WRAPCNTSRC(v)        ((EFR32_PROTIMER_CTRL_WRAPCNTSRC_##v) << 16)
  #define EFR32_PROTIMER_CTRL_WRAPCNTSRC_SET(x, v) do { (x) = (((x) & ~0x30000) | ((EFR32_PROTIMER_CTRL_WRAPCNTSRC_##v) << 16)); } while(0)
  #define EFR32_PROTIMER_CTRL_WRAPCNTSRC_GET(x)    (((x) >> 16) & 0x3)
    #define EFR32_PROTIMER_CTRL_WRAPCNTSRC_DISABLED  0x00000000
    #define EFR32_PROTIMER_CTRL_WRAPCNTSRC_PRECNTOF  0x00000001
    #define EFR32_PROTIMER_CTRL_WRAPCNTSRC_BASECNTOF 0x00000002
    #define EFR32_PROTIMER_CTRL_WRAPCNTSRC_UNUSED    0x00000003
  #define EFR32_PROTIMER_CTRL_TOUT_SRC_COUNT       2
  #define EFR32_PROTIMER_CTRL_TOUT_SRC_IDX(fidx)   ((fidx) * 4 + 20)
  #define EFR32_PROTIMER_CTRL_TOUT_SRC(fidx, v)    ((EFR32_PROTIMER_CTRL_TOUT_SRC_##v) << ((fidx) * 4 + 20))
  #define EFR32_PROTIMER_CTRL_TOUT_SRC_SET(fidx, x, v) do { (x) = (((x) & ~(0x300000 << ((fidx) * 4))) | ((EFR32_PROTIMER_CTRL_TOUT_SRC_##v) << ((fidx) * 4 + 20))); } while(0)
  #define EFR32_PROTIMER_CTRL_TOUT_SRC_GET(fidx, x) (((x) >> ((fidx) * 4 + 20)) & 0x3)
  #define EFR32_PROTIMER_CTRL_TOUT_SRC_DISABLED    0x00000000
  #define EFR32_PROTIMER_CTRL_TOUT_SRC_PRECNTOF    0x00000001
  #define EFR32_PROTIMER_CTRL_TOUT_SRC_BASECNTOF   0x00000002
  #define EFR32_PROTIMER_CTRL_TOUT_SRC_WRAPCNTOF   0x00000003
  #define EFR32_PROTIMER_CTRL_TOUT_SYNCSRC_COUNT   2
  #define EFR32_PROTIMER_CTRL_TOUT_SYNCSRC_IDX(fidx) ((fidx) * 2 + 22)
  #define EFR32_PROTIMER_CTRL_TOUT_SYNCSRC(fidx, v) ((EFR32_PROTIMER_CTRL_TOUT_SYNCSRC_##v) << ((fidx) * 2 + 22))
  #define EFR32_PROTIMER_CTRL_TOUT_SYNCSRC_SET(fidx, x, v) do { (x) = (((x) & ~(0xc00000 << ((fidx) * 2))) | ((EFR32_PROTIMER_CTRL_TOUT_SYNCSRC_##v) << ((fidx) * 2 + 22))); } while(0)
  #define EFR32_PROTIMER_CTRL_TOUT_SYNCSRC_GET(fidx, x) (((x) >> ((fidx) * 2 + 22)) & 0x3)
  #define EFR32_PROTIMER_CTRL_TOUT_SYNCSRC_DISABLED 0x00000000
  #define EFR32_PROTIMER_CTRL_TOUT_SYNCSRC_PRECNTOF 0x00000001
  #define EFR32_PROTIMER_CTRL_TOUT_SYNCSRC_BASECNTOF 0x00000002
  #define EFR32_PROTIMER_CTRL_TOUT_SYNCSRC_WRAPCNTOF 0x00000003
  #define EFR32_PROTIMER_CTRL_TOUT_MODE_COUNT      2
  #define EFR32_PROTIMER_CTRL_TOUT_MODE_IDX(fidx)  ((fidx) + 28)
  #define EFR32_PROTIMER_CTRL_TOUT_MODE(fidx, v)   ((EFR32_PROTIMER_CTRL_TOUT_MODE_##v) << ((fidx) + 28))
  #define EFR32_PROTIMER_CTRL_TOUT_MODE_SET(fidx, x, v) do { (x) = (((x) & ~(0x10000000 << ((fidx)))) | ((EFR32_PROTIMER_CTRL_TOUT_MODE_##v) << ((fidx) + 28))); } while(0)
  #define EFR32_PROTIMER_CTRL_TOUT_MODE_GET(fidx, x) (((x) >> ((fidx) + 28)) & 0x1)
  #define EFR32_PROTIMER_CTRL_TOUT_MODE_FREE       0x00000000
  #define EFR32_PROTIMER_CTRL_TOUT_MODE_ONESHOT    0x00000001

#define EFR32_PROTIMER_CMD_ADDR                      0x00000004
#define EFR32_PROTIMER_CMD_MASK                      0x000700f7
  #define EFR32_PROTIMER_CMD_START                 0x00000001
  #define EFR32_PROTIMER_CMD_START_IDX             0
  #define EFR32_PROTIMER_CMD_RTCSYNCSTART          0x00000002
  #define EFR32_PROTIMER_CMD_RTCSYNCSTART_IDX      1
  #define EFR32_PROTIMER_CMD_STOP                  0x00000004
  #define EFR32_PROTIMER_CMD_STOP_IDX              2
  #define EFR32_PROTIMER_CMD_TOUTSTART_COUNT       2
  #define EFR32_PROTIMER_CMD_TOUTSTART(fidx)       (0x00000010 << ((fidx) * 2))
  #define EFR32_PROTIMER_CMD_TOUTSTART_IDX(fidx)   ((fidx) * 2 + 4)
  #define EFR32_PROTIMER_CMD_TOUTSTOP_COUNT        2
  #define EFR32_PROTIMER_CMD_TOUTSTOP(fidx)        (0x00000020 << ((fidx) * 2))
  #define EFR32_PROTIMER_CMD_TOUTSTOP_IDX(fidx)    ((fidx) * 2 + 5)
  #define EFR32_PROTIMER_CMD_LBTSTART              0x00010000
  #define EFR32_PROTIMER_CMD_LBTSTART_IDX          16
  #define EFR32_PROTIMER_CMD_LBTPAUSE              0x00020000
  #define EFR32_PROTIMER_CMD_LBTPAUSE_IDX          17
  #define EFR32_PROTIMER_CMD_LBTSTOP               0x00040000
  #define EFR32_PROTIMER_CMD_LBTSTOP_IDX           18

#define EFR32_PROTIMER_PRSCTRL_ADDR                  0x00000008
#define EFR32_PROTIMER_PRSCTRL_MASK                  0x00fefefe
  #define EFR32_PROTIMER_PRSCTRL_STARTPRSEN        0x00000002
  #define EFR32_PROTIMER_PRSCTRL_STARTPRSEN_IDX    1
  #define EFR32_PROTIMER_PRSCTRL_STARTEDGE_IDX     2
  #define EFR32_PROTIMER_PRSCTRL_STARTEDGE(v)      ((EFR32_PROTIMER_PRSCTRL_STARTEDGE_##v) << 2)
  #define EFR32_PROTIMER_PRSCTRL_STARTEDGE_SET(x, v) do { (x) = (((x) & ~0xc) | ((EFR32_PROTIMER_PRSCTRL_STARTEDGE_##v) << 2)); } while(0)
  #define EFR32_PROTIMER_PRSCTRL_STARTEDGE_GET(x)  (((x) >> 2) & 0x3)
    #define EFR32_PROTIMER_PRSCTRL_STARTEDGE_RISING  0x00000000
    #define EFR32_PROTIMER_PRSCTRL_STARTEDGE_FALLING 0x00000001
    #define EFR32_PROTIMER_PRSCTRL_STARTEDGE_BOTH    0x00000002
    #define EFR32_PROTIMER_PRSCTRL_STARTEDGE_DISABLED 0x00000003
  #define EFR32_PROTIMER_PRSCTRL_STARTPRSSEL_IDX   4
  #define EFR32_PROTIMER_PRSCTRL_STARTPRSSEL(v)    ((v) << 4)
  #define EFR32_PROTIMER_PRSCTRL_STARTPRSSEL_SET(x, v) do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define EFR32_PROTIMER_PRSCTRL_STARTPRSSEL_GET(x) (((x) >> 4) & 0xf)
  #define EFR32_PROTIMER_PRSCTRL_STOPPRSEN         0x00000200
  #define EFR32_PROTIMER_PRSCTRL_STOPPRSEN_IDX     9
  #define EFR32_PROTIMER_PRSCTRL_STOPEDGE_IDX      10
  #define EFR32_PROTIMER_PRSCTRL_STOPEDGE(v)       ((EFR32_PROTIMER_PRSCTRL_STOPEDGE_##v) << 10)
  #define EFR32_PROTIMER_PRSCTRL_STOPEDGE_SET(x, v) do { (x) = (((x) & ~0xc00) | ((EFR32_PROTIMER_PRSCTRL_STOPEDGE_##v) << 10)); } while(0)
  #define EFR32_PROTIMER_PRSCTRL_STOPEDGE_GET(x)   (((x) >> 10) & 0x3)
    #define EFR32_PROTIMER_PRSCTRL_STOPEDGE_RISING   0x00000000
    #define EFR32_PROTIMER_PRSCTRL_STOPEDGE_FALLING  0x00000001
    #define EFR32_PROTIMER_PRSCTRL_STOPEDGE_BOTH     0x00000002
    #define EFR32_PROTIMER_PRSCTRL_STOPEDGE_DISABLED 0x00000003
  #define EFR32_PROTIMER_PRSCTRL_STOPPRSSEL_IDX    12
  #define EFR32_PROTIMER_PRSCTRL_STOPPRSSEL(v)     ((v) << 12)
  #define EFR32_PROTIMER_PRSCTRL_STOPPRSSEL_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_PROTIMER_PRSCTRL_STOPPRSSEL_GET(x) (((x) >> 12) & 0xf)
  #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGERPRSEN  0x00020000
  #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGERPRSEN_IDX 17
  #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGEREDGE_IDX 18
  #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGEREDGE(v) ((EFR32_PROTIMER_PRSCTRL_RTCCTRIGGEREDGE_##v) << 18)
  #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGEREDGE_SET(x, v) do { (x) = (((x) & ~0xc0000) | ((EFR32_PROTIMER_PRSCTRL_RTCCTRIGGEREDGE_##v) << 18)); } while(0)
  #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGEREDGE_GET(x) (((x) >> 18) & 0x3)
    #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGEREDGE_RISING 0x00000000
    #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGEREDGE_FALLING 0x00000001
    #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGEREDGE_BOTH 0x00000002
    #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGEREDGE_DISABLED 0x00000003
  #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGERPRSSEL_IDX 20
  #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGERPRSSEL(v) ((v) << 20)
  #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGERPRSSEL_SET(x, v) do { (x) = (((x) & ~0xf00000) | ((v) << 20)); } while(0)
  #define EFR32_PROTIMER_PRSCTRL_RTCCTRIGGERPRSSEL_GET(x) (((x) >> 20) & 0xf)

#define EFR32_PROTIMER_STATUS_ADDR                   0x0000000c
#define EFR32_PROTIMER_STATUS_MASK                   0x00001fff
  #define EFR32_PROTIMER_STATUS_RUNNING            0x00000001
  #define EFR32_PROTIMER_STATUS_RUNNING_IDX        0
  #define EFR32_PROTIMER_STATUS_LBTSYNC            0x00000002
  #define EFR32_PROTIMER_STATUS_LBTSYNC_IDX        1
  #define EFR32_PROTIMER_STATUS_LBTRUNNING         0x00000004
  #define EFR32_PROTIMER_STATUS_LBTRUNNING_IDX     2
  #define EFR32_PROTIMER_STATUS_LBTPAUSED          0x00000008
  #define EFR32_PROTIMER_STATUS_LBTPAUSED_IDX      3
  #define EFR32_PROTIMER_STATUS_TOUT_RUNNING_COUNT 2
  #define EFR32_PROTIMER_STATUS_TOUT_RUNNING(fidx) (0x00000010 << ((fidx) * 2))
  #define EFR32_PROTIMER_STATUS_TOUT_RUNNING_IDX(fidx) ((fidx) * 2 + 4)
  #define EFR32_PROTIMER_STATUS_TOUT_SYNC_COUNT    2
  #define EFR32_PROTIMER_STATUS_TOUT_SYNC(fidx)    (0x00000020 << ((fidx) * 2))
  #define EFR32_PROTIMER_STATUS_TOUT_SYNC_IDX(fidx) ((fidx) * 2 + 5)
  #define EFR32_PROTIMER_STATUS_ICV_COUNT          5
  #define EFR32_PROTIMER_STATUS_ICV(fidx)          (0x00000100 << ((fidx)))
  #define EFR32_PROTIMER_STATUS_ICV_IDX(fidx)      ((fidx) + 8)

#define EFR32_PROTIMER_PRECNT_ADDR                   0x00000010
#define EFR32_PROTIMER_PRECNT_MASK                   0x0000ffff
  #define EFR32_PROTIMER_PRECNT_PRECNT_IDX         0
  #define EFR32_PROTIMER_PRECNT_PRECNT(v)          ((v) << 0)
  #define EFR32_PROTIMER_PRECNT_PRECNT_SET(x, v)   do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_PRECNT_PRECNT_GET(x)      (((x) >> 0) & 0xffff)

#define EFR32_PROTIMER_BASECNT_ADDR                  0x00000014
#define EFR32_PROTIMER_BASECNT_MASK                  0x0000ffff
  #define EFR32_PROTIMER_BASECNT_BASECNT_IDX       0
  #define EFR32_PROTIMER_BASECNT_BASECNT(v)        ((v) << 0)
  #define EFR32_PROTIMER_BASECNT_BASECNT_SET(x, v) do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_BASECNT_BASECNT_GET(x)    (((x) >> 0) & 0xffff)

#define EFR32_PROTIMER_WRAPCNT_ADDR                  0x00000018
#define EFR32_PROTIMER_WRAPCNT_MASK                  0x00000000

#define EFR32_PROTIMER_BASEPRE_ADDR                  0x0000001c
#define EFR32_PROTIMER_BASEPRE_MASK                  0xffffffff
  #define EFR32_PROTIMER_BASEPRE_PRECNTV_IDX       0
  #define EFR32_PROTIMER_BASEPRE_PRECNTV(v)        ((v) << 0)
  #define EFR32_PROTIMER_BASEPRE_PRECNTV_SET(x, v) do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_BASEPRE_PRECNTV_GET(x)    (((x) >> 0) & 0xffff)
  #define EFR32_PROTIMER_BASEPRE_BASECNTV_IDX      16
  #define EFR32_PROTIMER_BASEPRE_BASECNTV(v)       ((v) << 16)
  #define EFR32_PROTIMER_BASEPRE_BASECNTV_SET(x, v) do { (x) = (((x) & ~0xffff0000) | ((v) << 16)); } while(0)
  #define EFR32_PROTIMER_BASEPRE_BASECNTV_GET(x)   (((x) >> 16) & 0xffff)

#define EFR32_PROTIMER_LWRAPCNT_ADDR                 0x00000020
#define EFR32_PROTIMER_LWRAPCNT_MASK                 0x00000000

#define EFR32_PROTIMER_PRECNTTOPADJ_ADDR             0x00000024
#define EFR32_PROTIMER_PRECNTTOPADJ_MASK             0x0000ffff
  #define EFR32_PROTIMER_PRECNTTOPADJ_PRECNTTOPADJ_IDX 0
  #define EFR32_PROTIMER_PRECNTTOPADJ_PRECNTTOPADJ(v) ((v) << 0)
  #define EFR32_PROTIMER_PRECNTTOPADJ_PRECNTTOPADJ_SET(x, v) do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_PRECNTTOPADJ_PRECNTTOPADJ_GET(x) (((x) >> 0) & 0xffff)

#define EFR32_PROTIMER_PRECNTTOP_ADDR                0x00000028
#define EFR32_PROTIMER_PRECNTTOP_MASK                0x00ffffff
  #define EFR32_PROTIMER_PRECNTTOP_PRECNTTOPFRAC_IDX 0
  #define EFR32_PROTIMER_PRECNTTOP_PRECNTTOPFRAC(v) ((v) << 0)
  #define EFR32_PROTIMER_PRECNTTOP_PRECNTTOPFRAC_SET(x, v) do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_PRECNTTOP_PRECNTTOPFRAC_GET(x) (((x) >> 0) & 0xff)
  #define EFR32_PROTIMER_PRECNTTOP_PRECNTTOP_IDX   8
  #define EFR32_PROTIMER_PRECNTTOP_PRECNTTOP(v)    ((v) << 8)
  #define EFR32_PROTIMER_PRECNTTOP_PRECNTTOP_SET(x, v) do { (x) = (((x) & ~0xffff00) | ((v) << 8)); } while(0)
  #define EFR32_PROTIMER_PRECNTTOP_PRECNTTOP_GET(x) (((x) >> 8) & 0xffff)

#define EFR32_PROTIMER_BASECNTTOP_ADDR               0x0000002c
#define EFR32_PROTIMER_BASECNTTOP_MASK               0x0000ffff
  #define EFR32_PROTIMER_BASECNTTOP_BASECNTTOP_IDX 0
  #define EFR32_PROTIMER_BASECNTTOP_BASECNTTOP(v)  ((v) << 0)
  #define EFR32_PROTIMER_BASECNTTOP_BASECNTTOP_SET(x, v) do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_BASECNTTOP_BASECNTTOP_GET(x) (((x) >> 0) & 0xffff)

#define EFR32_PROTIMER_WRAPCNTTOP_ADDR               0x00000030
#define EFR32_PROTIMER_WRAPCNTTOP_MASK               0x00000000

#define EFR32_PROTIMER_TOUTCNT_ADDR(ridx)            (0x00000034 + (ridx) * 12)
#define EFR32_PROTIMER_TOUTCNT_COUNT                 2
#define EFR32_PROTIMER_TOUTCNT_MASK                  0xffffffff
  #define EFR32_PROTIMER_TOUTCNT_PCNT_IDX          0
  #define EFR32_PROTIMER_TOUTCNT_PCNT(v)           ((v) << 0)
  #define EFR32_PROTIMER_TOUTCNT_PCNT_SET(x, v)    do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_TOUTCNT_PCNT_GET(x)       (((x) >> 0) & 0xffff)
  #define EFR32_PROTIMER_TOUTCNT_CNT_IDX           16
  #define EFR32_PROTIMER_TOUTCNT_CNT(v)            ((v) << 16)
  #define EFR32_PROTIMER_TOUTCNT_CNT_SET(x, v)     do { (x) = (((x) & ~0xffff0000) | ((v) << 16)); } while(0)
  #define EFR32_PROTIMER_TOUTCNT_CNT_GET(x)        (((x) >> 16) & 0xffff)

#define EFR32_PROTIMER_TOUTCNTTOP_ADDR(ridx)         (0x00000038 + (ridx) * 12)
#define EFR32_PROTIMER_TOUTCNTTOP_COUNT              2
#define EFR32_PROTIMER_TOUTCNTTOP_MASK               0xffffffff
  #define EFR32_PROTIMER_TOUTCNTTOP_PCNTTOP_IDX    0
  #define EFR32_PROTIMER_TOUTCNTTOP_PCNTTOP(v)     ((v) << 0)
  #define EFR32_PROTIMER_TOUTCNTTOP_PCNTTOP_SET(x, v) do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_TOUTCNTTOP_PCNTTOP_GET(x) (((x) >> 0) & 0xffff)
  #define EFR32_PROTIMER_TOUTCNTTOP_CNTTOP_IDX     16
  #define EFR32_PROTIMER_TOUTCNTTOP_CNTTOP(v)      ((v) << 16)
  #define EFR32_PROTIMER_TOUTCNTTOP_CNTTOP_SET(x, v) do { (x) = (((x) & ~0xffff0000) | ((v) << 16)); } while(0)
  #define EFR32_PROTIMER_TOUTCNTTOP_CNTTOP_GET(x)  (((x) >> 16) & 0xffff)

#define EFR32_PROTIMER_TOUTCOMP_ADDR(ridx)           (0x0000003c + (ridx) * 12)
#define EFR32_PROTIMER_TOUTCOMP_COUNT                2
#define EFR32_PROTIMER_TOUTCOMP_MASK                 0xffffffff
  #define EFR32_PROTIMER_TOUTCOMP_PCNTCOMP_IDX     0
  #define EFR32_PROTIMER_TOUTCOMP_PCNTCOMP(v)      ((v) << 0)
  #define EFR32_PROTIMER_TOUTCOMP_PCNTCOMP_SET(x, v) do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_TOUTCOMP_PCNTCOMP_GET(x)  (((x) >> 0) & 0xffff)
  #define EFR32_PROTIMER_TOUTCOMP_CNTCOMP_IDX      16
  #define EFR32_PROTIMER_TOUTCOMP_CNTCOMP(v)       ((v) << 16)
  #define EFR32_PROTIMER_TOUTCOMP_CNTCOMP_SET(x, v) do { (x) = (((x) & ~0xffff0000) | ((v) << 16)); } while(0)
  #define EFR32_PROTIMER_TOUTCOMP_CNTCOMP_GET(x)   (((x) >> 16) & 0xffff)

#define EFR32_PROTIMER_LBTCTRL_ADDR                  0x0000004c
#define EFR32_PROTIMER_LBTCTRL_MASK                  0x0f1f1fff
  #define EFR32_PROTIMER_LBTCTRL_STARTEXP_IDX      0
  #define EFR32_PROTIMER_LBTCTRL_STARTEXP(v)       ((v) << 0)
  #define EFR32_PROTIMER_LBTCTRL_STARTEXP_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_LBTCTRL_STARTEXP_GET(x)   (((x) >> 0) & 0xf)
  #define EFR32_PROTIMER_LBTCTRL_MAXEXP_IDX        4
  #define EFR32_PROTIMER_LBTCTRL_MAXEXP(v)         ((v) << 4)
  #define EFR32_PROTIMER_LBTCTRL_MAXEXP_SET(x, v)  do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define EFR32_PROTIMER_LBTCTRL_MAXEXP_GET(x)     (((x) >> 4) & 0xf)
  #define EFR32_PROTIMER_LBTCTRL_CCADELAY_IDX      8
  #define EFR32_PROTIMER_LBTCTRL_CCADELAY(v)       ((v) << 8)
  #define EFR32_PROTIMER_LBTCTRL_CCADELAY_SET(x, v) do { (x) = (((x) & ~0x1f00) | ((v) << 8)); } while(0)
  #define EFR32_PROTIMER_LBTCTRL_CCADELAY_GET(x)   (((x) >> 8) & 0x1f)
  #define EFR32_PROTIMER_LBTCTRL_CCAREPEAT_IDX     16
  #define EFR32_PROTIMER_LBTCTRL_CCAREPEAT(v)      ((v) << 16)
  #define EFR32_PROTIMER_LBTCTRL_CCAREPEAT_SET(x, v) do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_PROTIMER_LBTCTRL_CCAREPEAT_GET(x)  (((x) >> 16) & 0xf)
  #define EFR32_PROTIMER_LBTCTRL_FIXEDBACKOFF      0x00100000
  #define EFR32_PROTIMER_LBTCTRL_FIXEDBACKOFF_IDX  20
  #define EFR32_PROTIMER_LBTCTRL_RETRYLIMIT_IDX    24
  #define EFR32_PROTIMER_LBTCTRL_RETRYLIMIT(v)     ((v) << 24)
  #define EFR32_PROTIMER_LBTCTRL_RETRYLIMIT_SET(x, v) do { (x) = (((x) & ~0xf000000) | ((v) << 24)); } while(0)
  #define EFR32_PROTIMER_LBTCTRL_RETRYLIMIT_GET(x) (((x) >> 24) & 0xf)

#define EFR32_PROTIMER_LBTPRSCTRL_ADDR               0x00000050
#define EFR32_PROTIMER_LBTPRSCTRL_MASK               0x1f1f1f00
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTSTARTPRSEN  0x00000100
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTSTARTPRSEN_IDX 8
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTSTARTPRSSEL_IDX 9
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTSTARTPRSSEL(v) ((v) << 9)
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTSTARTPRSSEL_SET(x, v) do { (x) = (((x) & ~0x1e00) | ((v) << 9)); } while(0)
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTSTARTPRSSEL_GET(x) (((x) >> 9) & 0xf)
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTPAUSEPRSEN  0x00010000
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTPAUSEPRSEN_IDX 16
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTPAUSEPRSSEL_IDX 17
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTPAUSEPRSSEL(v) ((v) << 17)
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTPAUSEPRSSEL_SET(x, v) do { (x) = (((x) & ~0x1e0000) | ((v) << 17)); } while(0)
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTPAUSEPRSSEL_GET(x) (((x) >> 17) & 0xf)
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTSTOPPRSEN   0x01000000
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTSTOPPRSEN_IDX 24
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTSTOPPRSSEL_IDX 25
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTSTOPPRSSEL(v) ((v) << 25)
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTSTOPPRSSEL_SET(x, v) do { (x) = (((x) & ~0x1e000000) | ((v) << 25)); } while(0)
  #define EFR32_PROTIMER_LBTPRSCTRL_LBTSTOPPRSSEL_GET(x) (((x) >> 25) & 0xf)

#define EFR32_PROTIMER_LBTSTATE_ADDR                 0x00000054
#define EFR32_PROTIMER_LBTSTATE_MASK                 0xffffffff
  #define EFR32_PROTIMER_LBTSTATE_TOUT0PCNT_IDX    0
  #define EFR32_PROTIMER_LBTSTATE_TOUT0PCNT(v)     ((v) << 0)
  #define EFR32_PROTIMER_LBTSTATE_TOUT0PCNT_SET(x, v) do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_LBTSTATE_TOUT0PCNT_GET(x) (((x) >> 0) & 0xffff)
  #define EFR32_PROTIMER_LBTSTATE_TOUT0CNT_IDX     16
  #define EFR32_PROTIMER_LBTSTATE_TOUT0CNT(v)      ((v) << 16)
  #define EFR32_PROTIMER_LBTSTATE_TOUT0CNT_SET(x, v) do { (x) = (((x) & ~0xffff0000) | ((v) << 16)); } while(0)
  #define EFR32_PROTIMER_LBTSTATE_TOUT0CNT_GET(x)  (((x) >> 16) & 0xffff)

#define EFR32_PROTIMER_RANDOM_ADDR                   0x00000058
#define EFR32_PROTIMER_RANDOM_MASK                   0x0000ffff
  #define EFR32_PROTIMER_RANDOM_RANDOM_IDX         0
  #define EFR32_PROTIMER_RANDOM_RANDOM(v)          ((v) << 0)
  #define EFR32_PROTIMER_RANDOM_RANDOM_SET(x, v)   do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_RANDOM_RANDOM_GET(x)      (((x) >> 0) & 0xffff)

#define EFR32_PROTIMER_IF_ADDR                       0x0000005c
#define EFR32_PROTIMER_IF_MASK                       0x03f3fff7
  #define EFR32_PROTIMER_IF_PRECNTOF               0x00000001
  #define EFR32_PROTIMER_IF_PRECNTOF_IDX           0
  #define EFR32_PROTIMER_IF_BASECNTOF              0x00000002
  #define EFR32_PROTIMER_IF_BASECNTOF_IDX          1
  #define EFR32_PROTIMER_IF_WRAPCNTOF              0x00000004
  #define EFR32_PROTIMER_IF_WRAPCNTOF_IDX          2
  #define EFR32_PROTIMER_IF_TOUT_COUNT             2
  #define EFR32_PROTIMER_IF_TOUT(fidx)             (0x00000010 << ((fidx)))
  #define EFR32_PROTIMER_IF_TOUT_IDX(fidx)         ((fidx) + 4)
  #define EFR32_PROTIMER_IF_TOUT_MATCH_COUNT       2
  #define EFR32_PROTIMER_IF_TOUT_MATCH(fidx)       (0x00000040 << ((fidx)))
  #define EFR32_PROTIMER_IF_TOUT_MATCH_IDX(fidx)   ((fidx) + 6)
  #define EFR32_PROTIMER_IF_CC_COUNT               5
  #define EFR32_PROTIMER_IF_CC(fidx)               (0x00000100 << ((fidx)))
  #define EFR32_PROTIMER_IF_CC_IDX(fidx)           ((fidx) + 8)
  #define EFR32_PROTIMER_IF_COF_COUNT              5
  #define EFR32_PROTIMER_IF_COF(fidx)              (0x00002000 << ((fidx)))
  #define EFR32_PROTIMER_IF_COF_IDX(fidx)          ((fidx) + 13)
  #define EFR32_PROTIMER_IF_LBTSUCCESS             0x00100000
  #define EFR32_PROTIMER_IF_LBTSUCCESS_IDX         20
  #define EFR32_PROTIMER_IF_LBTRETRY               0x00200000
  #define EFR32_PROTIMER_IF_LBTRETRY_IDX           21
  #define EFR32_PROTIMER_IF_LBTFAILURE             0x00400000
  #define EFR32_PROTIMER_IF_LBTFAILURE_IDX         22
  #define EFR32_PROTIMER_IF_LBTPAUSED              0x00800000
  #define EFR32_PROTIMER_IF_LBTPAUSED_IDX          23
  #define EFR32_PROTIMER_IF_RTCCSYNCHED            0x01000000
  #define EFR32_PROTIMER_IF_RTCCSYNCHED_IDX        24
  #define EFR32_PROTIMER_IF_TOUT0MATCHLBT          0x02000000
  #define EFR32_PROTIMER_IF_TOUT0MATCHLBT_IDX      25

#define EFR32_PROTIMER_IFS_ADDR                      0x00000060
#define EFR32_PROTIMER_IFS_MASK                      0x00000000

#define EFR32_PROTIMER_IFC_ADDR                      0x00000064
#define EFR32_PROTIMER_IFC_MASK                      0x00000000

#define EFR32_PROTIMER_IEN_ADDR                      0x00000068
#define EFR32_PROTIMER_IEN_MASK                      0x00000000

#define EFR32_PROTIMER_RXCTRL_ADDR                   0x0000006c
#define EFR32_PROTIMER_RXCTRL_MASK                   0x1f1f1f1f
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_COUNT   2
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_IDX(fidx) ((fidx) * 8 + 0)
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT(fidx, v) ((EFR32_PROTIMER_RXCTRL_RXSETEVENT_##v) << ((fidx) * 8 + 0))
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_SET(fidx, x, v) do { (x) = (((x) & ~(0x1f << ((fidx) * 8))) | ((EFR32_PROTIMER_RXCTRL_RXSETEVENT_##v) << ((fidx) * 8 + 0))); } while(0)
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_GET(fidx, x) (((x) >> ((fidx) * 8 + 0)) & 0x1f)
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_DISABLED 0x00000000
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_ALWAYS  0x00000001
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_PRECNTOF 0x00000002
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_BASECNTOF 0x00000003
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_WRAPCNTOF 0x00000004
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_TOUT0UF 0x00000005
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_TOUT1UF 0x00000006
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_TOUT0MATCH 0x00000007
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_TOUT1MATCH 0x00000008
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_CC0     0x00000009
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_CC1     0x0000000a
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_CC2     0x0000000b
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_CC3     0x0000000c
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_CC4     0x0000000d
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_TXDONE  0x0000000e
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_RXDONE  0x0000000f
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_TXORRXDONE 0x00000010
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_FDET0   0x00000011
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_FDET1   0x00000012
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_FDET0OR1 0x00000013
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_LBTSUCCESS 0x00000014
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_LBTRETRY 0x00000015
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_LBTFAILURE 0x00000016
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_ANYLBT  0x00000017
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_CCAACK  0x00000018
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_CCA     0x00000019
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_NOTCCA  0x0000001a
  #define EFR32_PROTIMER_RXCTRL_RXSETEVENT_TOUT0MATCHLBT 0x0000001b
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_COUNT   2
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_IDX(fidx) ((fidx) * 8 + 16)
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT(fidx, v) ((EFR32_PROTIMER_RXCTRL_RXCLREVENT_##v) << ((fidx) * 8 + 16))
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_SET(fidx, x, v) do { (x) = (((x) & ~(0x1f0000 << ((fidx) * 8))) | ((EFR32_PROTIMER_RXCTRL_RXCLREVENT_##v) << ((fidx) * 8 + 16))); } while(0)
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_GET(fidx, x) (((x) >> ((fidx) * 8 + 16)) & 0x1f)
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_DISABLED 0x00000000
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_ALWAYS  0x00000001
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_PRECNTOF 0x00000002
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_BASECNTOF 0x00000003
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_WRAPCNTOF 0x00000004
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_TOUT0UF 0x00000005
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_TOUT1UF 0x00000006
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_TOUT0MATCH 0x00000007
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_TOUT1MATCH 0x00000008
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_CC0     0x00000009
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_CC1     0x0000000a
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_CC2     0x0000000b
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_CC3     0x0000000c
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_CC4     0x0000000d
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_TXDONE  0x0000000e
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_RXDONE  0x0000000f
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_TXORRXDONE 0x00000010
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_FDET0   0x00000011
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_FDET1   0x00000012
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_FDET0OR1 0x00000013
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_LBTSUCCESS 0x00000014
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_LBTRETRY 0x00000015
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_LBTFAILURE 0x00000016
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_ANYLBT  0x00000017
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_CCAACK  0x00000018
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_CCA     0x00000019
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_NOTCCA  0x0000001a
  #define EFR32_PROTIMER_RXCTRL_RXCLREVENT_TOUT0MATCHLBT 0x0000001b

#define EFR32_PROTIMER_TXCTRL_ADDR                   0x00000070
#define EFR32_PROTIMER_TXCTRL_MASK                   0x00001f1f
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_COUNT   2
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_IDX(fidx) ((fidx) * 8 + 0)
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT(fidx, v) ((EFR32_PROTIMER_TXCTRL_TXSETEVENT_##v) << ((fidx) * 8 + 0))
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_SET(fidx, x, v) do { (x) = (((x) & ~(0x1f << ((fidx) * 8))) | ((EFR32_PROTIMER_TXCTRL_TXSETEVENT_##v) << ((fidx) * 8 + 0))); } while(0)
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_GET(fidx, x) (((x) >> ((fidx) * 8 + 0)) & 0x1f)
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_DISABLED 0x00000000
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_ALWAYS  0x00000001
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_PRECNTOF 0x00000002
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_BASECNTOF 0x00000003
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_WRAPCNTOF 0x00000004
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_TOUT0UF 0x00000005
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_TOUT1UF 0x00000006
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_TOUT0MATCH 0x00000007
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_TOUT1MATCH 0x00000008
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_CC0     0x00000009
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_CC1     0x0000000a
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_CC2     0x0000000b
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_CC3     0x0000000c
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_CC4     0x0000000d
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_TXDONE  0x0000000e
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_RXDONE  0x0000000f
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_TXORRXDONE 0x00000010
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_FDET0   0x00000011
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_FDET1   0x00000012
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_FDET0OR1 0x00000013
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_LBTSUCCESS 0x00000014
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_LBTRETRY 0x00000015
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_LBTFAILURE 0x00000016
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_ANYLBT  0x00000017
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_CCAACK  0x00000018
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_CCA     0x00000019
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_NOTCCA  0x0000001a
  #define EFR32_PROTIMER_TXCTRL_TXSETEVENT_TOUT0MATCHLBT 0x0000001b

#define EFR32_PROTIMER_ETSI_ADDR                     0x00000074
#define EFR32_PROTIMER_ETSI_MASK                     0x00000fff
  #define EFR32_PROTIMER_ETSI_ETSIEN               0x00000001
  #define EFR32_PROTIMER_ETSI_ETSIEN_IDX           0
  #define EFR32_PROTIMER_ETSI_GRANULARLESSTHANRXWARM 0x00000002
  #define EFR32_PROTIMER_ETSI_GRANULARLESSTHANRXWARM_IDX 1
  #define EFR32_PROTIMER_ETSI_RXWARMTHLD_IDX       2
  #define EFR32_PROTIMER_ETSI_RXWARMTHLD(v)        ((v) << 2)
  #define EFR32_PROTIMER_ETSI_RXWARMTHLD_SET(x, v) do { (x) = (((x) & ~0x7c) | ((v) << 2)); } while(0)
  #define EFR32_PROTIMER_ETSI_RXWARMTHLD_GET(x)    (((x) >> 2) & 0x1f)
  #define EFR32_PROTIMER_ETSI_CCAFIXED_IDX         7
  #define EFR32_PROTIMER_ETSI_CCAFIXED(v)          ((v) << 7)
  #define EFR32_PROTIMER_ETSI_CCAFIXED_SET(x, v)   do { (x) = (((x) & ~0xf80) | ((v) << 7)); } while(0)
  #define EFR32_PROTIMER_ETSI_CCAFIXED_GET(x)      (((x) >> 7) & 0x1f)

#define EFR32_PROTIMER_LBTSTATE1_ADDR                0x00000078
#define EFR32_PROTIMER_LBTSTATE1_MASK                0x00000fff
  #define EFR32_PROTIMER_LBTSTATE1_CCACNT_IDX      0
  #define EFR32_PROTIMER_LBTSTATE1_CCACNT(v)       ((v) << 0)
  #define EFR32_PROTIMER_LBTSTATE1_CCACNT_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_LBTSTATE1_CCACNT_GET(x)   (((x) >> 0) & 0xf)
  #define EFR32_PROTIMER_LBTSTATE1_EXP_IDX         4
  #define EFR32_PROTIMER_LBTSTATE1_EXP(v)          ((v) << 4)
  #define EFR32_PROTIMER_LBTSTATE1_EXP_SET(x, v)   do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define EFR32_PROTIMER_LBTSTATE1_EXP_GET(x)      (((x) >> 4) & 0xf)
  #define EFR32_PROTIMER_LBTSTATE1_RETRYCNT_IDX    8
  #define EFR32_PROTIMER_LBTSTATE1_RETRYCNT(v)     ((v) << 8)
  #define EFR32_PROTIMER_LBTSTATE1_RETRYCNT_SET(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_PROTIMER_LBTSTATE1_RETRYCNT_GET(x) (((x) >> 8) & 0xf)

#define EFR32_PROTIMER_RANDOMFW0_ADDR                0x0000007c
#define EFR32_PROTIMER_RANDOMFW0_MASK                0x07ffffff
  #define EFR32_PROTIMER_RANDOMFW0_RANDOM0_IDX     0
  #define EFR32_PROTIMER_RANDOMFW0_RANDOM0(v)      ((v) << 0)
  #define EFR32_PROTIMER_RANDOMFW0_RANDOM0_SET(x, v) do { (x) = (((x) & ~0x1ff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_RANDOMFW0_RANDOM0_GET(x)  (((x) >> 0) & 0x1ff)
  #define EFR32_PROTIMER_RANDOMFW0_RANDOM1_IDX     9
  #define EFR32_PROTIMER_RANDOMFW0_RANDOM1(v)      ((v) << 9)
  #define EFR32_PROTIMER_RANDOMFW0_RANDOM1_SET(x, v) do { (x) = (((x) & ~0x3fe00) | ((v) << 9)); } while(0)
  #define EFR32_PROTIMER_RANDOMFW0_RANDOM1_GET(x)  (((x) >> 9) & 0x1ff)
  #define EFR32_PROTIMER_RANDOMFW0_RANDOM2_IDX     18
  #define EFR32_PROTIMER_RANDOMFW0_RANDOM2(v)      ((v) << 18)
  #define EFR32_PROTIMER_RANDOMFW0_RANDOM2_SET(x, v) do { (x) = (((x) & ~0x7fc0000) | ((v) << 18)); } while(0)
  #define EFR32_PROTIMER_RANDOMFW0_RANDOM2_GET(x)  (((x) >> 18) & 0x1ff)

#define EFR32_PROTIMER_RANDOMFW1_ADDR                0x00000080
#define EFR32_PROTIMER_RANDOMFW1_MASK                0x07ffffff
  #define EFR32_PROTIMER_RANDOMFW1_RANDOM3_IDX     0
  #define EFR32_PROTIMER_RANDOMFW1_RANDOM3(v)      ((v) << 0)
  #define EFR32_PROTIMER_RANDOMFW1_RANDOM3_SET(x, v) do { (x) = (((x) & ~0x1ff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_RANDOMFW1_RANDOM3_GET(x)  (((x) >> 0) & 0x1ff)
  #define EFR32_PROTIMER_RANDOMFW1_RANDOM4_IDX     9
  #define EFR32_PROTIMER_RANDOMFW1_RANDOM4(v)      ((v) << 9)
  #define EFR32_PROTIMER_RANDOMFW1_RANDOM4_SET(x, v) do { (x) = (((x) & ~0x3fe00) | ((v) << 9)); } while(0)
  #define EFR32_PROTIMER_RANDOMFW1_RANDOM4_GET(x)  (((x) >> 9) & 0x1ff)
  #define EFR32_PROTIMER_RANDOMFW1_RANDOM5_IDX     18
  #define EFR32_PROTIMER_RANDOMFW1_RANDOM5(v)      ((v) << 18)
  #define EFR32_PROTIMER_RANDOMFW1_RANDOM5_SET(x, v) do { (x) = (((x) & ~0x7fc0000) | ((v) << 18)); } while(0)
  #define EFR32_PROTIMER_RANDOMFW1_RANDOM5_GET(x)  (((x) >> 18) & 0x1ff)

#define EFR32_PROTIMER_RANDOMFW2_ADDR                0x00000084
#define EFR32_PROTIMER_RANDOMFW2_MASK                0x0003ffff
  #define EFR32_PROTIMER_RANDOMFW2_RANDOM6_IDX     0
  #define EFR32_PROTIMER_RANDOMFW2_RANDOM6(v)      ((v) << 0)
  #define EFR32_PROTIMER_RANDOMFW2_RANDOM6_SET(x, v) do { (x) = (((x) & ~0x1ff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_RANDOMFW2_RANDOM6_GET(x)  (((x) >> 0) & 0x1ff)
  #define EFR32_PROTIMER_RANDOMFW2_RANDOM7_IDX     9
  #define EFR32_PROTIMER_RANDOMFW2_RANDOM7(v)      ((v) << 9)
  #define EFR32_PROTIMER_RANDOMFW2_RANDOM7_SET(x, v) do { (x) = (((x) & ~0x3fe00) | ((v) << 9)); } while(0)
  #define EFR32_PROTIMER_RANDOMFW2_RANDOM7_GET(x)  (((x) >> 9) & 0x1ff)

#define EFR32_PROTIMER_CC_CTRL_ADDR(ridx)            (0x00000100 + (ridx) * 16)
#define EFR32_PROTIMER_CC_CTRL_COUNT                 5
#define EFR32_PROTIMER_CC_CTRL_MASK                  0x03ef7f7f
  #define EFR32_PROTIMER_CC_CTRL_ENABLE            0x00000001
  #define EFR32_PROTIMER_CC_CTRL_ENABLE_IDX        0
  #define EFR32_PROTIMER_CC_CTRL_CCMODE_IDX        1
  #define EFR32_PROTIMER_CC_CTRL_CCMODE(v)         ((EFR32_PROTIMER_CC_CTRL_CCMODE_##v) << 1)
  #define EFR32_PROTIMER_CC_CTRL_CCMODE_SET(x, v)  do { (x) = (((x) & ~0x2) | ((EFR32_PROTIMER_CC_CTRL_CCMODE_##v) << 1)); } while(0)
  #define EFR32_PROTIMER_CC_CTRL_CCMODE_GET(x)     (((x) >> 1) & 0x1)
    #define EFR32_PROTIMER_CC_CTRL_CCMODE_COMPARE    0x00000000
    #define EFR32_PROTIMER_CC_CTRL_CCMODE_CAPTURE    0x00000001
  #define EFR32_PROTIMER_CC_CTRL_PREMATCHEN        0x00000004
  #define EFR32_PROTIMER_CC_CTRL_PREMATCHEN_IDX    2
  #define EFR32_PROTIMER_CC_CTRL_BASEMATCHEN       0x00000008
  #define EFR32_PROTIMER_CC_CTRL_BASEMATCHEN_IDX   3
  #define EFR32_PROTIMER_CC_CTRL_WRAPMATCHEN       0x00000010
  #define EFR32_PROTIMER_CC_CTRL_WRAPMATCHEN_IDX   4
  #define EFR32_PROTIMER_CC_CTRL_OIST              0x00000020
  #define EFR32_PROTIMER_CC_CTRL_OIST_IDX          5
  #define EFR32_PROTIMER_CC_CTRL_OUTINV            0x00000040
  #define EFR32_PROTIMER_CC_CTRL_OUTINV_IDX        6
  #define EFR32_PROTIMER_CC_CTRL_MOA_IDX           8
  #define EFR32_PROTIMER_CC_CTRL_MOA(v)            ((EFR32_PROTIMER_CC_CTRL_MOA_##v) << 8)
  #define EFR32_PROTIMER_CC_CTRL_MOA_SET(x, v)     do { (x) = (((x) & ~0x300) | ((EFR32_PROTIMER_CC_CTRL_MOA_##v) << 8)); } while(0)
  #define EFR32_PROTIMER_CC_CTRL_MOA_GET(x)        (((x) >> 8) & 0x3)
    #define EFR32_PROTIMER_CC_CTRL_MOA_DISABLED      0x00000000
    #define EFR32_PROTIMER_CC_CTRL_MOA_TOGGLE        0x00000001
    #define EFR32_PROTIMER_CC_CTRL_MOA_CLEAR         0x00000002
    #define EFR32_PROTIMER_CC_CTRL_MOA_UP            0x00000003
  #define EFR32_PROTIMER_CC_CTRL_OFOA_IDX          10
  #define EFR32_PROTIMER_CC_CTRL_OFOA(v)           ((EFR32_PROTIMER_CC_CTRL_OFOA_##v) << 10)
  #define EFR32_PROTIMER_CC_CTRL_OFOA_SET(x, v)    do { (x) = (((x) & ~0xc00) | ((EFR32_PROTIMER_CC_CTRL_OFOA_##v) << 10)); } while(0)
  #define EFR32_PROTIMER_CC_CTRL_OFOA_GET(x)       (((x) >> 10) & 0x3)
    #define EFR32_PROTIMER_CC_CTRL_OFOA_DISABLED     0x00000000
    #define EFR32_PROTIMER_CC_CTRL_OFOA_TOGGLE       0x00000001
    #define EFR32_PROTIMER_CC_CTRL_OFOA_CLEAR        0x00000002
    #define EFR32_PROTIMER_CC_CTRL_OFOA_UP           0x00000003
  #define EFR32_PROTIMER_CC_CTRL_OFSEL_IDX         12
  #define EFR32_PROTIMER_CC_CTRL_OFSEL(v)          ((EFR32_PROTIMER_CC_CTRL_OFSEL_##v) << 12)
  #define EFR32_PROTIMER_CC_CTRL_OFSEL_SET(x, v)   do { (x) = (((x) & ~0x3000) | ((EFR32_PROTIMER_CC_CTRL_OFSEL_##v) << 12)); } while(0)
  #define EFR32_PROTIMER_CC_CTRL_OFSEL_GET(x)      (((x) >> 12) & 0x3)
    #define EFR32_PROTIMER_CC_CTRL_OFSEL_PRECNT      0x00000000
    #define EFR32_PROTIMER_CC_CTRL_OFSEL_BASECNT     0x00000001
    #define EFR32_PROTIMER_CC_CTRL_OFSEL_WRAPCNT     0x00000002
    #define EFR32_PROTIMER_CC_CTRL_OFSEL_DISABLED    0x00000003
  #define EFR32_PROTIMER_CC_CTRL_PRSCONF_IDX       14
  #define EFR32_PROTIMER_CC_CTRL_PRSCONF(v)        ((EFR32_PROTIMER_CC_CTRL_PRSCONF_##v) << 14)
  #define EFR32_PROTIMER_CC_CTRL_PRSCONF_SET(x, v) do { (x) = (((x) & ~0x4000) | ((EFR32_PROTIMER_CC_CTRL_PRSCONF_##v) << 14)); } while(0)
  #define EFR32_PROTIMER_CC_CTRL_PRSCONF_GET(x)    (((x) >> 14) & 0x1)
    #define EFR32_PROTIMER_CC_CTRL_PRSCONF_PULSE     0x00000000
    #define EFR32_PROTIMER_CC_CTRL_PRSCONF_LEVEL     0x00000001
  #define EFR32_PROTIMER_CC_CTRL_PRSSEL_IDX        16
  #define EFR32_PROTIMER_CC_CTRL_PRSSEL(v)         ((v) << 16)
  #define EFR32_PROTIMER_CC_CTRL_PRSSEL_SET(x, v)  do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_PROTIMER_CC_CTRL_PRSSEL_GET(x)     (((x) >> 16) & 0xf)
  #define EFR32_PROTIMER_CC_CTRL_INSEL_IDX         21
  #define EFR32_PROTIMER_CC_CTRL_INSEL(v)          ((EFR32_PROTIMER_CC_CTRL_INSEL_##v) << 21)
  #define EFR32_PROTIMER_CC_CTRL_INSEL_SET(x, v)   do { (x) = (((x) & ~0xe00000) | ((EFR32_PROTIMER_CC_CTRL_INSEL_##v) << 21)); } while(0)
  #define EFR32_PROTIMER_CC_CTRL_INSEL_GET(x)      (((x) >> 21) & 0x7)
    #define EFR32_PROTIMER_CC_CTRL_INSEL_PRS         0x00000000
    #define EFR32_PROTIMER_CC_CTRL_INSEL_TXDONE      0x00000001
    #define EFR32_PROTIMER_CC_CTRL_INSEL_RXDONE      0x00000002
    #define EFR32_PROTIMER_CC_CTRL_INSEL_TXORRXDONE  0x00000003
    #define EFR32_PROTIMER_CC_CTRL_INSEL_FRAMEDET0   0x00000004
    #define EFR32_PROTIMER_CC_CTRL_INSEL_FRAMEDET1   0x00000005
    #define EFR32_PROTIMER_CC_CTRL_INSEL_FDET0OR1    0x00000006
    #define EFR32_PROTIMER_CC_CTRL_INSEL_MODSYNCSENT 0x00000007
  #define EFR32_PROTIMER_CC_CTRL_ICEDGE_IDX        24
  #define EFR32_PROTIMER_CC_CTRL_ICEDGE(v)         ((EFR32_PROTIMER_CC_CTRL_ICEDGE_##v) << 24)
  #define EFR32_PROTIMER_CC_CTRL_ICEDGE_SET(x, v)  do { (x) = (((x) & ~0x3000000) | ((EFR32_PROTIMER_CC_CTRL_ICEDGE_##v) << 24)); } while(0)
  #define EFR32_PROTIMER_CC_CTRL_ICEDGE_GET(x)     (((x) >> 24) & 0x3)
    #define EFR32_PROTIMER_CC_CTRL_ICEDGE_RISING     0x00000000
    #define EFR32_PROTIMER_CC_CTRL_ICEDGE_FALLING    0x00000001
    #define EFR32_PROTIMER_CC_CTRL_ICEDGE_BOTH       0x00000002
    #define EFR32_PROTIMER_CC_CTRL_ICEDGE_DISABLED   0x00000003

#define EFR32_PROTIMER_CC_PRE_ADDR(ridx)             (0x00000104 + (ridx) * 16)
#define EFR32_PROTIMER_CC_PRE_COUNT                  5
#define EFR32_PROTIMER_CC_PRE_MASK                   0x0000ffff
  #define EFR32_PROTIMER_CC_PRE_PRE_IDX            0
  #define EFR32_PROTIMER_CC_PRE_PRE(v)             ((v) << 0)
  #define EFR32_PROTIMER_CC_PRE_PRE_SET(x, v)      do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_CC_PRE_PRE_GET(x)         (((x) >> 0) & 0xffff)

#define EFR32_PROTIMER_CC_BASE_ADDR(ridx)            (0x00000108 + (ridx) * 16)
#define EFR32_PROTIMER_CC_BASE_COUNT                 5
#define EFR32_PROTIMER_CC_BASE_MASK                  0x0000ffff
  #define EFR32_PROTIMER_CC_BASE_BASE_IDX          0
  #define EFR32_PROTIMER_CC_BASE_BASE(v)           ((v) << 0)
  #define EFR32_PROTIMER_CC_BASE_BASE_SET(x, v)    do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_PROTIMER_CC_BASE_BASE_GET(x)       (((x) >> 0) & 0xffff)

#define EFR32_PROTIMER_CC_WRAP_ADDR(ridx)            (0x0000010c + (ridx) * 16)
#define EFR32_PROTIMER_CC_WRAP_COUNT                 5
#define EFR32_PROTIMER_CC_WRAP_MASK                  0x00000000

#endif

