/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs cdefs_use_reg_mask=1 cdefs_use_field_shift=1                 \
     cdefs_sfx_field_shift=_IDX
*/

#ifndef _EFR32_RAC_BFGEN_DEFS_
#define _EFR32_RAC_BFGEN_DEFS_

#define EFR32_RAC_RXENSRCEN_ADDR                     0x00000000
#define EFR32_RAC_RXENSRCEN_MASK                     0x0013ffff
/** Software RX enable bit. @multiple */
  #define EFR32_RAC_RXENSRCEN_SWRXEN_IDX           0
  #define EFR32_RAC_RXENSRCEN_SWRXEN(v)            ((v) << 0)
  #define EFR32_RAC_RXENSRCEN_SWRXEN_SET(x, v)     do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_RAC_RXENSRCEN_SWRXEN_GET(x)        (((x) >> 0) & 0xff)
  #define EFR32_RAC_RXENSRCEN_CHANNELBUSYEN        0x00000100
  #define EFR32_RAC_RXENSRCEN_CHANNELBUSYEN_IDX    8
  #define EFR32_RAC_RXENSRCEN_TIMDETEN             0x00000200
  #define EFR32_RAC_RXENSRCEN_TIMDETEN_IDX         9
  #define EFR32_RAC_RXENSRCEN_PREDETEN             0x00000400
  #define EFR32_RAC_RXENSRCEN_PREDETEN_IDX         10
  #define EFR32_RAC_RXENSRCEN_FRAMEDETEN           0x00000800
  #define EFR32_RAC_RXENSRCEN_FRAMEDETEN_IDX       11
  #define EFR32_RAC_RXENSRCEN_DEMODRXREQEN         0x00001000
  #define EFR32_RAC_RXENSRCEN_DEMODRXREQEN_IDX     12
  #define EFR32_RAC_RXENSRCEN_PRSRXEN              0x00002000
  #define EFR32_RAC_RXENSRCEN_PRSRXEN_IDX          13
  #define EFR32_RAC_RXENSRCEN_PRSRXENSEL_IDX       14
  #define EFR32_RAC_RXENSRCEN_PRSRXENSEL(v)        ((v) << 14)
  #define EFR32_RAC_RXENSRCEN_PRSRXENSEL_SET(x, v) do { (x) = (((x) & ~0x3c000) | ((v) << 14)); } while(0)
  #define EFR32_RAC_RXENSRCEN_PRSRXENSEL_GET(x)    (((x) >> 14) & 0xf)
  #define EFR32_RAC_RXENSRCEN_PRSRXENEM2WU         0x00100000
  #define EFR32_RAC_RXENSRCEN_PRSRXENEM2WU_IDX     20

#define EFR32_RAC_STATUS_ADDR                        0x00000004
#define EFR32_RAC_STATUS_MASK                        0xef38ffff
  #define EFR32_RAC_STATUS_RXMASK_IDX              0
  #define EFR32_RAC_STATUS_RXMASK(v)               ((v) << 0)
  #define EFR32_RAC_STATUS_RXMASK_SET(x, v)        do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_RAC_STATUS_RXMASK_GET(x)           (((x) >> 0) & 0xffff)
  #define EFR32_RAC_STATUS_FORCESTATEACTIVE        0x00080000
  #define EFR32_RAC_STATUS_FORCESTATEACTIVE_IDX    19
  #define EFR32_RAC_STATUS_TXAFTERFRAMEPEND        0x00100000
  #define EFR32_RAC_STATUS_TXAFTERFRAMEPEND_IDX    20
  #define EFR32_RAC_STATUS_TXAFTERFRAMEACTIVE      0x00200000
  #define EFR32_RAC_STATUS_TXAFTERFRAMEACTIVE_IDX  21
  #define EFR32_RAC_STATUS_STATE_IDX               24
  #define EFR32_RAC_STATUS_STATE(v)                ((EFR32_RAC_STATUS_STATE_##v) << 24)
  #define EFR32_RAC_STATUS_STATE_SET(x, v)         do { (x) = (((x) & ~0xf000000) | ((EFR32_RAC_STATUS_STATE_##v) << 24)); } while(0)
  #define EFR32_RAC_STATUS_STATE_GET(x)            (((x) >> 24) & 0xf)
/**  */
    #define EFR32_RAC_STATUS_STATE_OFF               0x00000000
/**  */
    #define EFR32_RAC_STATUS_STATE_RXWARM            0x00000001
/**  */
    #define EFR32_RAC_STATUS_STATE_RXSEARCH          0x00000002
/**  */
    #define EFR32_RAC_STATUS_STATE_RXFRAME           0x00000003
/**  */
    #define EFR32_RAC_STATUS_STATE_RXPD              0x00000004
/**  */
    #define EFR32_RAC_STATUS_STATE_RX2RX             0x00000005
/**  */
    #define EFR32_RAC_STATUS_STATE_RXOVERFLOW        0x00000006
/**  */
    #define EFR32_RAC_STATUS_STATE_RX2TX             0x00000007
/**  */
    #define EFR32_RAC_STATUS_STATE_TXWARM            0x00000008
/**  */
    #define EFR32_RAC_STATUS_STATE_TX                0x00000009
/**  */
    #define EFR32_RAC_STATUS_STATE_TXPD              0x0000000a
/**  */
    #define EFR32_RAC_STATUS_STATE_TX2RX             0x0000000b
/**  */
    #define EFR32_RAC_STATUS_STATE_TX2TX             0x0000000c
/**  */
    #define EFR32_RAC_STATUS_STATE_SHUTDOWN          0x0000000d
  #define EFR32_RAC_STATUS_DEMODENS                0x20000000
  #define EFR32_RAC_STATUS_DEMODENS_IDX            29
  #define EFR32_RAC_STATUS_TXENS                   0x40000000
  #define EFR32_RAC_STATUS_TXENS_IDX               30
  #define EFR32_RAC_STATUS_RXENS                   0x80000000
  #define EFR32_RAC_STATUS_RXENS_IDX               31

#define EFR32_RAC_CMD_ADDR                           0x00000008
#define EFR32_RAC_CMD_MASK                           0xc000f1ff
  #define EFR32_RAC_CMD_TXEN                       0x00000001
  #define EFR32_RAC_CMD_TXEN_IDX                   0
  #define EFR32_RAC_CMD_FORCETX                    0x00000002
  #define EFR32_RAC_CMD_FORCETX_IDX                1
  #define EFR32_RAC_CMD_TXONCCA                    0x00000004
  #define EFR32_RAC_CMD_TXONCCA_IDX                2
  #define EFR32_RAC_CMD_CLEARTXEN                  0x00000008
  #define EFR32_RAC_CMD_CLEARTXEN_IDX              3
  #define EFR32_RAC_CMD_TXAFTERFRAME               0x00000010
  #define EFR32_RAC_CMD_TXAFTERFRAME_IDX           4
  #define EFR32_RAC_CMD_TXDIS                      0x00000020
  #define EFR32_RAC_CMD_TXDIS_IDX                  5
  #define EFR32_RAC_CMD_CLEARRXOVERFLOW            0x00000040
  #define EFR32_RAC_CMD_CLEARRXOVERFLOW_IDX        6
  #define EFR32_RAC_CMD_RXCAL                      0x00000080
  #define EFR32_RAC_CMD_RXCAL_IDX                  7
  #define EFR32_RAC_CMD_RXDIS                      0x00000100
  #define EFR32_RAC_CMD_RXDIS_IDX                  8
  #define EFR32_RAC_CMD_PAENSET                    0x00001000
  #define EFR32_RAC_CMD_PAENSET_IDX                12
  #define EFR32_RAC_CMD_PAENCLEAR                  0x00002000
  #define EFR32_RAC_CMD_PAENCLEAR_IDX              13
  #define EFR32_RAC_CMD_LNAENSET                   0x00004000
  #define EFR32_RAC_CMD_LNAENSET_IDX               14
  #define EFR32_RAC_CMD_LNAENCLEAR                 0x00008000
  #define EFR32_RAC_CMD_LNAENCLEAR_IDX             15
  #define EFR32_RAC_CMD_DEMODENSET                 0x40000000
  #define EFR32_RAC_CMD_DEMODENSET_IDX             30
  #define EFR32_RAC_CMD_DEMODENCLEAR               0x80000000
  #define EFR32_RAC_CMD_DEMODENCLEAR_IDX           31

#define EFR32_RAC_CTRL_ADDR                          0x0000000c
#define EFR32_RAC_CTRL_MASK                          0x7bdf7fef
  #define EFR32_RAC_CTRL_FORCEDISABLE              0x00000001
  #define EFR32_RAC_CTRL_FORCEDISABLE_IDX          0
  #define EFR32_RAC_CTRL_PRSTXEN                   0x00000002
  #define EFR32_RAC_CTRL_PRSTXEN_IDX               1
  #define EFR32_RAC_CTRL_TXAFTERRX                 0x00000004
  #define EFR32_RAC_CTRL_TXAFTERRX_IDX             2
  #define EFR32_RAC_CTRL_PRSMODE                   0x00000008
  #define EFR32_RAC_CTRL_PRSMODE_IDX               3
  #define EFR32_RAC_CTRL_PRSCLR                    0x00000020
  #define EFR32_RAC_CTRL_PRSCLR_IDX                5
  #define EFR32_RAC_CTRL_TXPOSTPONE                0x00000040
  #define EFR32_RAC_CTRL_TXPOSTPONE_IDX            6
  #define EFR32_RAC_CTRL_ACTIVEPOL                 0x00000080
  #define EFR32_RAC_CTRL_ACTIVEPOL_IDX             7
  #define EFR32_RAC_CTRL_PAENPOL                   0x00000100
  #define EFR32_RAC_CTRL_PAENPOL_IDX               8
  #define EFR32_RAC_CTRL_LNAENPOL                  0x00000200
  #define EFR32_RAC_CTRL_LNAENPOL_IDX              9
  #define EFR32_RAC_CTRL_PRSRXDIS                  0x00000400
  #define EFR32_RAC_CTRL_PRSRXDIS_IDX              10
  #define EFR32_RAC_CTRL_PRSRXDISSEL_IDX           11
  #define EFR32_RAC_CTRL_PRSRXDISSEL(v)            ((v) << 11)
  #define EFR32_RAC_CTRL_PRSRXDISSEL_SET(x, v)     do { (x) = (((x) & ~0x7800) | ((v) << 11)); } while(0)
  #define EFR32_RAC_CTRL_PRSRXDISSEL_GET(x)        (((x) >> 11) & 0xf)
  #define EFR32_RAC_CTRL_PRSFORCETX                0x00010000
  #define EFR32_RAC_CTRL_PRSFORCETX_IDX            16
  #define EFR32_RAC_CTRL_PRSFORCETXSEL_IDX         17
  #define EFR32_RAC_CTRL_PRSFORCETXSEL(v)          ((v) << 17)
  #define EFR32_RAC_CTRL_PRSFORCETXSEL_SET(x, v)   do { (x) = (((x) & ~0x1e0000) | ((v) << 17)); } while(0)
  #define EFR32_RAC_CTRL_PRSFORCETXSEL_GET(x)      (((x) >> 17) & 0xf)
  #define EFR32_RAC_CTRL_PRSTXENSEL_IDX            22
  #define EFR32_RAC_CTRL_PRSTXENSEL(v)             ((v) << 22)
  #define EFR32_RAC_CTRL_PRSTXENSEL_SET(x, v)      do { (x) = (((x) & ~0x3c00000) | ((v) << 22)); } while(0)
  #define EFR32_RAC_CTRL_PRSTXENSEL_GET(x)         (((x) >> 22) & 0xf)
  #define EFR32_RAC_CTRL_PRSCLRSEL_IDX             27
  #define EFR32_RAC_CTRL_PRSCLRSEL(v)              ((v) << 27)
  #define EFR32_RAC_CTRL_PRSCLRSEL_SET(x, v)       do { (x) = (((x) & ~0x78000000) | ((v) << 27)); } while(0)
  #define EFR32_RAC_CTRL_PRSCLRSEL_GET(x)          (((x) >> 27) & 0xf)

#define EFR32_RAC_FORCESTATE_ADDR                    0x00000010
#define EFR32_RAC_FORCESTATE_MASK                    0x0000000f
  #define EFR32_RAC_FORCESTATE_FORCESTATE_IDX      0
  #define EFR32_RAC_FORCESTATE_FORCESTATE(v)       ((v) << 0)
  #define EFR32_RAC_FORCESTATE_FORCESTATE_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_RAC_FORCESTATE_FORCESTATE_GET(x)   (((x) >> 0) & 0xf)

#define EFR32_RAC_IF_ADDR                            0x00000014
#define EFR32_RAC_IF_MASK                            0x0eff0007
  #define EFR32_RAC_IF_STATECHANGE                 0x00000001
  #define EFR32_RAC_IF_STATECHANGE_IDX             0
  #define EFR32_RAC_IF_STIMCMPEV                   0x00000002
  #define EFR32_RAC_IF_STIMCMPEV_IDX               1
  #define EFR32_RAC_IF_BUSERROR                    0x00000004
  #define EFR32_RAC_IF_BUSERROR_IDX                2
  #define EFR32_RAC_IF_SEQ_IDX                     16
  #define EFR32_RAC_IF_SEQ(v)                      ((v) << 16)
  #define EFR32_RAC_IF_SEQ_SET(x, v)               do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define EFR32_RAC_IF_SEQ_GET(x)                  (((x) >> 16) & 0xff)
  #define EFR32_RAC_IF_PAVHIGH                     0x02000000
  #define EFR32_RAC_IF_PAVHIGH_IDX                 25
  #define EFR32_RAC_IF_PAVLOW                      0x04000000
  #define EFR32_RAC_IF_PAVLOW_IDX                  26
  #define EFR32_RAC_IF_PABATHIGH                   0x08000000
  #define EFR32_RAC_IF_PABATHIGH_IDX               27

/** See IF register fields @multiple */
#define EFR32_RAC_IFS_ADDR                           0x00000018
#define EFR32_RAC_IFS_MASK                           0x00000000

/** See IF register fields @multiple */
#define EFR32_RAC_IFC_ADDR                           0x0000001c
#define EFR32_RAC_IFC_MASK                           0x00000000

/** See IF register fields @multiple */
#define EFR32_RAC_IEN_ADDR                           0x00000020
#define EFR32_RAC_IEN_MASK                           0x00000000

#define EFR32_RAC_LVDSCTRL_ADDR                      0x00000024
#define EFR32_RAC_LVDSCTRL_MASK                      0x000000fd
  #define EFR32_RAC_LVDSCTRL_LVDSEN                0x00000001
  #define EFR32_RAC_LVDSCTRL_LVDSEN_IDX            0
  #define EFR32_RAC_LVDSCTRL_LVDSCURR_IDX          2
  #define EFR32_RAC_LVDSCTRL_LVDSCURR(v)           ((v) << 2)
  #define EFR32_RAC_LVDSCTRL_LVDSCURR_SET(x, v)    do { (x) = (((x) & ~0xc) | ((v) << 2)); } while(0)
  #define EFR32_RAC_LVDSCTRL_LVDSCURR_GET(x)       (((x) >> 2) & 0x3)
  #define EFR32_RAC_LVDSCTRL_LVDSTESTMODE          0x00000010
  #define EFR32_RAC_LVDSCTRL_LVDSTESTMODE_IDX      4
  #define EFR32_RAC_LVDSCTRL_LVDSTESTDATA          0x00000020
  #define EFR32_RAC_LVDSCTRL_LVDSTESTDATA_IDX      5
  #define EFR32_RAC_LVDSCTRL_LVDSCMCONFIG_IDX      6
  #define EFR32_RAC_LVDSCTRL_LVDSCMCONFIG(v)       ((v) << 6)
  #define EFR32_RAC_LVDSCTRL_LVDSCMCONFIG_SET(x, v) do { (x) = (((x) & ~0xc0) | ((v) << 6)); } while(0)
  #define EFR32_RAC_LVDSCTRL_LVDSCMCONFIG_GET(x)   (((x) >> 6) & 0x3)

#define EFR32_RAC_LVDSIDLESEQ_ADDR                   0x00000028
#define EFR32_RAC_LVDSIDLESEQ_MASK                   0x000000ff
  #define EFR32_RAC_LVDSIDLESEQ_LVDSIDLESEQ_IDX    0
  #define EFR32_RAC_LVDSIDLESEQ_LVDSIDLESEQ(v)     ((v) << 0)
  #define EFR32_RAC_LVDSIDLESEQ_LVDSIDLESEQ_SET(x, v) do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_RAC_LVDSIDLESEQ_LVDSIDLESEQ_GET(x) (((x) >> 0) & 0xff)

#define EFR32_RAC_LVDSROUTE_ADDR                     0x0000002c
#define EFR32_RAC_LVDSROUTE_MASK                     0x00000101
  #define EFR32_RAC_LVDSROUTE_LVDSPEN              0x00000001
  #define EFR32_RAC_LVDSROUTE_LVDSPEN_IDX          0
  #define EFR32_RAC_LVDSROUTE_LVDSLOCATION         0x00000100
  #define EFR32_RAC_LVDSROUTE_LVDSLOCATION_IDX     8

#define EFR32_RAC_HFXORETIMECTRL_ADDR                0x00000030
#define EFR32_RAC_HFXORETIMECTRL_MASK                0x00000777
  #define EFR32_RAC_HFXORETIMECTRL_EN              0x00000001
  #define EFR32_RAC_HFXORETIMECTRL_EN_IDX          0
  #define EFR32_RAC_HFXORETIMECTRL_DIS             0x00000002
  #define EFR32_RAC_HFXORETIMECTRL_DIS_IDX         1
  #define EFR32_RAC_HFXORETIMECTRL_RESET           0x00000004
  #define EFR32_RAC_HFXORETIMECTRL_RESET_IDX       2
  #define EFR32_RAC_HFXORETIMECTRL_LIMITH_IDX      4
  #define EFR32_RAC_HFXORETIMECTRL_LIMITH(v)       ((v) << 4)
  #define EFR32_RAC_HFXORETIMECTRL_LIMITH_SET(x, v) do { (x) = (((x) & ~0x70) | ((v) << 4)); } while(0)
  #define EFR32_RAC_HFXORETIMECTRL_LIMITH_GET(x)   (((x) >> 4) & 0x7)
  #define EFR32_RAC_HFXORETIMECTRL_LIMITL_IDX      8
  #define EFR32_RAC_HFXORETIMECTRL_LIMITL(v)       ((v) << 8)
  #define EFR32_RAC_HFXORETIMECTRL_LIMITL_SET(x, v) do { (x) = (((x) & ~0x700) | ((v) << 8)); } while(0)
  #define EFR32_RAC_HFXORETIMECTRL_LIMITL_GET(x)   (((x) >> 8) & 0x7)

#define EFR32_RAC_HFXORETIMESTATUS_ADDR              0x00000034
#define EFR32_RAC_HFXORETIMESTATUS_MASK              0x00000003
  #define EFR32_RAC_HFXORETIMESTATUS_CLKSEL        0x00000001
  #define EFR32_RAC_HFXORETIMESTATUS_CLKSEL_IDX    0
  #define EFR32_RAC_HFXORETIMESTATUS_RERESETN      0x00000002
  #define EFR32_RAC_HFXORETIMESTATUS_RERESETN_IDX  1

#define EFR32_RAC_TESTCTRL_ADDR                      0x00000038
#define EFR32_RAC_TESTCTRL_MASK                      0x0000001f
  #define EFR32_RAC_TESTCTRL_MODEN                 0x00000001
  #define EFR32_RAC_TESTCTRL_MODEN_IDX             0
  #define EFR32_RAC_TESTCTRL_DEMODEN               0x00000002
  #define EFR32_RAC_TESTCTRL_DEMODEN_IDX           1
  #define EFR32_RAC_TESTCTRL_AUX2RFSENSE           0x00000004
  #define EFR32_RAC_TESTCTRL_AUX2RFSENSE_IDX       2
  #define EFR32_RAC_TESTCTRL_LOOPBACK2LNAINPUT     0x00000008
  #define EFR32_RAC_TESTCTRL_LOOPBACK2LNAINPUT_IDX 3
  #define EFR32_RAC_TESTCTRL_LOOPBACK2LNAOUTPUT    0x00000010
  #define EFR32_RAC_TESTCTRL_LOOPBACK2LNAOUTPUT_IDX 4

#define EFR32_RAC_SEQSTATUS_ADDR                     0x0000003c
#define EFR32_RAC_SEQSTATUS_MASK                     0x000005ff
  #define EFR32_RAC_SEQSTATUS_STOPPED              0x00000001
  #define EFR32_RAC_SEQSTATUS_STOPPED_IDX          0
  #define EFR32_RAC_SEQSTATUS_BKPT                 0x00000002
  #define EFR32_RAC_SEQSTATUS_BKPT_IDX             1
  #define EFR32_RAC_SEQSTATUS_WAITING              0x00000004
  #define EFR32_RAC_SEQSTATUS_WAITING_IDX          2
  #define EFR32_RAC_SEQSTATUS_WAITMODE             0x00000008
  #define EFR32_RAC_SEQSTATUS_WAITMODE_IDX         3
  #define EFR32_RAC_SEQSTATUS_DONE                 0x00000010
  #define EFR32_RAC_SEQSTATUS_DONE_IDX             4
  #define EFR32_RAC_SEQSTATUS_NEG                  0x00000020
  #define EFR32_RAC_SEQSTATUS_NEG_IDX              5
  #define EFR32_RAC_SEQSTATUS_POS                  0x00000040
  #define EFR32_RAC_SEQSTATUS_POS_IDX              6
  #define EFR32_RAC_SEQSTATUS_ZERO                 0x00000080
  #define EFR32_RAC_SEQSTATUS_ZERO_IDX             7
  #define EFR32_RAC_SEQSTATUS_CARRY                0x00000100
  #define EFR32_RAC_SEQSTATUS_CARRY_IDX            8
  #define EFR32_RAC_SEQSTATUS_ABORTEN              0x00000400
  #define EFR32_RAC_SEQSTATUS_ABORTEN_IDX          10

#define EFR32_RAC_SEQCMD_ADDR                        0x00000040
#define EFR32_RAC_SEQCMD_MASK                        0x000000ff
  #define EFR32_RAC_SEQCMD_HALT                    0x00000001
  #define EFR32_RAC_SEQCMD_HALT_IDX                0
  #define EFR32_RAC_SEQCMD_STEP                    0x00000002
  #define EFR32_RAC_SEQCMD_STEP_IDX                1
  #define EFR32_RAC_SEQCMD_RESUME                  0x00000004
  #define EFR32_RAC_SEQCMD_RESUME_IDX              2
  #define EFR32_RAC_SEQCMD_BKPTEN                  0x00000008
  #define EFR32_RAC_SEQCMD_BKPTEN_IDX              3
  #define EFR32_RAC_SEQCMD_BKPTDIS                 0x00000010
  #define EFR32_RAC_SEQCMD_BKPTDIS_IDX             4
  #define EFR32_RAC_SEQCMD_ABORT                   0x00000020
  #define EFR32_RAC_SEQCMD_ABORT_IDX               5
  #define EFR32_RAC_SEQCMD_ABORTENSET              0x00000040
  #define EFR32_RAC_SEQCMD_ABORTENSET_IDX          6
  #define EFR32_RAC_SEQCMD_ABORTENCLEAR            0x00000080
  #define EFR32_RAC_SEQCMD_ABORTENCLEAR_IDX        7

#define EFR32_RAC_BREAKPOINT_ADDR                    0x00000044
#define EFR32_RAC_BREAKPOINT_MASK                    0xffffffff
  #define EFR32_RAC_BREAKPOINT_BKPADDR_IDX         0
  #define EFR32_RAC_BREAKPOINT_BKPADDR(v)          ((v) << 0)
  #define EFR32_RAC_BREAKPOINT_BKPADDR_SET(x, v)   do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define EFR32_RAC_BREAKPOINT_BKPADDR_GET(x)      (((x) >> 0) & 0xffffffff)

/** R6 = stack pointer R7 = program counter @multiple */
#define EFR32_RAC_R_ADDR(ridx)                       (0x00000048 + (ridx) * 4)
#define EFR32_RAC_R_COUNT                            8
#define EFR32_RAC_R_MASK                             0x00000000

#define EFR32_RAC_WAITMASK_ADDR                      0x0000006c
#define EFR32_RAC_WAITMASK_MASK                      0x000001ff
/** Wait on stimer comparaison match @multiple */
  #define EFR32_RAC_WAITMASK_STCMP                 0x00000001
  #define EFR32_RAC_WAITMASK_STCMP_IDX             0
/** FRC indicated that RX completed @multiple */
  #define EFR32_RAC_WAITMASK_FRCRX                 0x00000002
  #define EFR32_RAC_WAITMASK_FRCRX_IDX             1
/** FRC indicated that TX completed @multiple */
  #define EFR32_RAC_WAITMASK_FRCTX                 0x00000004
  #define EFR32_RAC_WAITMASK_FRCTX_IDX             2
/** Wait on event from PRS @multiple */
  #define EFR32_RAC_WAITMASK_PRSEVENT              0x00000008
  #define EFR32_RAC_WAITMASK_PRSEVENT_IDX          3
  #define EFR32_RAC_WAITMASK_DEMODRXREQCLR         0x00000010
  #define EFR32_RAC_WAITMASK_DEMODRXREQCLR_IDX     4
  #define EFR32_RAC_WAITMASK_SYNTHRDY              0x00000020
  #define EFR32_RAC_WAITMASK_SYNTHRDY_IDX          5
  #define EFR32_RAC_WAITMASK_RAMPDONE              0x00000040
  #define EFR32_RAC_WAITMASK_RAMPDONE_IDX          6
  #define EFR32_RAC_WAITMASK_HFXORDY               0x00000080
  #define EFR32_RAC_WAITMASK_HFXORDY_IDX           7
  #define EFR32_RAC_WAITMASK_FRCPAUSED             0x00000100
  #define EFR32_RAC_WAITMASK_FRCPAUSED_IDX         8

#define EFR32_RAC_WAITSNSH_ADDR                      0x00000070
#define EFR32_RAC_WAITSNSH_MASK                      0x000003ff
  #define EFR32_RAC_WAITSNSH_WAITSNSH_IDX          0
  #define EFR32_RAC_WAITSNSH_WAITSNSH(v)           ((v) << 0)
  #define EFR32_RAC_WAITSNSH_WAITSNSH_SET(x, v)    do { (x) = (((x) & ~0x3ff) | ((v) << 0)); } while(0)
  #define EFR32_RAC_WAITSNSH_WAITSNSH_GET(x)       (((x) >> 0) & 0x3ff)

#define EFR32_RAC_STIMER_ADDR                        0x00000074
#define EFR32_RAC_STIMER_MASK                        0x0000ffff
/** Contains the timer value. This counter starts from 0 and stop on stimercomp
   value + 1. The timer is started by the sleep or waitmask 0x1 instruction.
   @multiple */
  #define EFR32_RAC_STIMER_STIMER_IDX              0
  #define EFR32_RAC_STIMER_STIMER(v)               ((v) << 0)
  #define EFR32_RAC_STIMER_STIMER_SET(x, v)        do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_RAC_STIMER_STIMER_GET(x)           (((x) >> 0) & 0xffff)

#define EFR32_RAC_STIMERCOMP_ADDR                    0x00000078
#define EFR32_RAC_STIMERCOMP_MASK                    0x0000ffff
/** This value defines a compare value for sequencer timer. This register can be
   set either by a store instruction or by a sleep instruction. In the first
   case, the waitmask instruction must be used to start the timer and wait. The
   stimer is resetted on a sleep or waitmask 0x1 instruction and incremented
   until it reaches this value. @multiple */
  #define EFR32_RAC_STIMERCOMP_STIMERCOMP_IDX      0
  #define EFR32_RAC_STIMERCOMP_STIMERCOMP(v)       ((v) << 0)
  #define EFR32_RAC_STIMERCOMP_STIMERCOMP_SET(x, v) do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_RAC_STIMERCOMP_STIMERCOMP_GET(x)   (((x) >> 0) & 0xffff)

#define EFR32_RAC_VECTADDR_ADDR                      0x0000007c
#define EFR32_RAC_VECTADDR_MASK                      0x00000000

#define EFR32_RAC_SEQCTRL_ADDR                       0x00000080
#define EFR32_RAC_SEQCTRL_MASK                       0x00001cf7
  #define EFR32_RAC_SEQCTRL_COMPACT                0x00000001
  #define EFR32_RAC_SEQCTRL_COMPACT_IDX            0
  #define EFR32_RAC_SEQCTRL_COMPINVALMODE_IDX      1
  #define EFR32_RAC_SEQCTRL_COMPINVALMODE(v)       ((EFR32_RAC_SEQCTRL_COMPINVALMODE_##v) << 1)
  #define EFR32_RAC_SEQCTRL_COMPINVALMODE_SET(x, v) do { (x) = (((x) & ~0x6) | ((EFR32_RAC_SEQCTRL_COMPINVALMODE_##v) << 1)); } while(0)
  #define EFR32_RAC_SEQCTRL_COMPINVALMODE_GET(x)   (((x) >> 1) & 0x3)
/**  */
    #define EFR32_RAC_SEQCTRL_COMPINVALMODE_NEVER    0x00000000
/**  */
    #define EFR32_RAC_SEQCTRL_COMPINVALMODE_STATECHANGE 0x00000001
/**  */
    #define EFR32_RAC_SEQCTRL_COMPINVALMODE_COMPEVENT 0x00000002
/**  */
    #define EFR32_RAC_SEQCTRL_COMPINVALMODE_STATECOMP 0x00000003
  #define EFR32_RAC_SEQCTRL_PRSSEL_IDX             4
  #define EFR32_RAC_SEQCTRL_PRSSEL(v)              ((v) << 4)
  #define EFR32_RAC_SEQCTRL_PRSSEL_SET(x, v)       do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define EFR32_RAC_SEQCTRL_PRSSEL_GET(x)          (((x) >> 4) & 0xf)
  #define EFR32_RAC_SEQCTRL_STIMERDEBUGRUN         0x00000400
  #define EFR32_RAC_SEQCTRL_STIMERDEBUGRUN_IDX     10
  #define EFR32_RAC_SEQCTRL_CPUHALTREQEN           0x00000800
  #define EFR32_RAC_SEQCTRL_CPUHALTREQEN_IDX       11
  #define EFR32_RAC_SEQCTRL_SEQHALTUPONCPUHALTEN   0x00001000
  #define EFR32_RAC_SEQCTRL_SEQHALTUPONCPUHALTEN_IDX 12

#define EFR32_RAC_PRESC_ADDR                         0x00000084
#define EFR32_RAC_PRESC_MASK                         0x0000007f
/** This defines the prescaling factor minus 1 for the sequencer timer frequency.
   @multiple */
  #define EFR32_RAC_PRESC_STIMER_IDX               0
  #define EFR32_RAC_PRESC_STIMER(v)                ((v) << 0)
  #define EFR32_RAC_PRESC_STIMER_SET(x, v)         do { (x) = (((x) & ~0x7f) | ((v) << 0)); } while(0)
  #define EFR32_RAC_PRESC_STIMER_GET(x)            (((x) >> 0) & 0x7f)

#define EFR32_RAC_SR_ADDR(ridx)                      (0x00000088 + (ridx) * 4)
#define EFR32_RAC_SR_COUNT                           4
#define EFR32_RAC_SR_MASK                            0x00000000

#define EFR32_RAC_SYNTHENCTRL_ADDR                   0x00000098
#define EFR32_RAC_SYNTHENCTRL_MASK                   0x0010effb
  #define EFR32_RAC_SYNTHENCTRL_VCOEN              0x00000001
  #define EFR32_RAC_SYNTHENCTRL_VCOEN_IDX          0
  #define EFR32_RAC_SYNTHENCTRL_VCOSTARTUP         0x00000002
  #define EFR32_RAC_SYNTHENCTRL_VCOSTARTUP_IDX     1
  #define EFR32_RAC_SYNTHENCTRL_LODIVEN            0x00000008
  #define EFR32_RAC_SYNTHENCTRL_LODIVEN_IDX        3
  #define EFR32_RAC_SYNTHENCTRL_CHPEN              0x00000010
  #define EFR32_RAC_SYNTHENCTRL_CHPEN_IDX          4
  #define EFR32_RAC_SYNTHENCTRL_LPFEN              0x00000020
  #define EFR32_RAC_SYNTHENCTRL_LPFEN_IDX          5
  #define EFR32_RAC_SYNTHENCTRL_LPFQUICKSTART      0x00000040
  #define EFR32_RAC_SYNTHENCTRL_LPFQUICKSTART_IDX  6
  #define EFR32_RAC_SYNTHENCTRL_VCBUFEN            0x00000080
  #define EFR32_RAC_SYNTHENCTRL_VCBUFEN_IDX        7
  #define EFR32_RAC_SYNTHENCTRL_SYNTHCLKEN         0x00000100
  #define EFR32_RAC_SYNTHENCTRL_SYNTHCLKEN_IDX     8
  #define EFR32_RAC_SYNTHENCTRL_SYNTHSTARTREQ      0x00000200
  #define EFR32_RAC_SYNTHENCTRL_SYNTHSTARTREQ_IDX  9
  #define EFR32_RAC_SYNTHENCTRL_CHPLDOEN           0x00000400
  #define EFR32_RAC_SYNTHENCTRL_CHPLDOEN_IDX       10
  #define EFR32_RAC_SYNTHENCTRL_LODIVSYNCCLKEN     0x00000800
  #define EFR32_RAC_SYNTHENCTRL_LODIVSYNCCLKEN_IDX 11
  #define EFR32_RAC_SYNTHENCTRL_MMDLDOEN           0x00002000
  #define EFR32_RAC_SYNTHENCTRL_MMDLDOEN_IDX       13
  #define EFR32_RAC_SYNTHENCTRL_VCOLDOEN           0x00004000
  #define EFR32_RAC_SYNTHENCTRL_VCOLDOEN_IDX       14
  #define EFR32_RAC_SYNTHENCTRL_VCODIVEN           0x00008000
  #define EFR32_RAC_SYNTHENCTRL_VCODIVEN_IDX       15
  #define EFR32_RAC_SYNTHENCTRL_LPFBWSEL           0x00100000
  #define EFR32_RAC_SYNTHENCTRL_LPFBWSEL_IDX       20

#define EFR32_RAC_SYNTHREGCTRL_ADDR                  0x0000009c
#define EFR32_RAC_SYNTHREGCTRL_MASK                  0x07ffffe0
  #define EFR32_RAC_SYNTHREGCTRL_MMDLDOAMPBWRED_IDX 5
  #define EFR32_RAC_SYNTHREGCTRL_MMDLDOAMPBWRED(v) ((v) << 5)
  #define EFR32_RAC_SYNTHREGCTRL_MMDLDOAMPBWRED_SET(x, v) do { (x) = (((x) & ~0x60) | ((v) << 5)); } while(0)
  #define EFR32_RAC_SYNTHREGCTRL_MMDLDOAMPBWRED_GET(x) (((x) >> 5) & 0x3)
  #define EFR32_RAC_SYNTHREGCTRL_MMDLDOAMPCURR_IDX 7
  #define EFR32_RAC_SYNTHREGCTRL_MMDLDOAMPCURR(v)  ((v) << 7)
  #define EFR32_RAC_SYNTHREGCTRL_MMDLDOAMPCURR_SET(x, v) do { (x) = (((x) & ~0x380) | ((v) << 7)); } while(0)
  #define EFR32_RAC_SYNTHREGCTRL_MMDLDOAMPCURR_GET(x) (((x) >> 7) & 0x7)
  #define EFR32_RAC_SYNTHREGCTRL_MMDLDOVREFTRIM_IDX 10
  #define EFR32_RAC_SYNTHREGCTRL_MMDLDOVREFTRIM(v) ((v) << 10)
  #define EFR32_RAC_SYNTHREGCTRL_MMDLDOVREFTRIM_SET(x, v) do { (x) = (((x) & ~0x1c00) | ((v) << 10)); } while(0)
  #define EFR32_RAC_SYNTHREGCTRL_MMDLDOVREFTRIM_GET(x) (((x) >> 10) & 0x7)
  #define EFR32_RAC_SYNTHREGCTRL_VCOLDOAMPCURR_IDX 13
  #define EFR32_RAC_SYNTHREGCTRL_VCOLDOAMPCURR(v)  ((v) << 13)
  #define EFR32_RAC_SYNTHREGCTRL_VCOLDOAMPCURR_SET(x, v) do { (x) = (((x) & ~0xe000) | ((v) << 13)); } while(0)
  #define EFR32_RAC_SYNTHREGCTRL_VCOLDOAMPCURR_GET(x) (((x) >> 13) & 0x7)
  #define EFR32_RAC_SYNTHREGCTRL_VCOLDOVREFTRIM_IDX 16
  #define EFR32_RAC_SYNTHREGCTRL_VCOLDOVREFTRIM(v) ((v) << 16)
  #define EFR32_RAC_SYNTHREGCTRL_VCOLDOVREFTRIM_SET(x, v) do { (x) = (((x) & ~0x70000) | ((v) << 16)); } while(0)
  #define EFR32_RAC_SYNTHREGCTRL_VCOLDOVREFTRIM_GET(x) (((x) >> 16) & 0x7)
  #define EFR32_RAC_SYNTHREGCTRL_CHPLDOAMPBWRED_IDX 19
  #define EFR32_RAC_SYNTHREGCTRL_CHPLDOAMPBWRED(v) ((v) << 19)
  #define EFR32_RAC_SYNTHREGCTRL_CHPLDOAMPBWRED_SET(x, v) do { (x) = (((x) & ~0x180000) | ((v) << 19)); } while(0)
  #define EFR32_RAC_SYNTHREGCTRL_CHPLDOAMPBWRED_GET(x) (((x) >> 19) & 0x3)
  #define EFR32_RAC_SYNTHREGCTRL_CHPLDOAMPCURR_IDX 21
  #define EFR32_RAC_SYNTHREGCTRL_CHPLDOAMPCURR(v)  ((v) << 21)
  #define EFR32_RAC_SYNTHREGCTRL_CHPLDOAMPCURR_SET(x, v) do { (x) = (((x) & ~0xe00000) | ((v) << 21)); } while(0)
  #define EFR32_RAC_SYNTHREGCTRL_CHPLDOAMPCURR_GET(x) (((x) >> 21) & 0x7)
  #define EFR32_RAC_SYNTHREGCTRL_CHPLDOVREFTRIM_IDX 24
  #define EFR32_RAC_SYNTHREGCTRL_CHPLDOVREFTRIM(v) ((v) << 24)
  #define EFR32_RAC_SYNTHREGCTRL_CHPLDOVREFTRIM_SET(x, v) do { (x) = (((x) & ~0x7000000) | ((v) << 24)); } while(0)
  #define EFR32_RAC_SYNTHREGCTRL_CHPLDOVREFTRIM_GET(x) (((x) >> 24) & 0x7)

#define EFR32_RAC_VCOCTRL_ADDR                       0x000000a0
#define EFR32_RAC_VCOCTRL_MASK                       0x0f007fff
  #define EFR32_RAC_VCOCTRL_VCOAMPLITUDE_IDX       0
  #define EFR32_RAC_VCOCTRL_VCOAMPLITUDE(v)        ((v) << 0)
  #define EFR32_RAC_VCOCTRL_VCOAMPLITUDE_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_RAC_VCOCTRL_VCOAMPLITUDE_GET(x)    (((x) >> 0) & 0xf)
  #define EFR32_RAC_VCOCTRL_VCODETAMPLITUDE_IDX    4
  #define EFR32_RAC_VCOCTRL_VCODETAMPLITUDE(v)     ((v) << 4)
  #define EFR32_RAC_VCOCTRL_VCODETAMPLITUDE_SET(x, v) do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define EFR32_RAC_VCOCTRL_VCODETAMPLITUDE_GET(x) (((x) >> 4) & 0xf)
  #define EFR32_RAC_VCOCTRL_VCODETEN               0x00000100
  #define EFR32_RAC_VCOCTRL_VCODETEN_IDX           8
  #define EFR32_RAC_VCOCTRL_VCODETMODE             0x00000200
  #define EFR32_RAC_VCOCTRL_VCODETMODE_IDX         9
  #define EFR32_RAC_VCOCTRL_VCOAREGCURR_IDX        10
  #define EFR32_RAC_VCOCTRL_VCOAREGCURR(v)         ((v) << 10)
  #define EFR32_RAC_VCOCTRL_VCOAREGCURR_SET(x, v)  do { (x) = (((x) & ~0xc00) | ((v) << 10)); } while(0)
  #define EFR32_RAC_VCOCTRL_VCOAREGCURR_GET(x)     (((x) >> 10) & 0x3)
  #define EFR32_RAC_VCOCTRL_VCOCREGCURR_IDX        12
  #define EFR32_RAC_VCOCTRL_VCOCREGCURR(v)         ((v) << 12)
  #define EFR32_RAC_VCOCTRL_VCOCREGCURR_SET(x, v)  do { (x) = (((x) & ~0x7000) | ((v) << 12)); } while(0)
  #define EFR32_RAC_VCOCTRL_VCOCREGCURR_GET(x)     (((x) >> 12) & 0x7)
  #define EFR32_RAC_VCOCTRL_VCODIVCURR_IDX         24
  #define EFR32_RAC_VCOCTRL_VCODIVCURR(v)          ((v) << 24)
  #define EFR32_RAC_VCOCTRL_VCODIVCURR_SET(x, v)   do { (x) = (((x) & ~0xf000000) | ((v) << 24)); } while(0)
  #define EFR32_RAC_VCOCTRL_VCODIVCURR_GET(x)      (((x) >> 24) & 0xf)

#define EFR32_RAC_MMDCTRL_ADDR                       0x000000a4
#define EFR32_RAC_MMDCTRL_MASK                       0x0001fdff
  #define EFR32_RAC_MMDCTRL_MMDDIVDCDC_IDX         0
  #define EFR32_RAC_MMDCTRL_MMDDIVDCDC(v)          ((v) << 0)
  #define EFR32_RAC_MMDCTRL_MMDDIVDCDC_SET(x, v)   do { (x) = (((x) & ~0x1ff) | ((v) << 0)); } while(0)
  #define EFR32_RAC_MMDCTRL_MMDDIVDCDC_GET(x)      (((x) >> 0) & 0x1ff)
  #define EFR32_RAC_MMDCTRL_MMDDIVRSDCDC_IDX       10
  #define EFR32_RAC_MMDCTRL_MMDDIVRSDCDC(v)        ((v) << 10)
  #define EFR32_RAC_MMDCTRL_MMDDIVRSDCDC_SET(x, v) do { (x) = (((x) & ~0xc00) | ((v) << 10)); } while(0)
  #define EFR32_RAC_MMDCTRL_MMDDIVRSDCDC_GET(x)    (((x) >> 10) & 0x3)
  #define EFR32_RAC_MMDCTRL_MMDDIVRSDIG_IDX        12
  #define EFR32_RAC_MMDCTRL_MMDDIVRSDIG(v)         ((v) << 12)
  #define EFR32_RAC_MMDCTRL_MMDDIVRSDIG_SET(x, v)  do { (x) = (((x) & ~0x3000) | ((v) << 12)); } while(0)
  #define EFR32_RAC_MMDCTRL_MMDDIVRSDIG_GET(x)     (((x) >> 12) & 0x3)
  #define EFR32_RAC_MMDCTRL_MMDENDCDC              0x00004000
  #define EFR32_RAC_MMDCTRL_MMDENDCDC_IDX          14
  #define EFR32_RAC_MMDCTRL_MMDENRSDCDC            0x00008000
  #define EFR32_RAC_MMDCTRL_MMDENRSDCDC_IDX        15
  #define EFR32_RAC_MMDCTRL_MMDENRSDIG             0x00010000
  #define EFR32_RAC_MMDCTRL_MMDENRSDIG_IDX         16

#define EFR32_RAC_CHPCTRL_ADDR                       0x000000b0
#define EFR32_RAC_CHPCTRL_MASK                       0x0000c03f
  #define EFR32_RAC_CHPCTRL_CHPBIAS_IDX            0
  #define EFR32_RAC_CHPCTRL_CHPBIAS(v)             ((v) << 0)
  #define EFR32_RAC_CHPCTRL_CHPBIAS_SET(x, v)      do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFR32_RAC_CHPCTRL_CHPBIAS_GET(x)         (((x) >> 0) & 0x7)
  #define EFR32_RAC_CHPCTRL_CHPCURR_IDX            3
  #define EFR32_RAC_CHPCTRL_CHPCURR(v)             ((v) << 3)
  #define EFR32_RAC_CHPCTRL_CHPCURR_SET(x, v)      do { (x) = (((x) & ~0x38) | ((v) << 3)); } while(0)
  #define EFR32_RAC_CHPCTRL_CHPCURR_GET(x)         (((x) >> 3) & 0x7)
  #define EFR32_RAC_CHPCTRL_CHPOUTPUTTRISTATEMODE  0x00004000
  #define EFR32_RAC_CHPCTRL_CHPOUTPUTTRISTATEMODE_IDX 14
  #define EFR32_RAC_CHPCTRL_CHPSWITCHEDBIASEN      0x00008000
  #define EFR32_RAC_CHPCTRL_CHPSWITCHEDBIASEN_IDX  15

#define EFR32_RAC_CHPCAL_ADDR                        0x000000b4
#define EFR32_RAC_CHPCAL_MASK                        0x0000003f
  #define EFR32_RAC_CHPCAL_PSRC_IDX                0
  #define EFR32_RAC_CHPCAL_PSRC(v)                 ((v) << 0)
  #define EFR32_RAC_CHPCAL_PSRC_SET(x, v)          do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFR32_RAC_CHPCAL_PSRC_GET(x)             (((x) >> 0) & 0x7)
  #define EFR32_RAC_CHPCAL_NSRC_IDX                3
  #define EFR32_RAC_CHPCAL_NSRC(v)                 ((v) << 3)
  #define EFR32_RAC_CHPCAL_NSRC_SET(x, v)          do { (x) = (((x) & ~0x38) | ((v) << 3)); } while(0)
  #define EFR32_RAC_CHPCAL_NSRC_GET(x)             (((x) >> 3) & 0x7)

#define EFR32_RAC_LPFCTRL_ADDR                       0x000000b8
#define EFR32_RAC_LPFCTRL_MASK                       0x00f3c01f
  #define EFR32_RAC_LPFCTRL_LPFBWRX_IDX            0
  #define EFR32_RAC_LPFCTRL_LPFBWRX(v)             ((v) << 0)
  #define EFR32_RAC_LPFCTRL_LPFBWRX_SET(x, v)      do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_RAC_LPFCTRL_LPFBWRX_GET(x)         (((x) >> 0) & 0xf)
  #define EFR32_RAC_LPFCTRL_MIRACLEMODE            0x00000010
  #define EFR32_RAC_LPFCTRL_MIRACLEMODE_IDX        4
  #define EFR32_RAC_LPFCTRL_LPFINPUTCAP_IDX        14
  #define EFR32_RAC_LPFCTRL_LPFINPUTCAP(v)         ((v) << 14)
  #define EFR32_RAC_LPFCTRL_LPFINPUTCAP_SET(x, v)  do { (x) = (((x) & ~0xc000) | ((v) << 14)); } while(0)
  #define EFR32_RAC_LPFCTRL_LPFINPUTCAP_GET(x)     (((x) >> 14) & 0x3)
  #define EFR32_RAC_LPFCTRL_LPFSWITCHINGEN         0x00010000
  #define EFR32_RAC_LPFCTRL_LPFSWITCHINGEN_IDX     16
  #define EFR32_RAC_LPFCTRL_LPFGNDSWITCHINGEN      0x00020000
  #define EFR32_RAC_LPFCTRL_LPFGNDSWITCHINGEN_IDX  17
  #define EFR32_RAC_LPFCTRL_LPFBWTX_IDX            20
  #define EFR32_RAC_LPFCTRL_LPFBWTX(v)             ((v) << 20)
  #define EFR32_RAC_LPFCTRL_LPFBWTX_SET(x, v)      do { (x) = (((x) & ~0xf00000) | ((v) << 20)); } while(0)
  #define EFR32_RAC_LPFCTRL_LPFBWTX_GET(x)         (((x) >> 20) & 0xf)

#define EFR32_RAC_SYNTHCTRL_ADDR                     0x000000bc
#define EFR32_RAC_SYNTHCTRL_MASK                     0x0000040e
  #define EFR32_RAC_SYNTHCTRL_LODIVTXEN0DBM        0x00000002
  #define EFR32_RAC_SYNTHCTRL_LODIVTXEN0DBM_IDX    1
  #define EFR32_RAC_SYNTHCTRL_LODIVTXEN            0x00000004
  #define EFR32_RAC_SYNTHCTRL_LODIVTXEN_IDX        2
  #define EFR32_RAC_SYNTHCTRL_PFDTRADMODE          0x00000008
  #define EFR32_RAC_SYNTHCTRL_PFDTRADMODE_IDX      3
  #define EFR32_RAC_SYNTHCTRL_MMDPOWERBALANCEDISABLE 0x00000400
  #define EFR32_RAC_SYNTHCTRL_MMDPOWERBALANCEDISABLE_IDX 10

#define EFR32_RAC_AUXCTRL_ADDR                       0x000000c0
#define EFR32_RAC_AUXCTRL_MASK                       0x03ffffff
  #define EFR32_RAC_AUXCTRL_AUXREGEN               0x00000001
  #define EFR32_RAC_AUXCTRL_AUXREGEN_IDX           0
  #define EFR32_RAC_AUXCTRL_VCOEN                  0x00000002
  #define EFR32_RAC_AUXCTRL_VCOEN_IDX              1
  #define EFR32_RAC_AUXCTRL_VCOSTARTUP             0x00000004
  #define EFR32_RAC_AUXCTRL_VCOSTARTUP_IDX         2
  #define EFR32_RAC_AUXCTRL_CHPEN                  0x00000008
  #define EFR32_RAC_AUXCTRL_CHPEN_IDX              3
  #define EFR32_RAC_AUXCTRL_CHPCURR_IDX            4
  #define EFR32_RAC_AUXCTRL_CHPCURR(v)             ((v) << 4)
  #define EFR32_RAC_AUXCTRL_CHPCURR_SET(x, v)      do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define EFR32_RAC_AUXCTRL_CHPCURR_GET(x)         (((x) >> 4) & 0x3)
  #define EFR32_RAC_AUXCTRL_LODIVEN                0x00000040
  #define EFR32_RAC_AUXCTRL_LODIVEN_IDX            6
  #define EFR32_RAC_AUXCTRL_AUXSYNTHCLKEN          0x00000080
  #define EFR32_RAC_AUXCTRL_AUXSYNTHCLKEN_IDX      7
  #define EFR32_RAC_AUXCTRL_LODIVSEL_IDX           8
  #define EFR32_RAC_AUXCTRL_LODIVSEL(v)            ((EFR32_RAC_AUXCTRL_LODIVSEL_##v) << 8)
  #define EFR32_RAC_AUXCTRL_LODIVSEL_SET(x, v)     do { (x) = (((x) & ~0x700) | ((EFR32_RAC_AUXCTRL_LODIVSEL_##v) << 8)); } while(0)
  #define EFR32_RAC_AUXCTRL_LODIVSEL_GET(x)        (((x) >> 8) & 0x7)
/**  */
    #define EFR32_RAC_AUXCTRL_LODIVSEL_RX            0x00000001
/**  */
    #define EFR32_RAC_AUXCTRL_LODIVSEL_SGRX          0x00000002
/**  */
    #define EFR32_RAC_AUXCTRL_LODIVSEL_TX            0x00000003
/**  */
    #define EFR32_RAC_AUXCTRL_LODIVSEL_LVDS          0x00000004
  #define EFR32_RAC_AUXCTRL_RXAMP_IDX              11
  #define EFR32_RAC_AUXCTRL_RXAMP(v)               ((v) << 11)
  #define EFR32_RAC_AUXCTRL_RXAMP_SET(x, v)        do { (x) = (((x) & ~0x1f800) | ((v) << 11)); } while(0)
  #define EFR32_RAC_AUXCTRL_RXAMP_GET(x)           (((x) >> 11) & 0x3f)
  #define EFR32_RAC_AUXCTRL_LDOAMPCURR_IDX         17
  #define EFR32_RAC_AUXCTRL_LDOAMPCURR(v)          ((v) << 17)
  #define EFR32_RAC_AUXCTRL_LDOAMPCURR_SET(x, v)   do { (x) = (((x) & ~0xe0000) | ((v) << 17)); } while(0)
  #define EFR32_RAC_AUXCTRL_LDOAMPCURR_GET(x)      (((x) >> 17) & 0x7)
  #define EFR32_RAC_AUXCTRL_LDOVREFTRIM_IDX        20
  #define EFR32_RAC_AUXCTRL_LDOVREFTRIM(v)         ((v) << 20)
  #define EFR32_RAC_AUXCTRL_LDOVREFTRIM_SET(x, v)  do { (x) = (((x) & ~0x700000) | ((v) << 20)); } while(0)
  #define EFR32_RAC_AUXCTRL_LDOVREFTRIM_GET(x)     (((x) >> 20) & 0x7)
  #define EFR32_RAC_AUXCTRL_FPLLDIGEN              0x00800000
  #define EFR32_RAC_AUXCTRL_FPLLDIGEN_IDX          23
  #define EFR32_RAC_AUXCTRL_LPFRES_IDX             24
  #define EFR32_RAC_AUXCTRL_LPFRES(v)              ((v) << 24)
  #define EFR32_RAC_AUXCTRL_LPFRES_SET(x, v)       do { (x) = (((x) & ~0x3000000) | ((v) << 24)); } while(0)
  #define EFR32_RAC_AUXCTRL_LPFRES_GET(x)          (((x) >> 24) & 0x3)

#define EFR32_RAC_AUXENCTRL_ADDR                     0x000000c4
#define EFR32_RAC_AUXENCTRL_MASK                     0x0000000f
  #define EFR32_RAC_AUXENCTRL_LDOEN                0x00000001
  #define EFR32_RAC_AUXENCTRL_LDOEN_IDX            0
  #define EFR32_RAC_AUXENCTRL_VCBUFEN              0x00000002
  #define EFR32_RAC_AUXENCTRL_VCBUFEN_IDX          1
  #define EFR32_RAC_AUXENCTRL_LODIVAUXEN           0x00000004
  #define EFR32_RAC_AUXENCTRL_LODIVAUXEN_IDX       2
  #define EFR32_RAC_AUXENCTRL_LODIVAUXEN0DBM       0x00000008
  #define EFR32_RAC_AUXENCTRL_LODIVAUXEN0DBM_IDX   3

#define EFR32_RAC_RFENCTRL_ADDR                      0x000000f4
#define EFR32_RAC_RFENCTRL_MASK                      0x031ff87f
  #define EFR32_RAC_RFENCTRL_IFFILTSTANDBY         0x00000001
  #define EFR32_RAC_RFENCTRL_IFFILTSTANDBY_IDX     0
  #define EFR32_RAC_RFENCTRL_IFFILTEREN            0x00000002
  #define EFR32_RAC_RFENCTRL_IFFILTEREN_IDX        1
  #define EFR32_RAC_RFENCTRL_PKDEN                 0x00000004
  #define EFR32_RAC_RFENCTRL_PKDEN_IDX             2
  #define EFR32_RAC_RFENCTRL_IFPGAEN               0x00000008
  #define EFR32_RAC_RFENCTRL_IFPGAEN_IDX           3
  #define EFR32_RAC_RFENCTRL_IFADCEN               0x00000010
  #define EFR32_RAC_RFENCTRL_IFADCEN_IDX           4
  #define EFR32_RAC_RFENCTRL_IFADCCAPRESET         0x00000020
  #define EFR32_RAC_RFENCTRL_IFADCCAPRESET_IDX     5
  #define EFR32_RAC_RFENCTRL_IFADCCLKEN            0x00000040
  #define EFR32_RAC_RFENCTRL_IFADCCLKEN_IDX        6
  #define EFR32_RAC_RFENCTRL_RFBIASEN              0x00000800
  #define EFR32_RAC_RFENCTRL_RFBIASEN_IDX          11
  #define EFR32_RAC_RFENCTRL_DEMEN                 0x00001000
  #define EFR32_RAC_RFENCTRL_DEMEN_IDX             12
  #define EFR32_RAC_RFENCTRL_ENABLEI               0x00002000
  #define EFR32_RAC_RFENCTRL_ENABLEI_IDX           13
  #define EFR32_RAC_RFENCTRL_ENABLEQ               0x00004000
  #define EFR32_RAC_RFENCTRL_ENABLEQ_IDX           14
  #define EFR32_RAC_RFENCTRL_ENLDOCLK              0x00008000
  #define EFR32_RAC_RFENCTRL_ENLDOCLK_IDX          15
  #define EFR32_RAC_RFENCTRL_ENLDOSERIES           0x00010000
  #define EFR32_RAC_RFENCTRL_ENLDOSERIES_IDX       16
  #define EFR32_RAC_RFENCTRL_ENLDOSHUNTI           0x00020000
  #define EFR32_RAC_RFENCTRL_ENLDOSHUNTI_IDX       17
  #define EFR32_RAC_RFENCTRL_ENLDOSHUNTQ           0x00040000
  #define EFR32_RAC_RFENCTRL_ENLDOSHUNTQ_IDX       18
  #define EFR32_RAC_RFENCTRL_ENLDOPGALNA           0x00080000
  #define EFR32_RAC_RFENCTRL_ENLDOPGALNA_IDX       19
  #define EFR32_RAC_RFENCTRL_ENPGA                 0x00100000
  #define EFR32_RAC_RFENCTRL_ENPGA_IDX             20
  #define EFR32_RAC_RFENCTRL_PACTUNESEL            0x01000000
  #define EFR32_RAC_RFENCTRL_PACTUNESEL_IDX        24
  #define EFR32_RAC_RFENCTRL_SGPACTUNESEL          0x02000000
  #define EFR32_RAC_RFENCTRL_SGPACTUNESEL_IDX      25

#define EFR32_RAC_RFENCTRL0_ADDR                     0x000000f8
#define EFR32_RAC_RFENCTRL0_MASK                     0x030f000f
  #define EFR32_RAC_RFENCTRL0_LNAMIXSTANDBY        0x00000001
  #define EFR32_RAC_RFENCTRL0_LNAMIXSTANDBY_IDX    0
  #define EFR32_RAC_RFENCTRL0_LNAMIXBIASEN         0x00000002
  #define EFR32_RAC_RFENCTRL0_LNAMIXBIASEN_IDX     1
  #define EFR32_RAC_RFENCTRL0_LNAMIXLOBIASEN       0x00000004
  #define EFR32_RAC_RFENCTRL0_LNAMIXLOBIASEN_IDX   2
  #define EFR32_RAC_RFENCTRL0_LNAMIXRFBIASEN       0x00000008
  #define EFR32_RAC_RFENCTRL0_LNAMIXRFBIASEN_IDX   3
  #define EFR32_RAC_RFENCTRL0_PASTANDBY            0x00010000
  #define EFR32_RAC_RFENCTRL0_PASTANDBY_IDX        16
  #define EFR32_RAC_RFENCTRL0_PAEN                 0x00020000
  #define EFR32_RAC_RFENCTRL0_PAEN_IDX             17
  #define EFR32_RAC_RFENCTRL0_PAOUTEN              0x00040000
  #define EFR32_RAC_RFENCTRL0_PAOUTEN_IDX          18
  #define EFR32_RAC_RFENCTRL0_TRSW                 0x00080000
  #define EFR32_RAC_RFENCTRL0_TRSW_IDX             19
  #define EFR32_RAC_RFENCTRL0_CASCODEDIS           0x01000000
  #define EFR32_RAC_RFENCTRL0_CASCODEDIS_IDX       24
  #define EFR32_RAC_RFENCTRL0_STRIPESLICEDIS       0x02000000
  #define EFR32_RAC_RFENCTRL0_STRIPESLICEDIS_IDX   25

#define EFR32_RAC_LNAMIXCTRL_ADDR                    0x000000fc
#define EFR32_RAC_LNAMIXCTRL_MASK                    0x44ffff1f
  #define EFR32_RAC_LNAMIXCTRL__2P4BANDWIDTH_IDX   0
  #define EFR32_RAC_LNAMIXCTRL__2P4BANDWIDTH(v)    ((EFR32_RAC_LNAMIXCTRL__2P4BANDWIDTH_##v) << 0)
  #define EFR32_RAC_LNAMIXCTRL__2P4BANDWIDTH_SET(x, v) do { (x) = (((x) & ~0x1f) | ((EFR32_RAC_LNAMIXCTRL__2P4BANDWIDTH_##v) << 0)); } while(0)
  #define EFR32_RAC_LNAMIXCTRL__2P4BANDWIDTH_GET(x) (((x) >> 0) & 0x1f)
/**  */
    #define EFR32_RAC_LNAMIXCTRL__2P4BANDWIDTH_E0    0x00000000
/**  */
    #define EFR32_RAC_LNAMIXCTRL__2P4BANDWIDTH_E31   0x0000001f
  #define EFR32_RAC_LNAMIXCTRL_CASCODEBIAS_IDX     8
  #define EFR32_RAC_LNAMIXCTRL_CASCODEBIAS(v)      ((v) << 8)
  #define EFR32_RAC_LNAMIXCTRL_CASCODEBIAS_SET(x, v) do { (x) = (((x) & ~0x700) | ((v) << 8)); } while(0)
  #define EFR32_RAC_LNAMIXCTRL_CASCODEBIAS_GET(x)  (((x) >> 8) & 0x7)
  #define EFR32_RAC_LNAMIXCTRL_LOBIAS_IDX          11
  #define EFR32_RAC_LNAMIXCTRL_LOBIAS(v)           ((v) << 11)
  #define EFR32_RAC_LNAMIXCTRL_LOBIAS_SET(x, v)    do { (x) = (((x) & ~0x3800) | ((v) << 11)); } while(0)
  #define EFR32_RAC_LNAMIXCTRL_LOBIAS_GET(x)       (((x) >> 11) & 0x7)
  #define EFR32_RAC_LNAMIXCTRL_VREG_IDX            14
  #define EFR32_RAC_LNAMIXCTRL_VREG(v)             ((v) << 14)
  #define EFR32_RAC_LNAMIXCTRL_VREG_SET(x, v)      do { (x) = (((x) & ~0x1c000) | ((v) << 14)); } while(0)
  #define EFR32_RAC_LNAMIXCTRL_VREG_GET(x)         (((x) >> 14) & 0x7)
  #define EFR32_RAC_LNAMIXCTRL_RFBIAS_IDX          17
  #define EFR32_RAC_LNAMIXCTRL_RFBIAS(v)           ((v) << 17)
  #define EFR32_RAC_LNAMIXCTRL_RFBIAS_SET(x, v)    do { (x) = (((x) & ~0x1e0000) | ((v) << 17)); } while(0)
  #define EFR32_RAC_LNAMIXCTRL_RFBIAS_GET(x)       (((x) >> 17) & 0xf)
  #define EFR32_RAC_LNAMIXCTRL_RISEFALLATT_IDX     21
  #define EFR32_RAC_LNAMIXCTRL_RISEFALLATT(v)      ((v) << 21)
  #define EFR32_RAC_LNAMIXCTRL_RISEFALLATT_SET(x, v) do { (x) = (((x) & ~0xe00000) | ((v) << 21)); } while(0)
  #define EFR32_RAC_LNAMIXCTRL_RISEFALLATT_GET(x)  (((x) >> 21) & 0x7)
  #define EFR32_RAC_LNAMIXCTRL_LNAMIXAUXSYNTHINPUTEN 0x04000000
  #define EFR32_RAC_LNAMIXCTRL_LNAMIXAUXSYNTHINPUTEN_IDX 26
  #define EFR32_RAC_LNAMIXCTRL_ENLOAD              0x40000000
  #define EFR32_RAC_LNAMIXCTRL_ENLOAD_IDX          30

#define EFR32_RAC_PACTRL0_ADDR                       0x00000100
#define EFR32_RAC_PACTRL0_MASK                       0xdf3fffdf
  #define EFR32_RAC_PACTRL0__2P4PASEL              0x00000001
  #define EFR32_RAC_PACTRL0__2P4PASEL_IDX          0
  #define EFR32_RAC_PACTRL0__2P4PAVDDSEL           0x00000002
  #define EFR32_RAC_PACTRL0__2P4PAVDDSEL_IDX       1
  #define EFR32_RAC_PACTRL0__2P4RFVDDSEL           0x00000004
  #define EFR32_RAC_PACTRL0__2P4RFVDDSEL_IDX       2
  #define EFR32_RAC_PACTRL0_BOOTSTRAP              0x00000008
  #define EFR32_RAC_PACTRL0_BOOTSTRAP_IDX          3
  #define EFR32_RAC_PACTRL0__2P4VDDPADET           0x00000010
  #define EFR32_RAC_PACTRL0__2P4VDDPADET_IDX       4
  #define EFR32_RAC_PACTRL0_CASCODE_IDX            6
  #define EFR32_RAC_PACTRL0_CASCODE(v)             ((EFR32_RAC_PACTRL0_CASCODE_##v) << 6)
  #define EFR32_RAC_PACTRL0_CASCODE_SET(x, v)      do { (x) = (((x) & ~0x3fc0) | ((EFR32_RAC_PACTRL0_CASCODE_##v) << 6)); } while(0)
  #define EFR32_RAC_PACTRL0_CASCODE_GET(x)         (((x) >> 6) & 0xff)
/**  */
    #define EFR32_RAC_PACTRL0_CASCODE_DISABLE        0x00000000
/**  */
    #define EFR32_RAC_PACTRL0_CASCODE_EN1SLICE       0x00000001
/**  */
    #define EFR32_RAC_PACTRL0_CASCODE_EN2SLICES      0x00000003
/**  */
    #define EFR32_RAC_PACTRL0_CASCODE_EN3SLICES      0x00000007
/**  */
    #define EFR32_RAC_PACTRL0_CASCODE_EN4SLICES      0x0000000f
/**  */
    #define EFR32_RAC_PACTRL0_CASCODE_EN5SLICES      0x0000001f
/**  */
    #define EFR32_RAC_PACTRL0_CASCODE_EN6SLICES      0x0000003f
/**  */
    #define EFR32_RAC_PACTRL0_CASCODE_EN7SLICES      0x0000007f
/**  */
    #define EFR32_RAC_PACTRL0_CASCODE_EN8SLICES      0x000000ff
  #define EFR32_RAC_PACTRL0_SLICE_IDX              14
  #define EFR32_RAC_PACTRL0_SLICE(v)               ((EFR32_RAC_PACTRL0_SLICE_##v) << 14)
  #define EFR32_RAC_PACTRL0_SLICE_SET(x, v)        do { (x) = (((x) & ~0x3fc000) | ((EFR32_RAC_PACTRL0_SLICE_##v) << 14)); } while(0)
  #define EFR32_RAC_PACTRL0_SLICE_GET(x)           (((x) >> 14) & 0xff)
/**  */
    #define EFR32_RAC_PACTRL0_SLICE_DISABLE          0x00000000
/**  */
    #define EFR32_RAC_PACTRL0_SLICE_EN1SLICE         0x00000001
/**  */
    #define EFR32_RAC_PACTRL0_SLICE_EN2SLICES        0x00000003
/**  */
    #define EFR32_RAC_PACTRL0_SLICE_EN3SLICES        0x00000007
/**  */
    #define EFR32_RAC_PACTRL0_SLICE_EN4SLICES        0x0000000f
/**  */
    #define EFR32_RAC_PACTRL0_SLICE_EN5SLICES        0x0000001f
/**  */
    #define EFR32_RAC_PACTRL0_SLICE_EN6SLICES        0x0000003f
/**  */
    #define EFR32_RAC_PACTRL0_SLICE_EN7SLICES        0x0000007f
/**  */
    #define EFR32_RAC_PACTRL0_SLICE_EN8SLICES        0x000000ff
/** Number of stripes @multiple */
  #define EFR32_RAC_PACTRL0_STRIPE_IDX             24
  #define EFR32_RAC_PACTRL0_STRIPE(v)              ((v) << 24)
  #define EFR32_RAC_PACTRL0_STRIPE_SET(x, v)       do { (x) = (((x) & ~0x1f000000) | ((v) << 24)); } while(0)
  #define EFR32_RAC_PACTRL0_STRIPE_GET(x)          (((x) >> 24) & 0x1f)
  #define EFR32_RAC_PACTRL0_DACGLITCHCTRL          0x40000000
  #define EFR32_RAC_PACTRL0_DACGLITCHCTRL_IDX      30
  #define EFR32_RAC_PACTRL0_CASCODEBYPASSEN        0x80000000
  #define EFR32_RAC_PACTRL0_CASCODEBYPASSEN_IDX    31

#define EFR32_RAC_PAPKDCTRL_ADDR                     0x00000104
#define EFR32_RAC_PAPKDCTRL_MASK                     0x01ccdf7d
  #define EFR32_RAC_PAPKDCTRL_PKDEN                0x00000001
  #define EFR32_RAC_PAPKDCTRL_PKDEN_IDX            0
  #define EFR32_RAC_PAPKDCTRL_VTLSEL_IDX           2
  #define EFR32_RAC_PAPKDCTRL_VTLSEL(v)            ((v) << 2)
  #define EFR32_RAC_PAPKDCTRL_VTLSEL_SET(x, v)     do { (x) = (((x) & ~0x7c) | ((v) << 2)); } while(0)
  #define EFR32_RAC_PAPKDCTRL_VTLSEL_GET(x)        (((x) >> 2) & 0x1f)
  #define EFR32_RAC_PAPKDCTRL_VTHSEL_IDX           8
  #define EFR32_RAC_PAPKDCTRL_VTHSEL(v)            ((v) << 8)
  #define EFR32_RAC_PAPKDCTRL_VTHSEL_SET(x, v)     do { (x) = (((x) & ~0x1f00) | ((v) << 8)); } while(0)
  #define EFR32_RAC_PAPKDCTRL_VTHSEL_GET(x)        (((x) >> 8) & 0x1f)
  #define EFR32_RAC_PAPKDCTRL_CAPSEL_IDX           14
  #define EFR32_RAC_PAPKDCTRL_CAPSEL(v)            ((v) << 14)
  #define EFR32_RAC_PAPKDCTRL_CAPSEL_SET(x, v)     do { (x) = (((x) & ~0xc000) | ((v) << 14)); } while(0)
  #define EFR32_RAC_PAPKDCTRL_CAPSEL_GET(x)        (((x) >> 14) & 0x3)
  #define EFR32_RAC_PAPKDCTRL_I2VCM_IDX            18
  #define EFR32_RAC_PAPKDCTRL_I2VCM(v)             ((v) << 18)
  #define EFR32_RAC_PAPKDCTRL_I2VCM_SET(x, v)      do { (x) = (((x) & ~0xc0000) | ((v) << 18)); } while(0)
  #define EFR32_RAC_PAPKDCTRL_I2VCM_GET(x)         (((x) >> 18) & 0x3)
  #define EFR32_RAC_PAPKDCTRL_PKDBIASTH_IDX        22
  #define EFR32_RAC_PAPKDCTRL_PKDBIASTH(v)         ((v) << 22)
  #define EFR32_RAC_PAPKDCTRL_PKDBIASTH_SET(x, v)  do { (x) = (((x) & ~0x1c00000) | ((v) << 22)); } while(0)
  #define EFR32_RAC_PAPKDCTRL_PKDBIASTH_GET(x)     (((x) >> 22) & 0x7)

#define EFR32_RAC_PABIASCTRL0_ADDR                   0x00000108
#define EFR32_RAC_PABIASCTRL0_MASK                   0x00c00ccd
  #define EFR32_RAC_PABIASCTRL0_LDOBIAS            0x00000001
  #define EFR32_RAC_PABIASCTRL0_LDOBIAS_IDX        0
  #define EFR32_RAC_PABIASCTRL0_PABIAS_IDX         2
  #define EFR32_RAC_PABIASCTRL0_PABIAS(v)          ((v) << 2)
  #define EFR32_RAC_PABIASCTRL0_PABIAS_SET(x, v)   do { (x) = (((x) & ~0xc) | ((v) << 2)); } while(0)
  #define EFR32_RAC_PABIASCTRL0_PABIAS_GET(x)      (((x) >> 2) & 0x3)
  #define EFR32_RAC_PABIASCTRL0_BUF0BIAS_IDX       6
  #define EFR32_RAC_PABIASCTRL0_BUF0BIAS(v)        ((v) << 6)
  #define EFR32_RAC_PABIASCTRL0_BUF0BIAS_SET(x, v) do { (x) = (((x) & ~0xc0) | ((v) << 6)); } while(0)
  #define EFR32_RAC_PABIASCTRL0_BUF0BIAS_GET(x)    (((x) >> 6) & 0x3)
  #define EFR32_RAC_PABIASCTRL0_BUF12BIAS_IDX      10
  #define EFR32_RAC_PABIASCTRL0_BUF12BIAS(v)       ((v) << 10)
  #define EFR32_RAC_PABIASCTRL0_BUF12BIAS_SET(x, v) do { (x) = (((x) & ~0xc00) | ((v) << 10)); } while(0)
  #define EFR32_RAC_PABIASCTRL0_BUF12BIAS_GET(x)   (((x) >> 10) & 0x3)
  #define EFR32_RAC_PABIASCTRL0_TXPOWER            0x00400000
  #define EFR32_RAC_PABIASCTRL0_TXPOWER_IDX        22
  #define EFR32_RAC_PABIASCTRL0_CMGAIN             0x00800000
  #define EFR32_RAC_PABIASCTRL0_CMGAIN_IDX         23

#define EFR32_RAC_PABIASCTRL1_ADDR                   0x0000010c
#define EFR32_RAC_PABIASCTRL1_MASK                   0x00037737
  #define EFR32_RAC_PABIASCTRL1_VLDO_IDX           0
  #define EFR32_RAC_PABIASCTRL1_VLDO(v)            ((v) << 0)
  #define EFR32_RAC_PABIASCTRL1_VLDO_SET(x, v)     do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFR32_RAC_PABIASCTRL1_VLDO_GET(x)        (((x) >> 0) & 0x7)
  #define EFR32_RAC_PABIASCTRL1_VLDOFB_IDX         4
  #define EFR32_RAC_PABIASCTRL1_VLDOFB(v)          ((v) << 4)
  #define EFR32_RAC_PABIASCTRL1_VLDOFB_SET(x, v)   do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define EFR32_RAC_PABIASCTRL1_VLDOFB_GET(x)      (((x) >> 4) & 0x3)
  #define EFR32_RAC_PABIASCTRL1_VCASCODEHV_IDX     8
  #define EFR32_RAC_PABIASCTRL1_VCASCODEHV(v)      ((v) << 8)
  #define EFR32_RAC_PABIASCTRL1_VCASCODEHV_SET(x, v) do { (x) = (((x) & ~0x700) | ((v) << 8)); } while(0)
  #define EFR32_RAC_PABIASCTRL1_VCASCODEHV_GET(x)  (((x) >> 8) & 0x7)
  #define EFR32_RAC_PABIASCTRL1_VCASCODELV_IDX     12
  #define EFR32_RAC_PABIASCTRL1_VCASCODELV(v)      ((v) << 12)
  #define EFR32_RAC_PABIASCTRL1_VCASCODELV_SET(x, v) do { (x) = (((x) & ~0x7000) | ((v) << 12)); } while(0)
  #define EFR32_RAC_PABIASCTRL1_VCASCODELV_GET(x)  (((x) >> 12) & 0x7)
  #define EFR32_RAC_PABIASCTRL1__2P4VDDPATHRESHOLD_IDX 16
  #define EFR32_RAC_PABIASCTRL1__2P4VDDPATHRESHOLD(v) ((v) << 16)
  #define EFR32_RAC_PABIASCTRL1__2P4VDDPATHRESHOLD_SET(x, v) do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define EFR32_RAC_PABIASCTRL1__2P4VDDPATHRESHOLD_GET(x) (((x) >> 16) & 0x3)

#define EFR32_RAC_SGRFENCTRL0_ADDR                   0x00000110
#define EFR32_RAC_SGRFENCTRL0_MASK                   0x030f000e
  #define EFR32_RAC_SGRFENCTRL0_LNAMIXBIASEN       0x00000002
  #define EFR32_RAC_SGRFENCTRL0_LNAMIXBIASEN_IDX   1
  #define EFR32_RAC_SGRFENCTRL0_LNAMIXLOBIASEN     0x00000004
  #define EFR32_RAC_SGRFENCTRL0_LNAMIXLOBIASEN_IDX 2
  #define EFR32_RAC_SGRFENCTRL0_LNAMIXRFBIASEN     0x00000008
  #define EFR32_RAC_SGRFENCTRL0_LNAMIXRFBIASEN_IDX 3
  #define EFR32_RAC_SGRFENCTRL0_PASTANDBY          0x00010000
  #define EFR32_RAC_SGRFENCTRL0_PASTANDBY_IDX      16
  #define EFR32_RAC_SGRFENCTRL0_PAEN               0x00020000
  #define EFR32_RAC_SGRFENCTRL0_PAEN_IDX           17
  #define EFR32_RAC_SGRFENCTRL0_PAOUTEN            0x00040000
  #define EFR32_RAC_SGRFENCTRL0_PAOUTEN_IDX        18
  #define EFR32_RAC_SGRFENCTRL0_TRSW               0x00080000
  #define EFR32_RAC_SGRFENCTRL0_TRSW_IDX           19
  #define EFR32_RAC_SGRFENCTRL0_CASCODEDIS         0x01000000
  #define EFR32_RAC_SGRFENCTRL0_CASCODEDIS_IDX     24
  #define EFR32_RAC_SGRFENCTRL0_STRIPESLICEDIS     0x02000000
  #define EFR32_RAC_SGRFENCTRL0_STRIPESLICEDIS_IDX 25

#define EFR32_RAC_SGLNAMIXCTRL_ADDR                  0x00000114
#define EFR32_RAC_SGLNAMIXCTRL_MASK                  0x77ffff00
  #define EFR32_RAC_SGLNAMIXCTRL_CASCODEBIAS_IDX   8
  #define EFR32_RAC_SGLNAMIXCTRL_CASCODEBIAS(v)    ((v) << 8)
  #define EFR32_RAC_SGLNAMIXCTRL_CASCODEBIAS_SET(x, v) do { (x) = (((x) & ~0x700) | ((v) << 8)); } while(0)
  #define EFR32_RAC_SGLNAMIXCTRL_CASCODEBIAS_GET(x) (((x) >> 8) & 0x7)
  #define EFR32_RAC_SGLNAMIXCTRL_LOBIAS_IDX        11
  #define EFR32_RAC_SGLNAMIXCTRL_LOBIAS(v)         ((v) << 11)
  #define EFR32_RAC_SGLNAMIXCTRL_LOBIAS_SET(x, v)  do { (x) = (((x) & ~0x3800) | ((v) << 11)); } while(0)
  #define EFR32_RAC_SGLNAMIXCTRL_LOBIAS_GET(x)     (((x) >> 11) & 0x7)
  #define EFR32_RAC_SGLNAMIXCTRL_VREG_IDX          14
  #define EFR32_RAC_SGLNAMIXCTRL_VREG(v)           ((v) << 14)
  #define EFR32_RAC_SGLNAMIXCTRL_VREG_SET(x, v)    do { (x) = (((x) & ~0x1c000) | ((v) << 14)); } while(0)
  #define EFR32_RAC_SGLNAMIXCTRL_VREG_GET(x)       (((x) >> 14) & 0x7)
  #define EFR32_RAC_SGLNAMIXCTRL_RFBIAS_IDX        17
  #define EFR32_RAC_SGLNAMIXCTRL_RFBIAS(v)         ((v) << 17)
  #define EFR32_RAC_SGLNAMIXCTRL_RFBIAS_SET(x, v)  do { (x) = (((x) & ~0xe0000) | ((v) << 17)); } while(0)
  #define EFR32_RAC_SGLNAMIXCTRL_RFBIAS_GET(x)     (((x) >> 17) & 0x7)
  #define EFR32_RAC_SGLNAMIXCTRL_RISEFALLATT_IDX   20
  #define EFR32_RAC_SGLNAMIXCTRL_RISEFALLATT(v)    ((v) << 20)
  #define EFR32_RAC_SGLNAMIXCTRL_RISEFALLATT_SET(x, v) do { (x) = (((x) & ~0x700000) | ((v) << 20)); } while(0)
  #define EFR32_RAC_SGLNAMIXCTRL_RISEFALLATT_GET(x) (((x) >> 20) & 0x7)
  #define EFR32_RAC_SGLNAMIXCTRL_SGREGAMPCURR_IDX  23
  #define EFR32_RAC_SGLNAMIXCTRL_SGREGAMPCURR(v)   ((v) << 23)
  #define EFR32_RAC_SGLNAMIXCTRL_SGREGAMPCURR_SET(x, v) do { (x) = (((x) & ~0x3800000) | ((v) << 23)); } while(0)
  #define EFR32_RAC_SGLNAMIXCTRL_SGREGAMPCURR_GET(x) (((x) >> 23) & 0x7)
  #define EFR32_RAC_SGLNAMIXCTRL_LNAMIXAUXSYNTHINPUTEN 0x04000000
  #define EFR32_RAC_SGLNAMIXCTRL_LNAMIXAUXSYNTHINPUTEN_IDX 26
  #define EFR32_RAC_SGLNAMIXCTRL_SGREGAMPBWRED_IDX 28
  #define EFR32_RAC_SGLNAMIXCTRL_SGREGAMPBWRED(v)  ((v) << 28)
  #define EFR32_RAC_SGLNAMIXCTRL_SGREGAMPBWRED_SET(x, v) do { (x) = (((x) & ~0x30000000) | ((v) << 28)); } while(0)
  #define EFR32_RAC_SGLNAMIXCTRL_SGREGAMPBWRED_GET(x) (((x) >> 28) & 0x3)
  #define EFR32_RAC_SGLNAMIXCTRL_ENLOAD            0x40000000
  #define EFR32_RAC_SGLNAMIXCTRL_ENLOAD_IDX        30

/** SubGiga ctrl register @multiple */
#define EFR32_RAC_SGPACTRL0_ADDR                     0x00000118
#define EFR32_RAC_SGPACTRL0_MASK                     0xdf3fffe8
  #define EFR32_RAC_SGPACTRL0_BOOTSTRAP            0x00000008
  #define EFR32_RAC_SGPACTRL0_BOOTSTRAP_IDX        3
  #define EFR32_RAC_SGPACTRL0_SGVBATDET            0x00000020
  #define EFR32_RAC_SGPACTRL0_SGVBATDET_IDX        5
  #define EFR32_RAC_SGPACTRL0_CASCODE_IDX          6
  #define EFR32_RAC_SGPACTRL0_CASCODE(v)           ((EFR32_RAC_SGPACTRL0_CASCODE_##v) << 6)
  #define EFR32_RAC_SGPACTRL0_CASCODE_SET(x, v)    do { (x) = (((x) & ~0x3fc0) | ((EFR32_RAC_SGPACTRL0_CASCODE_##v) << 6)); } while(0)
  #define EFR32_RAC_SGPACTRL0_CASCODE_GET(x)       (((x) >> 6) & 0xff)
/**  */
    #define EFR32_RAC_SGPACTRL0_CASCODE_DISABLE      0x00000000
/**  */
    #define EFR32_RAC_SGPACTRL0_CASCODE_EN1SLICE     0x00000001
/**  */
    #define EFR32_RAC_SGPACTRL0_CASCODE_EN2SLICES    0x00000003
/**  */
    #define EFR32_RAC_SGPACTRL0_CASCODE_EN3SLICES    0x00000007
/**  */
    #define EFR32_RAC_SGPACTRL0_CASCODE_EN4SLICES    0x0000000f
/**  */
    #define EFR32_RAC_SGPACTRL0_CASCODE_EN5SLICES    0x0000001f
/**  */
    #define EFR32_RAC_SGPACTRL0_CASCODE_EN6SLICES    0x0000003f
/**  */
    #define EFR32_RAC_SGPACTRL0_CASCODE_EN7SLICES    0x0000007f
/**  */
    #define EFR32_RAC_SGPACTRL0_CASCODE_EN8SLICES    0x000000ff
  #define EFR32_RAC_SGPACTRL0_SLICE_IDX            14
  #define EFR32_RAC_SGPACTRL0_SLICE(v)             ((EFR32_RAC_SGPACTRL0_SLICE_##v) << 14)
  #define EFR32_RAC_SGPACTRL0_SLICE_SET(x, v)      do { (x) = (((x) & ~0x3fc000) | ((EFR32_RAC_SGPACTRL0_SLICE_##v) << 14)); } while(0)
  #define EFR32_RAC_SGPACTRL0_SLICE_GET(x)         (((x) >> 14) & 0xff)
/**  */
    #define EFR32_RAC_SGPACTRL0_SLICE_DISABLE        0x00000000
/**  */
    #define EFR32_RAC_SGPACTRL0_SLICE_EN1SLICE       0x00000001
/**  */
    #define EFR32_RAC_SGPACTRL0_SLICE_EN2SLICES      0x00000003
/**  */
    #define EFR32_RAC_SGPACTRL0_SLICE_EN3SLICES      0x00000007
/**  */
    #define EFR32_RAC_SGPACTRL0_SLICE_EN4SLICES      0x0000000f
/**  */
    #define EFR32_RAC_SGPACTRL0_SLICE_EN5SLICES      0x0000001f
/**  */
    #define EFR32_RAC_SGPACTRL0_SLICE_EN6SLICES      0x0000003f
/**  */
    #define EFR32_RAC_SGPACTRL0_SLICE_EN7SLICES      0x0000007f
/**  */
    #define EFR32_RAC_SGPACTRL0_SLICE_EN8SLICES      0x000000ff
/** Number of stripes @multiple */
  #define EFR32_RAC_SGPACTRL0_STRIPE_IDX           24
  #define EFR32_RAC_SGPACTRL0_STRIPE(v)            ((v) << 24)
  #define EFR32_RAC_SGPACTRL0_STRIPE_SET(x, v)     do { (x) = (((x) & ~0x1f000000) | ((v) << 24)); } while(0)
  #define EFR32_RAC_SGPACTRL0_STRIPE_GET(x)        (((x) >> 24) & 0x1f)
  #define EFR32_RAC_SGPACTRL0_DACGLITCHCTRL        0x40000000
  #define EFR32_RAC_SGPACTRL0_DACGLITCHCTRL_IDX    30
  #define EFR32_RAC_SGPACTRL0_CASCODEBYPASSEN      0x80000000
  #define EFR32_RAC_SGPACTRL0_CASCODEBYPASSEN_IDX  31

#define EFR32_RAC_SGPAPKDCTRL_ADDR                   0x0000011c
#define EFR32_RAC_SGPAPKDCTRL_MASK                   0x01ccdf7d
  #define EFR32_RAC_SGPAPKDCTRL_PKDEN              0x00000001
  #define EFR32_RAC_SGPAPKDCTRL_PKDEN_IDX          0
  #define EFR32_RAC_SGPAPKDCTRL_VTLSEL_IDX         2
  #define EFR32_RAC_SGPAPKDCTRL_VTLSEL(v)          ((v) << 2)
  #define EFR32_RAC_SGPAPKDCTRL_VTLSEL_SET(x, v)   do { (x) = (((x) & ~0x7c) | ((v) << 2)); } while(0)
  #define EFR32_RAC_SGPAPKDCTRL_VTLSEL_GET(x)      (((x) >> 2) & 0x1f)
  #define EFR32_RAC_SGPAPKDCTRL_VTHSEL_IDX         8
  #define EFR32_RAC_SGPAPKDCTRL_VTHSEL(v)          ((v) << 8)
  #define EFR32_RAC_SGPAPKDCTRL_VTHSEL_SET(x, v)   do { (x) = (((x) & ~0x1f00) | ((v) << 8)); } while(0)
  #define EFR32_RAC_SGPAPKDCTRL_VTHSEL_GET(x)      (((x) >> 8) & 0x1f)
  #define EFR32_RAC_SGPAPKDCTRL_CAPSEL_IDX         14
  #define EFR32_RAC_SGPAPKDCTRL_CAPSEL(v)          ((v) << 14)
  #define EFR32_RAC_SGPAPKDCTRL_CAPSEL_SET(x, v)   do { (x) = (((x) & ~0xc000) | ((v) << 14)); } while(0)
  #define EFR32_RAC_SGPAPKDCTRL_CAPSEL_GET(x)      (((x) >> 14) & 0x3)
  #define EFR32_RAC_SGPAPKDCTRL_I2VCM_IDX          18
  #define EFR32_RAC_SGPAPKDCTRL_I2VCM(v)           ((v) << 18)
  #define EFR32_RAC_SGPAPKDCTRL_I2VCM_SET(x, v)    do { (x) = (((x) & ~0xc0000) | ((v) << 18)); } while(0)
  #define EFR32_RAC_SGPAPKDCTRL_I2VCM_GET(x)       (((x) >> 18) & 0x3)
  #define EFR32_RAC_SGPAPKDCTRL_PKDBIASTH_IDX      22
  #define EFR32_RAC_SGPAPKDCTRL_PKDBIASTH(v)       ((v) << 22)
  #define EFR32_RAC_SGPAPKDCTRL_PKDBIASTH_SET(x, v) do { (x) = (((x) & ~0x1c00000) | ((v) << 22)); } while(0)
  #define EFR32_RAC_SGPAPKDCTRL_PKDBIASTH_GET(x)   (((x) >> 22) & 0x7)

#define EFR32_RAC_SGPABIASCTRL0_ADDR                 0x00000120
#define EFR32_RAC_SGPABIASCTRL0_MASK                 0x87c00ccd
  #define EFR32_RAC_SGPABIASCTRL0_LDOBIAS          0x00000001
  #define EFR32_RAC_SGPABIASCTRL0_LDOBIAS_IDX      0
  #define EFR32_RAC_SGPABIASCTRL0_PABIAS_IDX       2
  #define EFR32_RAC_SGPABIASCTRL0_PABIAS(v)        ((v) << 2)
  #define EFR32_RAC_SGPABIASCTRL0_PABIAS_SET(x, v) do { (x) = (((x) & ~0xc) | ((v) << 2)); } while(0)
  #define EFR32_RAC_SGPABIASCTRL0_PABIAS_GET(x)    (((x) >> 2) & 0x3)
  #define EFR32_RAC_SGPABIASCTRL0_BUF0BIAS_IDX     6
  #define EFR32_RAC_SGPABIASCTRL0_BUF0BIAS(v)      ((v) << 6)
  #define EFR32_RAC_SGPABIASCTRL0_BUF0BIAS_SET(x, v) do { (x) = (((x) & ~0xc0) | ((v) << 6)); } while(0)
  #define EFR32_RAC_SGPABIASCTRL0_BUF0BIAS_GET(x)  (((x) >> 6) & 0x3)
  #define EFR32_RAC_SGPABIASCTRL0_BUF12BIAS_IDX    10
  #define EFR32_RAC_SGPABIASCTRL0_BUF12BIAS(v)     ((v) << 10)
  #define EFR32_RAC_SGPABIASCTRL0_BUF12BIAS_SET(x, v) do { (x) = (((x) & ~0xc00) | ((v) << 10)); } while(0)
  #define EFR32_RAC_SGPABIASCTRL0_BUF12BIAS_GET(x) (((x) >> 10) & 0x3)
  #define EFR32_RAC_SGPABIASCTRL0_TXPOWER          0x00400000
  #define EFR32_RAC_SGPABIASCTRL0_TXPOWER_IDX      22
  #define EFR32_RAC_SGPABIASCTRL0_CMGAIN           0x00800000
  #define EFR32_RAC_SGPABIASCTRL0_CMGAIN_IDX       23
  #define EFR32_RAC_SGPABIASCTRL0_SGDACFILTBANDWIDTH_IDX 24
  #define EFR32_RAC_SGPABIASCTRL0_SGDACFILTBANDWIDTH(v) ((v) << 24)
  #define EFR32_RAC_SGPABIASCTRL0_SGDACFILTBANDWIDTH_SET(x, v) do { (x) = (((x) & ~0x7000000) | ((v) << 24)); } while(0)
  #define EFR32_RAC_SGPABIASCTRL0_SGDACFILTBANDWIDTH_GET(x) (((x) >> 24) & 0x7)
  #define EFR32_RAC_SGPABIASCTRL0_SGPAOOKINCRMODDEPTH 0x80000000
  #define EFR32_RAC_SGPABIASCTRL0_SGPAOOKINCRMODDEPTH_IDX 31

#define EFR32_RAC_SGPABIASCTRL1_ADDR                 0x00000124
#define EFR32_RAC_SGPABIASCTRL1_MASK                 0x001c7737
  #define EFR32_RAC_SGPABIASCTRL1_VLDO_IDX         0
  #define EFR32_RAC_SGPABIASCTRL1_VLDO(v)          ((v) << 0)
  #define EFR32_RAC_SGPABIASCTRL1_VLDO_SET(x, v)   do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFR32_RAC_SGPABIASCTRL1_VLDO_GET(x)      (((x) >> 0) & 0x7)
  #define EFR32_RAC_SGPABIASCTRL1_VLDOFB_IDX       4
  #define EFR32_RAC_SGPABIASCTRL1_VLDOFB(v)        ((v) << 4)
  #define EFR32_RAC_SGPABIASCTRL1_VLDOFB_SET(x, v) do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define EFR32_RAC_SGPABIASCTRL1_VLDOFB_GET(x)    (((x) >> 4) & 0x3)
  #define EFR32_RAC_SGPABIASCTRL1_VCASCODEHV_IDX   8
  #define EFR32_RAC_SGPABIASCTRL1_VCASCODEHV(v)    ((v) << 8)
  #define EFR32_RAC_SGPABIASCTRL1_VCASCODEHV_SET(x, v) do { (x) = (((x) & ~0x700) | ((v) << 8)); } while(0)
  #define EFR32_RAC_SGPABIASCTRL1_VCASCODEHV_GET(x) (((x) >> 8) & 0x7)
  #define EFR32_RAC_SGPABIASCTRL1_VCASCODELV_IDX   12
  #define EFR32_RAC_SGPABIASCTRL1_VCASCODELV(v)    ((v) << 12)
  #define EFR32_RAC_SGPABIASCTRL1_VCASCODELV_SET(x, v) do { (x) = (((x) & ~0x7000) | ((v) << 12)); } while(0)
  #define EFR32_RAC_SGPABIASCTRL1_VCASCODELV_GET(x) (((x) >> 12) & 0x7)
  #define EFR32_RAC_SGPABIASCTRL1_SGVBATDETTHRESHOLD_IDX 18
  #define EFR32_RAC_SGPABIASCTRL1_SGVBATDETTHRESHOLD(v) ((v) << 18)
  #define EFR32_RAC_SGPABIASCTRL1_SGVBATDETTHRESHOLD_SET(x, v) do { (x) = (((x) & ~0xc0000) | ((v) << 18)); } while(0)
  #define EFR32_RAC_SGPABIASCTRL1_SGVBATDETTHRESHOLD_GET(x) (((x) >> 18) & 0x3)
  #define EFR32_RAC_SGPABIASCTRL1_SGTRIMLOWVBATCURR 0x00100000
  #define EFR32_RAC_SGPABIASCTRL1_SGTRIMLOWVBATCURR_IDX 20

#define EFR32_RAC_RFSTATUS_ADDR                      0x00000128
#define EFR32_RAC_RFSTATUS_MASK                      0x0000000f
  #define EFR32_RAC_RFSTATUS_MODRAMPUPDONE         0x00000001
  #define EFR32_RAC_RFSTATUS_MODRAMPUPDONE_IDX     0
  #define EFR32_RAC_RFSTATUS_PAVHIGH               0x00000002
  #define EFR32_RAC_RFSTATUS_PAVHIGH_IDX           1
  #define EFR32_RAC_RFSTATUS_PAVLOW                0x00000004
  #define EFR32_RAC_RFSTATUS_PAVLOW_IDX            2
  #define EFR32_RAC_RFSTATUS_PABATHIGH             0x00000008
  #define EFR32_RAC_RFSTATUS_PABATHIGH_IDX         3

#define EFR32_RAC_RFBIASCTRL_ADDR                    0x0000012c
#define EFR32_RAC_RFBIASCTRL_MASK                    0x00070077
  #define EFR32_RAC_RFBIASCTRL_LDOVREF_IDX         0
  #define EFR32_RAC_RFBIASCTRL_LDOVREF(v)          ((v) << 0)
  #define EFR32_RAC_RFBIASCTRL_LDOVREF_SET(x, v)   do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFR32_RAC_RFBIASCTRL_LDOVREF_GET(x)      (((x) >> 0) & 0x7)
  #define EFR32_RAC_RFBIASCTRL_LDOAMPCURR_IDX      4
  #define EFR32_RAC_RFBIASCTRL_LDOAMPCURR(v)       ((v) << 4)
  #define EFR32_RAC_RFBIASCTRL_LDOAMPCURR_SET(x, v) do { (x) = (((x) & ~0x70) | ((v) << 4)); } while(0)
  #define EFR32_RAC_RFBIASCTRL_LDOAMPCURR_GET(x)   (((x) >> 4) & 0x7)
  #define EFR32_RAC_RFBIASCTRL_STARTUPSUPPLY       0x00010000
  #define EFR32_RAC_RFBIASCTRL_STARTUPSUPPLY_IDX   16
  #define EFR32_RAC_RFBIASCTRL_STARTUPCORE         0x00020000
  #define EFR32_RAC_RFBIASCTRL_STARTUPCORE_IDX     17
  #define EFR32_RAC_RFBIASCTRL_DISBOOTSTRAP        0x00040000
  #define EFR32_RAC_RFBIASCTRL_DISBOOTSTRAP_IDX    18

/** When chip is reseted, the corresponding value in User Data page of flash is
   copied into this register @multiple */
#define EFR32_RAC_RFBIASCAL_ADDR                     0x00000130
#define EFR32_RAC_RFBIASCAL_MASK                     0x003f3f3f
  #define EFR32_RAC_RFBIASCAL_VREF_IDX             0
  #define EFR32_RAC_RFBIASCAL_VREF(v)              ((v) << 0)
  #define EFR32_RAC_RFBIASCAL_VREF_SET(x, v)       do { (x) = (((x) & ~0x3f) | ((v) << 0)); } while(0)
  #define EFR32_RAC_RFBIASCAL_VREF_GET(x)          (((x) >> 0) & 0x3f)
  #define EFR32_RAC_RFBIASCAL_BIAS_IDX             8
  #define EFR32_RAC_RFBIASCAL_BIAS(v)              ((v) << 8)
  #define EFR32_RAC_RFBIASCAL_BIAS_SET(x, v)       do { (x) = (((x) & ~0x3f00) | ((v) << 8)); } while(0)
  #define EFR32_RAC_RFBIASCAL_BIAS_GET(x)          (((x) >> 8) & 0x3f)
  #define EFR32_RAC_RFBIASCAL_TEMPCO_IDX           16
  #define EFR32_RAC_RFBIASCAL_TEMPCO(v)            ((v) << 16)
  #define EFR32_RAC_RFBIASCAL_TEMPCO_SET(x, v)     do { (x) = (((x) & ~0x3f0000) | ((v) << 16)); } while(0)
  #define EFR32_RAC_RFBIASCAL_TEMPCO_GET(x)        (((x) >> 16) & 0x3f)

#define EFR32_RAC_LNAMIXCTRL1_ADDR                   0x00000134
#define EFR32_RAC_LNAMIXCTRL1_MASK                   0x007ffffe
  #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLCLK_IDX  1
  #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLCLK(v)   ((EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLCLK_##v) << 1)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLCLK_SET(x, v) do { (x) = (((x) & ~0x1e) | ((EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLCLK_##v) << 1)); } while(0)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLCLK_GET(x) (((x) >> 1) & 0xf)
/**  */
    #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLCLK_E0   0x00000000
/**  */
    #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLCLK_E1   0x00000001
/**  */
    #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLCLK_E3   0x00000003
/**  */
    #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLCLK_E7   0x00000007
/**  */
    #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLCLK_E15  0x0000000f
  #define EFR32_RAC_LNAMIXCTRL1_TRIMTRSWGATEV_IDX  5
  #define EFR32_RAC_LNAMIXCTRL1_TRIMTRSWGATEV(v)   ((v) << 5)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMTRSWGATEV_SET(x, v) do { (x) = (((x) & ~0x60) | ((v) << 5)); } while(0)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMTRSWGATEV_GET(x) (((x) >> 5) & 0x3)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMVCASLDO        0x00000080
  #define EFR32_RAC_LNAMIXCTRL1_TRIMVCASLDO_IDX    7
  #define EFR32_RAC_LNAMIXCTRL1_TRIMVREFLDO_IDX    8
  #define EFR32_RAC_LNAMIXCTRL1_TRIMVREFLDO(v)     ((v) << 8)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMVREFLDO_SET(x, v) do { (x) = (((x) & ~0x700) | ((v) << 8)); } while(0)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMVREFLDO_GET(x) (((x) >> 8) & 0x7)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMVREGMIN_IDX    11
  #define EFR32_RAC_LNAMIXCTRL1_TRIMVREGMIN(v)     ((v) << 11)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMVREGMIN_SET(x, v) do { (x) = (((x) & ~0x1800) | ((v) << 11)); } while(0)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMVREGMIN_GET(x) (((x) >> 11) & 0x3)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXBIAS_IDX    13
  #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXBIAS(v)     ((v) << 13)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXBIAS_SET(x, v) do { (x) = (((x) & ~0x6000) | ((v) << 13)); } while(0)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXBIAS_GET(x) (((x) >> 13) & 0x3)
  #define EFR32_RAC_LNAMIXCTRL1_ENBIASCAL          0x00008000
  #define EFR32_RAC_LNAMIXCTRL1_ENBIASCAL_IDX      15
  #define EFR32_RAC_LNAMIXCTRL1_STATUSBIASCAL      0x00010000
  #define EFR32_RAC_LNAMIXCTRL1_STATUSBIASCAL_IDX  16
  #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLGAIN_IDX 17
  #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLGAIN(v)  ((v) << 17)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLGAIN_SET(x, v) do { (x) = (((x) & ~0x1e0000) | ((v) << 17)); } while(0)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMAUXPLLGAIN_GET(x) (((x) >> 17) & 0xf)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMLDOAMPBWRED_IDX 21
  #define EFR32_RAC_LNAMIXCTRL1_TRIMLDOAMPBWRED(v) ((v) << 21)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMLDOAMPBWRED_SET(x, v) do { (x) = (((x) & ~0x600000) | ((v) << 21)); } while(0)
  #define EFR32_RAC_LNAMIXCTRL1_TRIMLDOAMPBWRED_GET(x) (((x) >> 21) & 0x3)

#define EFR32_RAC_IFPGACTRL_ADDR                     0x00000138
#define EFR32_RAC_IFPGACTRL_MASK                     0x0007fffe
  #define EFR32_RAC_IFPGACTRL_VLDO_IDX             1
  #define EFR32_RAC_IFPGACTRL_VLDO(v)              ((v) << 1)
  #define EFR32_RAC_IFPGACTRL_VLDO_SET(x, v)       do { (x) = (((x) & ~0xe) | ((v) << 1)); } while(0)
  #define EFR32_RAC_IFPGACTRL_VLDO_GET(x)          (((x) >> 1) & 0x7)
  #define EFR32_RAC_IFPGACTRL_BANDSEL_IDX          4
  #define EFR32_RAC_IFPGACTRL_BANDSEL(v)           ((EFR32_RAC_IFPGACTRL_BANDSEL_##v) << 4)
  #define EFR32_RAC_IFPGACTRL_BANDSEL_SET(x, v)    do { (x) = (((x) & ~0x10) | ((EFR32_RAC_IFPGACTRL_BANDSEL_##v) << 4)); } while(0)
  #define EFR32_RAC_IFPGACTRL_BANDSEL_GET(x)       (((x) >> 4) & 0x1)
    #define EFR32_RAC_IFPGACTRL_BANDSEL_2P4          0x00000000
    #define EFR32_RAC_IFPGACTRL_BANDSEL_SG           0x00000001
  #define EFR32_RAC_IFPGACTRL_CASCBIAS_IDX         5
  #define EFR32_RAC_IFPGACTRL_CASCBIAS(v)          ((v) << 5)
  #define EFR32_RAC_IFPGACTRL_CASCBIAS_SET(x, v)   do { (x) = (((x) & ~0xe0) | ((v) << 5)); } while(0)
  #define EFR32_RAC_IFPGACTRL_CASCBIAS_GET(x)      (((x) >> 5) & 0x7)
  #define EFR32_RAC_IFPGACTRL_TRIMVCASLDO          0x00000100
  #define EFR32_RAC_IFPGACTRL_TRIMVCASLDO_IDX      8
  #define EFR32_RAC_IFPGACTRL_TRIMVCM_IDX          9
  #define EFR32_RAC_IFPGACTRL_TRIMVCM(v)           ((v) << 9)
  #define EFR32_RAC_IFPGACTRL_TRIMVCM_SET(x, v)    do { (x) = (((x) & ~0xe00) | ((v) << 9)); } while(0)
  #define EFR32_RAC_IFPGACTRL_TRIMVCM_GET(x)       (((x) >> 9) & 0x7)
  #define EFR32_RAC_IFPGACTRL_TRIMVREFLDO_IDX      12
  #define EFR32_RAC_IFPGACTRL_TRIMVREFLDO(v)       ((v) << 12)
  #define EFR32_RAC_IFPGACTRL_TRIMVREFLDO_SET(x, v) do { (x) = (((x) & ~0x7000) | ((v) << 12)); } while(0)
  #define EFR32_RAC_IFPGACTRL_TRIMVREFLDO_GET(x)   (((x) >> 12) & 0x7)
  #define EFR32_RAC_IFPGACTRL_TRIMVREGMIN_IDX      15
  #define EFR32_RAC_IFPGACTRL_TRIMVREGMIN(v)       ((v) << 15)
  #define EFR32_RAC_IFPGACTRL_TRIMVREGMIN_SET(x, v) do { (x) = (((x) & ~0x18000) | ((v) << 15)); } while(0)
  #define EFR32_RAC_IFPGACTRL_TRIMVREGMIN_GET(x)   (((x) >> 15) & 0x3)
  #define EFR32_RAC_IFPGACTRL_ENHYST               0x00020000
  #define EFR32_RAC_IFPGACTRL_ENHYST_IDX           17
  #define EFR32_RAC_IFPGACTRL_ENOFFD               0x00040000
  #define EFR32_RAC_IFPGACTRL_ENOFFD_IDX           18

/** When chip is reseted, the corresponding value in User Data page of flash is
   copied into this register @multiple */
#define EFR32_RAC_IFPGACAL_ADDR                      0x0000013c
#define EFR32_RAC_IFPGACAL_MASK                      0x7f7f7f7f
  #define EFR32_RAC_IFPGACAL_IRAMP_IDX             0
  #define EFR32_RAC_IFPGACAL_IRAMP(v)              ((v) << 0)
  #define EFR32_RAC_IFPGACAL_IRAMP_SET(x, v)       do { (x) = (((x) & ~0x7f) | ((v) << 0)); } while(0)
  #define EFR32_RAC_IFPGACAL_IRAMP_GET(x)          (((x) >> 0) & 0x7f)
  #define EFR32_RAC_IFPGACAL_IRPHASE_IDX           8
  #define EFR32_RAC_IFPGACAL_IRPHASE(v)            ((v) << 8)
  #define EFR32_RAC_IFPGACAL_IRPHASE_SET(x, v)     do { (x) = (((x) & ~0x7f00) | ((v) << 8)); } while(0)
  #define EFR32_RAC_IFPGACAL_IRPHASE_GET(x)        (((x) >> 8) & 0x7f)
  #define EFR32_RAC_IFPGACAL_OFFSETI_IDX           16
  #define EFR32_RAC_IFPGACAL_OFFSETI(v)            ((v) << 16)
  #define EFR32_RAC_IFPGACAL_OFFSETI_SET(x, v)     do { (x) = (((x) & ~0x7f0000) | ((v) << 16)); } while(0)
  #define EFR32_RAC_IFPGACAL_OFFSETI_GET(x)        (((x) >> 16) & 0x7f)
  #define EFR32_RAC_IFPGACAL_OFFSETQ_IDX           24
  #define EFR32_RAC_IFPGACAL_OFFSETQ(v)            ((v) << 24)
  #define EFR32_RAC_IFPGACAL_OFFSETQ_SET(x, v)     do { (x) = (((x) & ~0x7f000000) | ((v) << 24)); } while(0)
  #define EFR32_RAC_IFPGACAL_OFFSETQ_GET(x)        (((x) >> 24) & 0x7f)

#define EFR32_RAC_IFFILTCTRL_ADDR                    0x00000140
#define EFR32_RAC_IFFILTCTRL_MASK                    0x86ec00ef
  #define EFR32_RAC_IFFILTCTRL_BANDWIDTH_IDX       0
  #define EFR32_RAC_IFFILTCTRL_BANDWIDTH(v)        ((v) << 0)
  #define EFR32_RAC_IFFILTCTRL_BANDWIDTH_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_RAC_IFFILTCTRL_BANDWIDTH_GET(x)    (((x) >> 0) & 0xf)
  #define EFR32_RAC_IFFILTCTRL_CENTFREQ_IDX        5
  #define EFR32_RAC_IFFILTCTRL_CENTFREQ(v)         ((v) << 5)
  #define EFR32_RAC_IFFILTCTRL_CENTFREQ_SET(x, v)  do { (x) = (((x) & ~0xe0) | ((v) << 5)); } while(0)
  #define EFR32_RAC_IFFILTCTRL_CENTFREQ_GET(x)     (((x) >> 5) & 0x7)
  #define EFR32_RAC_IFFILTCTRL_VCM_IDX             18
  #define EFR32_RAC_IFFILTCTRL_VCM(v)              ((v) << 18)
  #define EFR32_RAC_IFFILTCTRL_VCM_SET(x, v)       do { (x) = (((x) & ~0xc0000) | ((v) << 18)); } while(0)
  #define EFR32_RAC_IFFILTCTRL_VCM_GET(x)          (((x) >> 18) & 0x3)
  #define EFR32_RAC_IFFILTCTRL_VREG_IDX            21
  #define EFR32_RAC_IFFILTCTRL_VREG(v)             ((v) << 21)
  #define EFR32_RAC_IFFILTCTRL_VREG_SET(x, v)      do { (x) = (((x) & ~0xe00000) | ((v) << 21)); } while(0)
  #define EFR32_RAC_IFFILTCTRL_VREG_GET(x)         (((x) >> 21) & 0x7)
  #define EFR32_RAC_IFFILTCTRL_DROOP_IDX           25
  #define EFR32_RAC_IFFILTCTRL_DROOP(v)            ((v) << 25)
  #define EFR32_RAC_IFFILTCTRL_DROOP_SET(x, v)     do { (x) = (((x) & ~0x6000000) | ((v) << 25)); } while(0)
  #define EFR32_RAC_IFFILTCTRL_DROOP_GET(x)        (((x) >> 25) & 0x3)
  #define EFR32_RAC_IFFILTCTRL_INPUTSHORT          0x80000000
  #define EFR32_RAC_IFFILTCTRL_INPUTSHORT_IDX      31

#define EFR32_RAC_IFADCCTRL_ADDR                     0x00000144
#define EFR32_RAC_IFADCCTRL_MASK                     0x7fffffff
  #define EFR32_RAC_IFADCCTRL_REALMODE             0x00000001
  #define EFR32_RAC_IFADCCTRL_REALMODE_IDX         0
  #define EFR32_RAC_IFADCCTRL_INPUTSEL             0x00000002
  #define EFR32_RAC_IFADCCTRL_INPUTSEL_IDX         1
  #define EFR32_RAC_IFADCCTRL_INPUTSCALE_IDX       2
  #define EFR32_RAC_IFADCCTRL_INPUTSCALE(v)        ((v) << 2)
  #define EFR32_RAC_IFADCCTRL_INPUTSCALE_SET(x, v) do { (x) = (((x) & ~0xc) | ((v) << 2)); } while(0)
  #define EFR32_RAC_IFADCCTRL_INPUTSCALE_GET(x)    (((x) >> 2) & 0x3)
  #define EFR32_RAC_IFADCCTRL_SHORTI               0x00000010
  #define EFR32_RAC_IFADCCTRL_SHORTI_IDX           4
  #define EFR32_RAC_IFADCCTRL_SHORTQ               0x00000020
  #define EFR32_RAC_IFADCCTRL_SHORTQ_IDX           5
  #define EFR32_RAC_IFADCCTRL_VLDOSERIES_IDX       6
  #define EFR32_RAC_IFADCCTRL_VLDOSERIES(v)        ((v) << 6)
  #define EFR32_RAC_IFADCCTRL_VLDOSERIES_SET(x, v) do { (x) = (((x) & ~0x1c0) | ((v) << 6)); } while(0)
  #define EFR32_RAC_IFADCCTRL_VLDOSERIES_GET(x)    (((x) >> 6) & 0x7)
  #define EFR32_RAC_IFADCCTRL_VLDOSERIESCURR_IDX   9
  #define EFR32_RAC_IFADCCTRL_VLDOSERIESCURR(v)    ((v) << 9)
  #define EFR32_RAC_IFADCCTRL_VLDOSERIESCURR_SET(x, v) do { (x) = (((x) & ~0xe00) | ((v) << 9)); } while(0)
  #define EFR32_RAC_IFADCCTRL_VLDOSERIESCURR_GET(x) (((x) >> 9) & 0x7)
  #define EFR32_RAC_IFADCCTRL_VLDOSHUNT_IDX        12
  #define EFR32_RAC_IFADCCTRL_VLDOSHUNT(v)         ((v) << 12)
  #define EFR32_RAC_IFADCCTRL_VLDOSHUNT_SET(x, v)  do { (x) = (((x) & ~0x3000) | ((v) << 12)); } while(0)
  #define EFR32_RAC_IFADCCTRL_VLDOSHUNT_GET(x)     (((x) >> 12) & 0x3)
  #define EFR32_RAC_IFADCCTRL_VLDOCLKGEN_IDX       14
  #define EFR32_RAC_IFADCCTRL_VLDOCLKGEN(v)        ((v) << 14)
  #define EFR32_RAC_IFADCCTRL_VLDOCLKGEN_SET(x, v) do { (x) = (((x) & ~0xc000) | ((v) << 14)); } while(0)
  #define EFR32_RAC_IFADCCTRL_VLDOCLKGEN_GET(x)    (((x) >> 14) & 0x3)
  #define EFR32_RAC_IFADCCTRL_VCM_IDX              16
  #define EFR32_RAC_IFADCCTRL_VCM(v)               ((EFR32_RAC_IFADCCTRL_VCM_##v) << 16)
  #define EFR32_RAC_IFADCCTRL_VCM_SET(x, v)        do { (x) = (((x) & ~0x70000) | ((EFR32_RAC_IFADCCTRL_VCM_##v) << 16)); } while(0)
  #define EFR32_RAC_IFADCCTRL_VCM_GET(x)           (((x) >> 16) & 0x7)
/**  */
    #define EFR32_RAC_IFADCCTRL_VCM_E0               0x00000000
/**  */
    #define EFR32_RAC_IFADCCTRL_VCM_E1               0x00000001
/**  */
    #define EFR32_RAC_IFADCCTRL_VCM_E2               0x00000002
/**  */
    #define EFR32_RAC_IFADCCTRL_VCM_E4               0x00000004
  #define EFR32_RAC_IFADCCTRL_OTA1CURRENT_IDX      19
  #define EFR32_RAC_IFADCCTRL_OTA1CURRENT(v)       ((v) << 19)
  #define EFR32_RAC_IFADCCTRL_OTA1CURRENT_SET(x, v) do { (x) = (((x) & ~0x180000) | ((v) << 19)); } while(0)
  #define EFR32_RAC_IFADCCTRL_OTA1CURRENT_GET(x)   (((x) >> 19) & 0x3)
  #define EFR32_RAC_IFADCCTRL_OTA2CURRENT_IDX      21
  #define EFR32_RAC_IFADCCTRL_OTA2CURRENT(v)       ((v) << 21)
  #define EFR32_RAC_IFADCCTRL_OTA2CURRENT_SET(x, v) do { (x) = (((x) & ~0x600000) | ((v) << 21)); } while(0)
  #define EFR32_RAC_IFADCCTRL_OTA2CURRENT_GET(x)   (((x) >> 21) & 0x3)
  #define EFR32_RAC_IFADCCTRL_OTA3CURRENT_IDX      23
  #define EFR32_RAC_IFADCCTRL_OTA3CURRENT(v)       ((v) << 23)
  #define EFR32_RAC_IFADCCTRL_OTA3CURRENT_SET(x, v) do { (x) = (((x) & ~0x1800000) | ((v) << 23)); } while(0)
  #define EFR32_RAC_IFADCCTRL_OTA3CURRENT_GET(x)   (((x) >> 23) & 0x3)
  #define EFR32_RAC_IFADCCTRL_SATURATIONDETDIS     0x02000000
  #define EFR32_RAC_IFADCCTRL_SATURATIONDETDIS_IDX 25
  #define EFR32_RAC_IFADCCTRL_REGENCLKDELAY_IDX    26
  #define EFR32_RAC_IFADCCTRL_REGENCLKDELAY(v)     ((v) << 26)
  #define EFR32_RAC_IFADCCTRL_REGENCLKDELAY_SET(x, v) do { (x) = (((x) & ~0x1c000000) | ((v) << 26)); } while(0)
  #define EFR32_RAC_IFADCCTRL_REGENCLKDELAY_GET(x) (((x) >> 26) & 0x7)
  #define EFR32_RAC_IFADCCTRL_ENABLECLK            0x20000000
  #define EFR32_RAC_IFADCCTRL_ENABLECLK_IDX        29
  #define EFR32_RAC_IFADCCTRL_INVERTCLK            0x40000000
  #define EFR32_RAC_IFADCCTRL_INVERTCLK_IDX        30

#define EFR32_RAC_IFADCCAL_ADDR                      0x00000148
#define EFR32_RAC_IFADCCAL_MASK                      0x00000030
  #define EFR32_RAC_IFADCCAL_CALEN                 0x00000010
  #define EFR32_RAC_IFADCCAL_CALEN_IDX             4
  #define EFR32_RAC_IFADCCAL_RCCALOUT              0x00000020
  #define EFR32_RAC_IFADCCAL_RCCALOUT_IDX          5

#define EFR32_RAC_PAENCTRL_ADDR                      0x0000014c
#define EFR32_RAC_PAENCTRL_MASK                      0x00000100
  #define EFR32_RAC_PAENCTRL_PARAMP                0x00000100
  #define EFR32_RAC_PAENCTRL_PARAMP_IDX            8

#define EFR32_RAC_PACTUNECTRL_ADDR                   0x00000150
#define EFR32_RAC_PACTUNECTRL_MASK                   0x01f701f7
  #define EFR32_RAC_PACTUNECTRL_PACTUNERX_IDX      0
  #define EFR32_RAC_PACTUNECTRL_PACTUNERX(v)       ((v) << 0)
  #define EFR32_RAC_PACTUNECTRL_PACTUNERX_SET(x, v) do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFR32_RAC_PACTUNECTRL_PACTUNERX_GET(x)   (((x) >> 0) & 0x7)
  #define EFR32_RAC_PACTUNECTRL_SGPACTUNERX_IDX    4
  #define EFR32_RAC_PACTUNECTRL_SGPACTUNERX(v)     ((v) << 4)
  #define EFR32_RAC_PACTUNECTRL_SGPACTUNERX_SET(x, v) do { (x) = (((x) & ~0x1f0) | ((v) << 4)); } while(0)
  #define EFR32_RAC_PACTUNECTRL_SGPACTUNERX_GET(x) (((x) >> 4) & 0x1f)
  #define EFR32_RAC_PACTUNECTRL_PACTUNETX_IDX      16
  #define EFR32_RAC_PACTUNECTRL_PACTUNETX(v)       ((v) << 16)
  #define EFR32_RAC_PACTUNECTRL_PACTUNETX_SET(x, v) do { (x) = (((x) & ~0x70000) | ((v) << 16)); } while(0)
  #define EFR32_RAC_PACTUNECTRL_PACTUNETX_GET(x)   (((x) >> 16) & 0x7)
  #define EFR32_RAC_PACTUNECTRL_SGPACTUNETX_IDX    20
  #define EFR32_RAC_PACTUNECTRL_SGPACTUNETX(v)     ((v) << 20)
  #define EFR32_RAC_PACTUNECTRL_SGPACTUNETX_SET(x, v) do { (x) = (((x) & ~0x1f00000) | ((v) << 20)); } while(0)
  #define EFR32_RAC_PACTUNECTRL_SGPACTUNETX_GET(x) (((x) >> 20) & 0x1f)

#define EFR32_RAC_RCTUNE_ADDR                        0x00000154
#define EFR32_RAC_RCTUNE_MASK                        0x003f003f
  #define EFR32_RAC_RCTUNE_IFADCRCTUNE_IDX         0
  #define EFR32_RAC_RCTUNE_IFADCRCTUNE(v)          ((v) << 0)
  #define EFR32_RAC_RCTUNE_IFADCRCTUNE_SET(x, v)   do { (x) = (((x) & ~0x3f) | ((v) << 0)); } while(0)
  #define EFR32_RAC_RCTUNE_IFADCRCTUNE_GET(x)      (((x) >> 0) & 0x3f)
  #define EFR32_RAC_RCTUNE_IFFILT_IDX              16
  #define EFR32_RAC_RCTUNE_IFFILT(v)               ((v) << 16)
  #define EFR32_RAC_RCTUNE_IFFILT_SET(x, v)        do { (x) = (((x) & ~0x3f0000) | ((v) << 16)); } while(0)
  #define EFR32_RAC_RCTUNE_IFFILT_GET(x)           (((x) >> 16) & 0x3f)

#define EFR32_RAC_APC_ADDR                           0x00000158
#define EFR32_RAC_APC_MASK                           0xff000007
  #define EFR32_RAC_APC_ENPASTATUSVDDPA            0x00000001
  #define EFR32_RAC_APC_ENPASTATUSVDDPA_IDX        0
  #define EFR32_RAC_APC_ENPASTATUSPKDVTH           0x00000002
  #define EFR32_RAC_APC_ENPASTATUSPKDVTH_IDX       1
  #define EFR32_RAC_APC_ENAPCSW                    0x00000004
  #define EFR32_RAC_APC_ENAPCSW_IDX                2
  #define EFR32_RAC_APC_AMPCONTROLLIMITSW_IDX      24
  #define EFR32_RAC_APC_AMPCONTROLLIMITSW(v)       ((v) << 24)
  #define EFR32_RAC_APC_AMPCONTROLLIMITSW_SET(x, v) do { (x) = (((x) & ~0xff000000) | ((v) << 24)); } while(0)
  #define EFR32_RAC_APC_AMPCONTROLLIMITSW_GET(x)   (((x) >> 24) & 0xff)

#define EFR32_RAC_SPARE_ADDR                         0x0000015c
#define EFR32_RAC_SPARE_MASK                         0x3fffbf00
  #define EFR32_RAC_SPARE_LNAMIXERSPARE_IDX        8
  #define EFR32_RAC_SPARE_LNAMIXERSPARE(v)         ((v) << 8)
  #define EFR32_RAC_SPARE_LNAMIXERSPARE_SET(x, v)  do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define EFR32_RAC_SPARE_LNAMIXERSPARE_GET(x)     (((x) >> 8) & 0x3)
  #define EFR32_RAC_SPARE_IFFILTSPARE_IDX          10
  #define EFR32_RAC_SPARE_IFFILTSPARE(v)           ((v) << 10)
  #define EFR32_RAC_SPARE_IFFILTSPARE_SET(x, v)    do { (x) = (((x) & ~0x1c00) | ((v) << 10)); } while(0)
  #define EFR32_RAC_SPARE_IFFILTSPARE_GET(x)       (((x) >> 10) & 0x7)
  #define EFR32_RAC_SPARE_IFPGASPARE               0x00002000
  #define EFR32_RAC_SPARE_IFPGASPARE_IDX           13
  #define EFR32_RAC_SPARE_IFFILTSPARE0_IDX         15
  #define EFR32_RAC_SPARE_IFFILTSPARE0(v)          ((v) << 15)
  #define EFR32_RAC_SPARE_IFFILTSPARE0_SET(x, v)   do { (x) = (((x) & ~0x18000) | ((v) << 15)); } while(0)
  #define EFR32_RAC_SPARE_IFFILTSPARE0_GET(x)      (((x) >> 15) & 0x3)
  #define EFR32_RAC_SPARE_IFFILTSPARE1_IDX         17
  #define EFR32_RAC_SPARE_IFFILTSPARE1(v)          ((v) << 17)
  #define EFR32_RAC_SPARE_IFFILTSPARE1_SET(x, v)   do { (x) = (((x) & ~0x60000) | ((v) << 17)); } while(0)
  #define EFR32_RAC_SPARE_IFFILTSPARE1_GET(x)      (((x) >> 17) & 0x3)
  #define EFR32_RAC_SPARE_IFFILTSPARE2_IDX         19
  #define EFR32_RAC_SPARE_IFFILTSPARE2(v)          ((v) << 19)
  #define EFR32_RAC_SPARE_IFFILTSPARE2_SET(x, v)   do { (x) = (((x) & ~0x180000) | ((v) << 19)); } while(0)
  #define EFR32_RAC_SPARE_IFFILTSPARE2_GET(x)      (((x) >> 19) & 0x3)
  #define EFR32_RAC_SPARE_IFADCSPARE_IDX           21
  #define EFR32_RAC_SPARE_IFADCSPARE(v)            ((v) << 21)
  #define EFR32_RAC_SPARE_IFADCSPARE_SET(x, v)     do { (x) = (((x) & ~0xe00000) | ((v) << 21)); } while(0)
  #define EFR32_RAC_SPARE_IFADCSPARE_GET(x)        (((x) >> 21) & 0x7)
  #define EFR32_RAC_SPARE_PASPARE_IDX              24
  #define EFR32_RAC_SPARE_PASPARE(v)               ((v) << 24)
  #define EFR32_RAC_SPARE_PASPARE_SET(x, v)        do { (x) = (((x) & ~0x7000000) | ((v) << 24)); } while(0)
  #define EFR32_RAC_SPARE_PASPARE_GET(x)           (((x) >> 24) & 0x7)
  #define EFR32_RAC_SPARE_SGPASPARE_IDX            27
  #define EFR32_RAC_SPARE_SGPASPARE(v)             ((v) << 27)
  #define EFR32_RAC_SPARE_SGPASPARE_SET(x, v)      do { (x) = (((x) & ~0x38000000) | ((v) << 27)); } while(0)
  #define EFR32_RAC_SPARE_SGPASPARE_GET(x)         (((x) >> 27) & 0x7)

#define EFR32_RAC_IFPGACTRL1_ADDR                    0x00000160
#define EFR32_RAC_IFPGACTRL1_MASK                    0x00000001
  #define EFR32_RAC_IFPGACTRL1_LBWMODE             0x00000001
  #define EFR32_RAC_IFPGACTRL1_LBWMODE_IDX         0

#define EFR32_RAC_SGLNAMIXCTRL1_ADDR                 0x00000164
#define EFR32_RAC_SGLNAMIXCTRL1_MASK                 0x0000003f
  #define EFR32_RAC_SGLNAMIXCTRL1_ENRFPKD          0x00000001
  #define EFR32_RAC_SGLNAMIXCTRL1_ENRFPKD_IDX      0
  #define EFR32_RAC_SGLNAMIXCTRL1_TRIMACC          0x00000002
  #define EFR32_RAC_SGLNAMIXCTRL1_TRIMACC_IDX      1
  #define EFR32_RAC_SGLNAMIXCTRL1_TRIMNPATHBW_IDX  2
  #define EFR32_RAC_SGLNAMIXCTRL1_TRIMNPATHBW(v)   ((v) << 2)
  #define EFR32_RAC_SGLNAMIXCTRL1_TRIMNPATHBW_SET(x, v) do { (x) = (((x) & ~0xc) | ((v) << 2)); } while(0)
  #define EFR32_RAC_SGLNAMIXCTRL1_TRIMNPATHBW_GET(x) (((x) >> 2) & 0x3)
  #define EFR32_RAC_SGLNAMIXCTRL1_TRIMRESP         0x00000010
  #define EFR32_RAC_SGLNAMIXCTRL1_TRIMRESP_IDX     4
  #define EFR32_RAC_SGLNAMIXCTRL1_TRIMTHRESH       0x00000020
  #define EFR32_RAC_SGLNAMIXCTRL1_TRIMTHRESH_IDX   5

#define EFR32_RAC_CHPCTRL1_ADDR                      0x00000168
#define EFR32_RAC_CHPCTRL1_MASK                      0x0000000f
  #define EFR32_RAC_CHPCTRL1_BYPREPLDOTX           0x00000001
  #define EFR32_RAC_CHPCTRL1_BYPREPLDOTX_IDX       0
  #define EFR32_RAC_CHPCTRL1_BYPREPLDORX           0x00000002
  #define EFR32_RAC_CHPCTRL1_BYPREPLDORX_IDX       1
  #define EFR32_RAC_CHPCTRL1_TRIMREPLDO_IDX        2
  #define EFR32_RAC_CHPCTRL1_TRIMREPLDO(v)         ((v) << 2)
  #define EFR32_RAC_CHPCTRL1_TRIMREPLDO_SET(x, v)  do { (x) = (((x) & ~0xc) | ((v) << 2)); } while(0)
  #define EFR32_RAC_CHPCTRL1_TRIMREPLDO_GET(x)     (((x) >> 2) & 0x3)

#define EFR32_RAC_MMDCTRL1_ADDR                      0x0000016c
#define EFR32_RAC_MMDCTRL1_MASK                      0x0000000f
  #define EFR32_RAC_MMDCTRL1_BYPREPLDOTX           0x00000001
  #define EFR32_RAC_MMDCTRL1_BYPREPLDOTX_IDX       0
  #define EFR32_RAC_MMDCTRL1_BYPREPLDORX           0x00000002
  #define EFR32_RAC_MMDCTRL1_BYPREPLDORX_IDX       1
  #define EFR32_RAC_MMDCTRL1_TRIMREPLDO_IDX        2
  #define EFR32_RAC_MMDCTRL1_TRIMREPLDO(v)         ((v) << 2)
  #define EFR32_RAC_MMDCTRL1_TRIMREPLDO_SET(x, v)  do { (x) = (((x) & ~0xc) | ((v) << 2)); } while(0)
  #define EFR32_RAC_MMDCTRL1_TRIMREPLDO_GET(x)     (((x) >> 2) & 0x3)

#define EFR32_RAC_STATUS2_ADDR                       0x00000170
#define EFR32_RAC_STATUS2_MASK                       0x00000fff
  #define EFR32_RAC_STATUS2_PREVSTATE1_IDX         0
  #define EFR32_RAC_STATUS2_PREVSTATE1(v)          ((EFR32_RAC_STATUS2_PREVSTATE1_##v) << 0)
  #define EFR32_RAC_STATUS2_PREVSTATE1_SET(x, v)   do { (x) = (((x) & ~0xf) | ((EFR32_RAC_STATUS2_PREVSTATE1_##v) << 0)); } while(0)
  #define EFR32_RAC_STATUS2_PREVSTATE1_GET(x)      (((x) >> 0) & 0xf)
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_OFF         0x00000000
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_RXWARM      0x00000001
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_RXSEARCH    0x00000002
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_RXFRAME     0x00000003
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_RXPD        0x00000004
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_RX2RX       0x00000005
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_RXOVERFLOW  0x00000006
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_RX2TX       0x00000007
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_TXWARM      0x00000008
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_TX          0x00000009
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_TXPD        0x0000000a
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_TX2RX       0x0000000b
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_TX2TX       0x0000000c
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE1_SHUTDOWN    0x0000000d
  #define EFR32_RAC_STATUS2_PREVSTATE2_IDX         4
  #define EFR32_RAC_STATUS2_PREVSTATE2(v)          ((EFR32_RAC_STATUS2_PREVSTATE2_##v) << 4)
  #define EFR32_RAC_STATUS2_PREVSTATE2_SET(x, v)   do { (x) = (((x) & ~0xf0) | ((EFR32_RAC_STATUS2_PREVSTATE2_##v) << 4)); } while(0)
  #define EFR32_RAC_STATUS2_PREVSTATE2_GET(x)      (((x) >> 4) & 0xf)
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_OFF         0x00000000
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_RXWARM      0x00000001
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_RXSEARCH    0x00000002
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_RXFRAME     0x00000003
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_RXPD        0x00000004
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_RX2RX       0x00000005
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_RXOVERFLOW  0x00000006
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_RX2TX       0x00000007
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_TXWARM      0x00000008
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_TX          0x00000009
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_TXPD        0x0000000a
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_TX2RX       0x0000000b
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_TX2TX       0x0000000c
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE2_SHUTDOWN    0x0000000d
  #define EFR32_RAC_STATUS2_PREVSTATE3_IDX         8
  #define EFR32_RAC_STATUS2_PREVSTATE3(v)          ((EFR32_RAC_STATUS2_PREVSTATE3_##v) << 8)
  #define EFR32_RAC_STATUS2_PREVSTATE3_SET(x, v)   do { (x) = (((x) & ~0xf00) | ((EFR32_RAC_STATUS2_PREVSTATE3_##v) << 8)); } while(0)
  #define EFR32_RAC_STATUS2_PREVSTATE3_GET(x)      (((x) >> 8) & 0xf)
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_OFF         0x00000000
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_RXWARM      0x00000001
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_RXSEARCH    0x00000002
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_RXFRAME     0x00000003
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_RXPD        0x00000004
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_RX2RX       0x00000005
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_RXOVERFLOW  0x00000006
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_RX2TX       0x00000007
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_TXWARM      0x00000008
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_TX          0x00000009
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_TXPD        0x0000000a
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_TX2RX       0x0000000b
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_TX2TX       0x0000000c
/**  */
    #define EFR32_RAC_STATUS2_PREVSTATE3_SHUTDOWN    0x0000000d

#endif

