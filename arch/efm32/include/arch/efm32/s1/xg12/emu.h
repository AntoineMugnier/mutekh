/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs cdefs_use_reg_mask=1 cdefs_use_field_setval=1
*/

#ifndef _EFR32_EMU_BFGEN_DEFS_
#define _EFR32_EMU_BFGEN_DEFS_

#define EFR32_EMU_CTRL_ADDR                          0x00000000
#define EFR32_EMU_CTRL_MASK                          0x0003031f
  #define EFR32_EMU_CTRL_EM23VREG                  0x00000001
  #define EFR32_EMU_CTRL_EM2BLOCK                  0x00000002
  #define EFR32_EMU_CTRL_EM2BODDIS                 0x00000004
  #define EFR32_EMU_CTRL_EM01LD                    0x00000008
  #define EFR32_EMU_CTRL_EM23VSCALEAUTOWSEN        0x00000010
  #define EFR32_EMU_CTRL_EM23VSCALE(v)             ((EFR32_EMU_CTRL_EM23VSCALE_##v) << 8)
  #define EFR32_EMU_CTRL_EM23VSCALE_SET(x, v)      do { (x) = (((x) & ~0x300) | ((EFR32_EMU_CTRL_EM23VSCALE_##v) << 8)); } while(0)
  #define EFR32_EMU_CTRL_EM23VSCALE_SETVAL(x, v)   do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define EFR32_EMU_CTRL_EM23VSCALE_GET(x)         (((x) >> 8) & 0x3)
/**  */
    #define EFR32_EMU_CTRL_EM23VSCALE_VSCALE2        0x00000000
/**  */
    #define EFR32_EMU_CTRL_EM23VSCALE_VSCALE1        0x00000001
/**  */
    #define EFR32_EMU_CTRL_EM23VSCALE_VSCALE0        0x00000002
/**  */
    #define EFR32_EMU_CTRL_EM23VSCALE_RESV           0x00000003
  #define EFR32_EMU_CTRL_EM4HVSCALE(v)             ((EFR32_EMU_CTRL_EM4HVSCALE_##v) << 16)
  #define EFR32_EMU_CTRL_EM4HVSCALE_SET(x, v)      do { (x) = (((x) & ~0x30000) | ((EFR32_EMU_CTRL_EM4HVSCALE_##v) << 16)); } while(0)
  #define EFR32_EMU_CTRL_EM4HVSCALE_SETVAL(x, v)   do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_CTRL_EM4HVSCALE_GET(x)         (((x) >> 16) & 0x3)
/**  */
    #define EFR32_EMU_CTRL_EM4HVSCALE_VSCALE2        0x00000000
/**  */
    #define EFR32_EMU_CTRL_EM4HVSCALE_VSCALE1        0x00000001
/**  */
    #define EFR32_EMU_CTRL_EM4HVSCALE_VSCALE0        0x00000002
/**  */
    #define EFR32_EMU_CTRL_EM4HVSCALE_RESV           0x00000003

#define EFR32_EMU_STATUS_ADDR                        0x00000004
#define EFR32_EMU_STATUS_MASK                        0xf617011f
  #define EFR32_EMU_STATUS_VMONRDY                 0x00000001
  #define EFR32_EMU_STATUS_VMONAVDD                0x00000002
  #define EFR32_EMU_STATUS_VMONALTAVDD             0x00000004
  #define EFR32_EMU_STATUS_VMONDVDD                0x00000008
  #define EFR32_EMU_STATUS_VMONIO0                 0x00000010
  #define EFR32_EMU_STATUS_VMONFVDD                0x00000100
  #define EFR32_EMU_STATUS_VSCALE(v)               ((EFR32_EMU_STATUS_VSCALE_##v) << 16)
  #define EFR32_EMU_STATUS_VSCALE_SET(x, v)        do { (x) = (((x) & ~0x30000) | ((EFR32_EMU_STATUS_VSCALE_##v) << 16)); } while(0)
  #define EFR32_EMU_STATUS_VSCALE_SETVAL(x, v)     do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_STATUS_VSCALE_GET(x)           (((x) >> 16) & 0x3)
/**  */
    #define EFR32_EMU_STATUS_VSCALE_VSCALE2          0x00000000
/**  */
    #define EFR32_EMU_STATUS_VSCALE_VSCALE1          0x00000001
/**  */
    #define EFR32_EMU_STATUS_VSCALE_VSCALE0          0x00000002
/**  */
    #define EFR32_EMU_STATUS_VSCALE_RESV             0x00000003
  #define EFR32_EMU_STATUS_VSCALEBUSY              0x00040000
  #define EFR32_EMU_STATUS_EM4IORET                0x00100000
  #define EFR32_EMU_STATUS_RACACTIVE               0x02000000
  #define EFR32_EMU_STATUS_TEMPACTIVE              0x04000000
  #define EFR32_EMU_STATUS_CALACTIVE               0x10000000
  #define EFR32_EMU_STATUS_CALCOMPOUT              0x20000000
  #define EFR32_EMU_STATUS_BCLFRCOENS              0x40000000
  #define EFR32_EMU_STATUS_BCLFRCORDY              0x80000000

#define EFR32_EMU_LOCK_ADDR                          0x00000008
#define EFR32_EMU_LOCK_MASK                          0x0000ffff
  #define EFR32_EMU_LOCK_LOCKKEY(v)                ((EFR32_EMU_LOCK_LOCKKEY_##v) << 0)
  #define EFR32_EMU_LOCK_LOCKKEY_SET(x, v)         do { (x) = (((x) & ~0xffff) | ((EFR32_EMU_LOCK_LOCKKEY_##v) << 0)); } while(0)
  #define EFR32_EMU_LOCK_LOCKKEY_SETVAL(x, v)      do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_LOCK_LOCKKEY_GET(x)            (((x) >> 0) & 0xffff)
/**  */
    #define EFR32_EMU_LOCK_LOCKKEY_UNLOCKED          0x00000000
/**  */
    #define EFR32_EMU_LOCK_LOCKKEY_LOCKED            0x00000001

#define EFR32_EMU_RAM0CTRL_ADDR                      0x0000000c
#define EFR32_EMU_RAM0CTRL_MASK                      0xc000000f
  #define EFR32_EMU_RAM0CTRL_RAMPOWERDOWN(v)       ((EFR32_EMU_RAM0CTRL_RAMPOWERDOWN_##v) << 0)
  #define EFR32_EMU_RAM0CTRL_RAMPOWERDOWN_SET(x, v) do { (x) = (((x) & ~0xf) | ((EFR32_EMU_RAM0CTRL_RAMPOWERDOWN_##v) << 0)); } while(0)
  #define EFR32_EMU_RAM0CTRL_RAMPOWERDOWN_SETVAL(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_EMU_RAM0CTRL_RAMPOWERDOWN_GET(x)   (((x) >> 0) & 0xf)
/**  */
    #define EFR32_EMU_RAM0CTRL_RAMPOWERDOWN_NONE     0x00000000
/**  */
    #define EFR32_EMU_RAM0CTRL_RAMPOWERDOWN_BLK4     0x00000008
/**  */
    #define EFR32_EMU_RAM0CTRL_RAMPOWERDOWN_BLK3TO4  0x0000000c
/**  */
    #define EFR32_EMU_RAM0CTRL_RAMPOWERDOWN_BLK2TO4  0x0000000e
/**  */
    #define EFR32_EMU_RAM0CTRL_RAMPOWERDOWN_BLK1TO4  0x0000000f
  #define EFR32_EMU_RAM0CTRL_SEQRAMPOWERDOWN(v)    ((EFR32_EMU_RAM0CTRL_SEQRAMPOWERDOWN_##v) << 30)
  #define EFR32_EMU_RAM0CTRL_SEQRAMPOWERDOWN_SET(x, v) do { (x) = (((x) & ~0xc0000000) | ((EFR32_EMU_RAM0CTRL_SEQRAMPOWERDOWN_##v) << 30)); } while(0)
  #define EFR32_EMU_RAM0CTRL_SEQRAMPOWERDOWN_SETVAL(x, v) do { (x) = (((x) & ~0xc0000000) | ((v) << 30)); } while(0)
  #define EFR32_EMU_RAM0CTRL_SEQRAMPOWERDOWN_GET(x) (((x) >> 30) & 0x3)
/**  */
    #define EFR32_EMU_RAM0CTRL_SEQRAMPOWERDOWN_NONE  0x00000000
/**  */
    #define EFR32_EMU_RAM0CTRL_SEQRAMPOWERDOWN_SEQBLK1 0x00000002
/**  */
    #define EFR32_EMU_RAM0CTRL_SEQRAMPOWERDOWN_SEQBLK0TO1 0x00000003

#define EFR32_EMU_CMD_ADDR                           0x00000010
#define EFR32_EMU_CMD_MASK                           0x00000073
  #define EFR32_EMU_CMD_EM4UNLATCH                 0x00000001
  #define EFR32_EMU_CMD_LDREFEN                    0x00000002
  #define EFR32_EMU_CMD_EM01VSCALE0                0x00000010
  #define EFR32_EMU_CMD_EM01VSCALE1                0x00000020
  #define EFR32_EMU_CMD_EM01VSCALE2                0x00000040

#define EFR32_EMU_PERACTCONF_ADDR                    0x00000014
#define EFR32_EMU_PERACTCONF_MASK                    0x00000001
  #define EFR32_EMU_PERACTCONF_RACPER              0x00000001

#define EFR32_EMU_EM4CTRL_ADDR                       0x00000018
#define EFR32_EMU_EM4CTRL_MASK                       0x0003013f
  #define EFR32_EMU_EM4CTRL_EM4STATE               0x00000001
  #define EFR32_EMU_EM4CTRL_RETAINLFRCO            0x00000002
  #define EFR32_EMU_EM4CTRL_RETAINLFXO             0x00000004
  #define EFR32_EMU_EM4CTRL_RETAINULFRCO           0x00000008
  #define EFR32_EMU_EM4CTRL_EM4IORETMODE(v)        ((EFR32_EMU_EM4CTRL_EM4IORETMODE_##v) << 4)
  #define EFR32_EMU_EM4CTRL_EM4IORETMODE_SET(x, v) do { (x) = (((x) & ~0x30) | ((EFR32_EMU_EM4CTRL_EM4IORETMODE_##v) << 4)); } while(0)
  #define EFR32_EMU_EM4CTRL_EM4IORETMODE_SETVAL(x, v) do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define EFR32_EMU_EM4CTRL_EM4IORETMODE_GET(x)    (((x) >> 4) & 0x3)
/**  */
    #define EFR32_EMU_EM4CTRL_EM4IORETMODE_DISABLE   0x00000000
/**  */
    #define EFR32_EMU_EM4CTRL_EM4IORETMODE_EM4EXIT   0x00000001
/**  */
    #define EFR32_EMU_EM4CTRL_EM4IORETMODE_SWUNLATCH 0x00000002
  #define EFR32_EMU_EM4CTRL_EM4ENTRY_CMU_HS_TO_DIS 0x00000100
  #define EFR32_EMU_EM4CTRL_EM4ENTRY(v)            ((v) << 16)
  #define EFR32_EMU_EM4CTRL_EM4ENTRY_SET(x, v)     do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_EM4CTRL_EM4ENTRY_GET(x)        (((x) >> 16) & 0x3)

#define EFR32_EMU_TEMPLIMITS_ADDR                    0x0000001c
#define EFR32_EMU_TEMPLIMITS_MASK                    0x0001ffff
  #define EFR32_EMU_TEMPLIMITS_TEMPLOW(v)          ((v) << 0)
  #define EFR32_EMU_TEMPLIMITS_TEMPLOW_SET(x, v)   do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TEMPLIMITS_TEMPLOW_GET(x)      (((x) >> 0) & 0xff)
  #define EFR32_EMU_TEMPLIMITS_TEMPHIGH(v)         ((v) << 8)
  #define EFR32_EMU_TEMPLIMITS_TEMPHIGH_SET(x, v)  do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TEMPLIMITS_TEMPHIGH_GET(x)     (((x) >> 8) & 0xff)
  #define EFR32_EMU_TEMPLIMITS_EM4WUEN             0x00010000

#define EFR32_EMU_TEMP_ADDR                          0x00000020
#define EFR32_EMU_TEMP_MASK                          0x000000ff
  #define EFR32_EMU_TEMP_TEMP(v)                   ((v) << 0)
  #define EFR32_EMU_TEMP_TEMP_SET(x, v)            do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TEMP_TEMP_GET(x)               (((x) >> 0) & 0xff)

#define EFR32_EMU_IF_ADDR                            0x00000024
#define EFR32_EMU_IF_MASK                            0xe31fc0ff
  #define EFR32_EMU_IF_VMONAVDDFALL                0x00000001
  #define EFR32_EMU_IF_VMONAVDDRISE                0x00000002
  #define EFR32_EMU_IF_VMONALTAVDDFALL             0x00000004
  #define EFR32_EMU_IF_VMONALTAVDDRISE             0x00000008
  #define EFR32_EMU_IF_VMONDVDDFALL                0x00000010
  #define EFR32_EMU_IF_VMONDVDDRISE                0x00000020
  #define EFR32_EMU_IF_VMONIO0FALL                 0x00000040
  #define EFR32_EMU_IF_VMONIO0RISE                 0x00000080
  #define EFR32_EMU_IF_VMONFVDDFALL                0x00004000
  #define EFR32_EMU_IF_VMONFVDDRISE                0x00008000
  #define EFR32_EMU_IF_PFETOVERCURRENTLIMIT        0x00010000
  #define EFR32_EMU_IF_NFETOVERCURRENTLIMIT        0x00020000
  #define EFR32_EMU_IF_DCDCLPRUNNING               0x00040000
  #define EFR32_EMU_IF_DCDCLNRUNNING               0x00080000
  #define EFR32_EMU_IF_DCDCINBYPASS                0x00100000
  #define EFR32_EMU_IF_EM23WAKEUP                  0x01000000
  #define EFR32_EMU_IF_VSCALEDONE                  0x02000000
  #define EFR32_EMU_IF_TEMP                        0x20000000
  #define EFR32_EMU_IF_TEMPLOW                     0x40000000
  #define EFR32_EMU_IF_TEMPHIGH                    0x80000000

#define EFR32_EMU_IFS_ADDR                           0x00000028
#define EFR32_EMU_IFS_MASK                           0xe31fc0ff
  #define EFR32_EMU_IFS_VMONAVDDFALL               0x00000001
  #define EFR32_EMU_IFS_VMONAVDDRISE               0x00000002
  #define EFR32_EMU_IFS_VMONALTAVDDFALL            0x00000004
  #define EFR32_EMU_IFS_VMONALTAVDDRISE            0x00000008
  #define EFR32_EMU_IFS_VMONDVDDFALL               0x00000010
  #define EFR32_EMU_IFS_VMONDVDDRISE               0x00000020
  #define EFR32_EMU_IFS_VMONIO0FALL                0x00000040
  #define EFR32_EMU_IFS_VMONIO0RISE                0x00000080
  #define EFR32_EMU_IFS_VMONFVDDFALL               0x00004000
  #define EFR32_EMU_IFS_VMONFVDDRISE               0x00008000
  #define EFR32_EMU_IFS_PFETOVERCURRENTLIMIT       0x00010000
  #define EFR32_EMU_IFS_NFETOVERCURRENTLIMIT       0x00020000
  #define EFR32_EMU_IFS_DCDCLPRUNNING              0x00040000
  #define EFR32_EMU_IFS_DCDCLNRUNNING              0x00080000
  #define EFR32_EMU_IFS_DCDCINBYPASS               0x00100000
  #define EFR32_EMU_IFS_EM23WAKEUP                 0x01000000
  #define EFR32_EMU_IFS_VSCALEDONE                 0x02000000
  #define EFR32_EMU_IFS_TEMP                       0x20000000
  #define EFR32_EMU_IFS_TEMPLOW                    0x40000000
  #define EFR32_EMU_IFS_TEMPHIGH                   0x80000000

#define EFR32_EMU_IFC_ADDR                           0x0000002c
#define EFR32_EMU_IFC_MASK                           0xe31fc0ff
  #define EFR32_EMU_IFC_VMONAVDDFALL               0x00000001
  #define EFR32_EMU_IFC_VMONAVDDRISE               0x00000002
  #define EFR32_EMU_IFC_VMONALTAVDDFALL            0x00000004
  #define EFR32_EMU_IFC_VMONALTAVDDRISE            0x00000008
  #define EFR32_EMU_IFC_VMONDVDDFALL               0x00000010
  #define EFR32_EMU_IFC_VMONDVDDRISE               0x00000020
  #define EFR32_EMU_IFC_VMONIO0FALL                0x00000040
  #define EFR32_EMU_IFC_VMONIO0RISE                0x00000080
  #define EFR32_EMU_IFC_VMONFVDDFALL               0x00004000
  #define EFR32_EMU_IFC_VMONFVDDRISE               0x00008000
  #define EFR32_EMU_IFC_PFETOVERCURRENTLIMIT       0x00010000
  #define EFR32_EMU_IFC_NFETOVERCURRENTLIMIT       0x00020000
  #define EFR32_EMU_IFC_DCDCLPRUNNING              0x00040000
  #define EFR32_EMU_IFC_DCDCLNRUNNING              0x00080000
  #define EFR32_EMU_IFC_DCDCINBYPASS               0x00100000
  #define EFR32_EMU_IFC_EM23WAKEUP                 0x01000000
  #define EFR32_EMU_IFC_VSCALEDONE                 0x02000000
  #define EFR32_EMU_IFC_TEMP                       0x20000000
  #define EFR32_EMU_IFC_TEMPLOW                    0x40000000
  #define EFR32_EMU_IFC_TEMPHIGH                   0x80000000

#define EFR32_EMU_IEN_ADDR                           0x00000030
#define EFR32_EMU_IEN_MASK                           0xe31fc0ff
  #define EFR32_EMU_IEN_VMONAVDDFALL               0x00000001
  #define EFR32_EMU_IEN_VMONAVDDRISE               0x00000002
  #define EFR32_EMU_IEN_VMONALTAVDDFALL            0x00000004
  #define EFR32_EMU_IEN_VMONALTAVDDRISE            0x00000008
  #define EFR32_EMU_IEN_VMONDVDDFALL               0x00000010
  #define EFR32_EMU_IEN_VMONDVDDRISE               0x00000020
  #define EFR32_EMU_IEN_VMONIO0FALL                0x00000040
  #define EFR32_EMU_IEN_VMONIO0RISE                0x00000080
  #define EFR32_EMU_IEN_VMONFVDDFALL               0x00004000
  #define EFR32_EMU_IEN_VMONFVDDRISE               0x00008000
  #define EFR32_EMU_IEN_PFETOVERCURRENTLIMIT       0x00010000
  #define EFR32_EMU_IEN_NFETOVERCURRENTLIMIT       0x00020000
  #define EFR32_EMU_IEN_DCDCLPRUNNING              0x00040000
  #define EFR32_EMU_IEN_DCDCLNRUNNING              0x00080000
  #define EFR32_EMU_IEN_DCDCINBYPASS               0x00100000
  #define EFR32_EMU_IEN_EM23WAKEUP                 0x01000000
  #define EFR32_EMU_IEN_VSCALEDONE                 0x02000000
  #define EFR32_EMU_IEN_TEMP                       0x20000000
  #define EFR32_EMU_IEN_TEMPLOW                    0x40000000
  #define EFR32_EMU_IEN_TEMPHIGH                   0x80000000

#define EFR32_EMU_PWRLOCK_ADDR                       0x00000034
#define EFR32_EMU_PWRLOCK_MASK                       0x0000ffff
  #define EFR32_EMU_PWRLOCK_LOCKKEY(v)             ((EFR32_EMU_PWRLOCK_LOCKKEY_##v) << 0)
  #define EFR32_EMU_PWRLOCK_LOCKKEY_SET(x, v)      do { (x) = (((x) & ~0xffff) | ((EFR32_EMU_PWRLOCK_LOCKKEY_##v) << 0)); } while(0)
  #define EFR32_EMU_PWRLOCK_LOCKKEY_SETVAL(x, v)   do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_PWRLOCK_LOCKKEY_GET(x)         (((x) >> 0) & 0xffff)
/**  */
    #define EFR32_EMU_PWRLOCK_LOCKKEY_UNLOCKED       0x00000000
/**  */
    #define EFR32_EMU_PWRLOCK_LOCKKEY_LOCKED         0x00000001

#define EFR32_EMU_PWRCFG_ADDR                        0x00000038
#define EFR32_EMU_PWRCFG_MASK                        0x0000000f
  #define EFR32_EMU_PWRCFG_PWRCFG(v)               ((EFR32_EMU_PWRCFG_PWRCFG_##v) << 0)
  #define EFR32_EMU_PWRCFG_PWRCFG_SET(x, v)        do { (x) = (((x) & ~0xf) | ((EFR32_EMU_PWRCFG_PWRCFG_##v) << 0)); } while(0)
  #define EFR32_EMU_PWRCFG_PWRCFG_SETVAL(x, v)     do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_EMU_PWRCFG_PWRCFG_GET(x)           (((x) >> 0) & 0xf)
/**  */
    #define EFR32_EMU_PWRCFG_PWRCFG_UNCONFIGURED     0x00000000
/**  */
    #define EFR32_EMU_PWRCFG_PWRCFG_NODCDC           0x00000001
/**  */
    #define EFR32_EMU_PWRCFG_PWRCFG_DCDCTODVDD       0x00000002
/**  */
    #define EFR32_EMU_PWRCFG_PWRCFG_SOFTWARE         0x0000000f

#define EFR32_EMU_PWRCTRL_ADDR                       0x0000003c
#define EFR32_EMU_PWRCTRL_MASK                       0x00001760
  #define EFR32_EMU_PWRCTRL_ANASW                  0x00000020
  #define EFR32_EMU_PWRCTRL_REGDIS                 0x00000040
  #define EFR32_EMU_PWRCTRL_DCDCPWRSEL             0x00000100
  #define EFR32_EMU_PWRCTRL_DCDCVREGSEL            0x00000200
  #define EFR32_EMU_PWRCTRL_REGPWRSEL              0x00000400
  #define EFR32_EMU_PWRCTRL_DVDDBODDIS             0x00001000

#define EFR32_EMU_DCDCCTRL_ADDR                      0x00000040
#define EFR32_EMU_DCDCCTRL_MASK                      0x000001f3
  #define EFR32_EMU_DCDCCTRL_DCDCMODE(v)           ((EFR32_EMU_DCDCCTRL_DCDCMODE_##v) << 0)
  #define EFR32_EMU_DCDCCTRL_DCDCMODE_SET(x, v)    do { (x) = (((x) & ~0x3) | ((EFR32_EMU_DCDCCTRL_DCDCMODE_##v) << 0)); } while(0)
  #define EFR32_EMU_DCDCCTRL_DCDCMODE_SETVAL(x, v) do { (x) = (((x) & ~0x3) | ((v) << 0)); } while(0)
  #define EFR32_EMU_DCDCCTRL_DCDCMODE_GET(x)       (((x) >> 0) & 0x3)
/**  */
    #define EFR32_EMU_DCDCCTRL_DCDCMODE_BYPASS       0x00000000
/**  */
    #define EFR32_EMU_DCDCCTRL_DCDCMODE_LOWNOISE     0x00000001
/**  */
    #define EFR32_EMU_DCDCCTRL_DCDCMODE_LOWPOWER     0x00000002
/**  */
    #define EFR32_EMU_DCDCCTRL_DCDCMODE_OFF          0x00000003
  #define EFR32_EMU_DCDCCTRL_DCDCMODEEM23          0x00000010
  #define EFR32_EMU_DCDCCTRL_DCDCMODEEM4           0x00000020
  #define EFR32_EMU_DCDCCTRL_LPSTANDBYDIS          0x00000040
  #define EFR32_EMU_DCDCCTRL_LNSTANDBY             0x00000080
  #define EFR32_EMU_DCDCCTRL_LOWPOWERSKIP          0x00000100

#define EFR32_EMU_DCDCSMCTRL_ADDR                    0x00000044
#define EFR32_EMU_DCDCSMCTRL_MASK                    0x00000001
  #define EFR32_EMU_DCDCSMCTRL_LPCMPWAITDIS        0x00000001

#define EFR32_EMU_DCDCSWCTRL_ADDR                    0x00000048
#define EFR32_EMU_DCDCSWCTRL_MASK                    0x0003bffc
  #define EFR32_EMU_DCDCSWCTRL_SWDAMPEN            0x00000004
  #define EFR32_EMU_DCDCSWCTRL_SWNFETOFF           0x00000008
  #define EFR32_EMU_DCDCSWCTRL_PWMDTIME(v)         ((v) << 4)
  #define EFR32_EMU_DCDCSWCTRL_PWMDTIME_SET(x, v)  do { (x) = (((x) & ~0x3ff0) | ((v) << 4)); } while(0)
  #define EFR32_EMU_DCDCSWCTRL_PWMDTIME_GET(x)     (((x) >> 4) & 0x3ff)
  #define EFR32_EMU_DCDCSWCTRL_PWMMIND             0x00008000
  #define EFR32_EMU_DCDCSWCTRL_PWMMAXD(v)          ((v) << 16)
  #define EFR32_EMU_DCDCSWCTRL_PWMMAXD_SET(x, v)   do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_DCDCSWCTRL_PWMMAXD_GET(x)      (((x) >> 16) & 0x3)

#define EFR32_EMU_DCDCMISCCTRL_ADDR                  0x0000004c
#define EFR32_EMU_DCDCMISCCTRL_MASK                  0x377fff3f
  #define EFR32_EMU_DCDCMISCCTRL_LNFORCECCM        0x00000001
  #define EFR32_EMU_DCDCMISCCTRL_LPCMPHYSDIS       0x00000002
  #define EFR32_EMU_DCDCMISCCTRL_LPCMPHYSHI        0x00000004
  #define EFR32_EMU_DCDCMISCCTRL_ZDETINTONLY       0x00000008
  #define EFR32_EMU_DCDCMISCCTRL_CLIMINTONLY       0x00000010
  #define EFR32_EMU_DCDCMISCCTRL_LNFORCECCMIMM     0x00000020
  #define EFR32_EMU_DCDCMISCCTRL_PFETCNT(v)        ((v) << 8)
  #define EFR32_EMU_DCDCMISCCTRL_PFETCNT_SET(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_DCDCMISCCTRL_PFETCNT_GET(x)    (((x) >> 8) & 0xf)
  #define EFR32_EMU_DCDCMISCCTRL_NFETCNT(v)        ((v) << 12)
  #define EFR32_EMU_DCDCMISCCTRL_NFETCNT_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_DCDCMISCCTRL_NFETCNT_GET(x)    (((x) >> 12) & 0xf)
  #define EFR32_EMU_DCDCMISCCTRL_BYPLIMSEL(v)      ((v) << 16)
  #define EFR32_EMU_DCDCMISCCTRL_BYPLIMSEL_SET(x, v) do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_DCDCMISCCTRL_BYPLIMSEL_GET(x)  (((x) >> 16) & 0xf)
  #define EFR32_EMU_DCDCMISCCTRL_LPCLIMILIMSEL(v)  ((v) << 20)
  #define EFR32_EMU_DCDCMISCCTRL_LPCLIMILIMSEL_SET(x, v) do { (x) = (((x) & ~0x700000) | ((v) << 20)); } while(0)
  #define EFR32_EMU_DCDCMISCCTRL_LPCLIMILIMSEL_GET(x) (((x) >> 20) & 0x7)
  #define EFR32_EMU_DCDCMISCCTRL_LNCLIMILIMSEL(v)  ((v) << 24)
  #define EFR32_EMU_DCDCMISCCTRL_LNCLIMILIMSEL_SET(x, v) do { (x) = (((x) & ~0x7000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_DCDCMISCCTRL_LNCLIMILIMSEL_GET(x) (((x) >> 24) & 0x7)
  #define EFR32_EMU_DCDCMISCCTRL_LPCMPBIASEM234H(v) ((EFR32_EMU_DCDCMISCCTRL_LPCMPBIASEM234H_##v) << 28)
  #define EFR32_EMU_DCDCMISCCTRL_LPCMPBIASEM234H_SET(x, v) do { (x) = (((x) & ~0x30000000) | ((EFR32_EMU_DCDCMISCCTRL_LPCMPBIASEM234H_##v) << 28)); } while(0)
  #define EFR32_EMU_DCDCMISCCTRL_LPCMPBIASEM234H_SETVAL(x, v) do { (x) = (((x) & ~0x30000000) | ((v) << 28)); } while(0)
  #define EFR32_EMU_DCDCMISCCTRL_LPCMPBIASEM234H_GET(x) (((x) >> 28) & 0x3)
/**  */
    #define EFR32_EMU_DCDCMISCCTRL_LPCMPBIASEM234H_BIAS0 0x00000000
/**  */
    #define EFR32_EMU_DCDCMISCCTRL_LPCMPBIASEM234H_BIAS1 0x00000001
/**  */
    #define EFR32_EMU_DCDCMISCCTRL_LPCMPBIASEM234H_BIAS2 0x00000002
/**  */
    #define EFR32_EMU_DCDCMISCCTRL_LPCMPBIASEM234H_BIAS3 0x00000003

#define EFR32_EMU_DCDCZDETCTRL_ADDR                  0x00000050
#define EFR32_EMU_DCDCZDETCTRL_MASK                  0x00000371
  #define EFR32_EMU_DCDCZDETCTRL_ZDETDIS           0x00000001
  #define EFR32_EMU_DCDCZDETCTRL_ZDETILIMSEL(v)    ((v) << 4)
  #define EFR32_EMU_DCDCZDETCTRL_ZDETILIMSEL_SET(x, v) do { (x) = (((x) & ~0x70) | ((v) << 4)); } while(0)
  #define EFR32_EMU_DCDCZDETCTRL_ZDETILIMSEL_GET(x) (((x) >> 4) & 0x7)
  #define EFR32_EMU_DCDCZDETCTRL_ZDETBLANKDLY(v)   ((v) << 8)
  #define EFR32_EMU_DCDCZDETCTRL_ZDETBLANKDLY_SET(x, v) do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define EFR32_EMU_DCDCZDETCTRL_ZDETBLANKDLY_GET(x) (((x) >> 8) & 0x3)

#define EFR32_EMU_DCDCCLIMCTRL_ADDR                  0x00000054
#define EFR32_EMU_DCDCCLIMCTRL_MASK                  0x00002301
  #define EFR32_EMU_DCDCCLIMCTRL_CLIMDIS           0x00000001
  #define EFR32_EMU_DCDCCLIMCTRL_CLIMBLANKDLY(v)   ((v) << 8)
  #define EFR32_EMU_DCDCCLIMCTRL_CLIMBLANKDLY_SET(x, v) do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define EFR32_EMU_DCDCCLIMCTRL_CLIMBLANKDLY_GET(x) (((x) >> 8) & 0x3)
  #define EFR32_EMU_DCDCCLIMCTRL_BYPLIMEN          0x00002000

#define EFR32_EMU_DCDCLNCOMPCTRL_ADDR                0x00000058
#define EFR32_EMU_DCDCLNCOMPCTRL_MASK                0xf730f1f7
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENR1(v)     ((v) << 0)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENR1_SET(x, v) do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENR1_GET(x) (((x) >> 0) & 0x7)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENR2(v)     ((v) << 4)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENR2_SET(x, v) do { (x) = (((x) & ~0x1f0) | ((v) << 4)); } while(0)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENR2_GET(x) (((x) >> 4) & 0x1f)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENR3(v)     ((v) << 12)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENR3_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENR3_GET(x) (((x) >> 12) & 0xf)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENC1(v)     ((v) << 20)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENC1_SET(x, v) do { (x) = (((x) & ~0x300000) | ((v) << 20)); } while(0)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENC1_GET(x) (((x) >> 20) & 0x3)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENC2(v)     ((v) << 24)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENC2_SET(x, v) do { (x) = (((x) & ~0x7000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENC2_GET(x) (((x) >> 24) & 0x7)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENC3(v)     ((v) << 28)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENC3_SET(x, v) do { (x) = (((x) & ~0xf0000000) | ((v) << 28)); } while(0)
  #define EFR32_EMU_DCDCLNCOMPCTRL_COMPENC3_GET(x) (((x) >> 28) & 0xf)

#define EFR32_EMU_DCDCLNVCTRL_ADDR                   0x0000005c
#define EFR32_EMU_DCDCLNVCTRL_MASK                   0x00007f02
  #define EFR32_EMU_DCDCLNVCTRL_LNATT              0x00000002
  #define EFR32_EMU_DCDCLNVCTRL_LNVREF(v)          ((v) << 8)
  #define EFR32_EMU_DCDCLNVCTRL_LNVREF_SET(x, v)   do { (x) = (((x) & ~0x7f00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_DCDCLNVCTRL_LNVREF_GET(x)      (((x) >> 8) & 0x7f)

#define EFR32_EMU_DCDCTIMING_ADDR                    0x00000060
#define EFR32_EMU_DCDCTIMING_MASK                    0x7ff1ffff
  #define EFR32_EMU_DCDCTIMING_LPINITWAIT(v)       ((v) << 0)
  #define EFR32_EMU_DCDCTIMING_LPINITWAIT_SET(x, v) do { (x) = (((x) & ~0x1ff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_DCDCTIMING_LPINITWAIT_GET(x)   (((x) >> 0) & 0x1ff)
  #define EFR32_EMU_DCDCTIMING_LPCMPBLANKWAIT(v)   ((v) << 9)
  #define EFR32_EMU_DCDCTIMING_LPCMPBLANKWAIT_SET(x, v) do { (x) = (((x) & ~0x600) | ((v) << 9)); } while(0)
  #define EFR32_EMU_DCDCTIMING_LPCMPBLANKWAIT_GET(x) (((x) >> 9) & 0x3)
  #define EFR32_EMU_DCDCTIMING_COMPENPRCHGEN       0x00000800
  #define EFR32_EMU_DCDCTIMING_LNWAIT(v)           ((v) << 12)
  #define EFR32_EMU_DCDCTIMING_LNWAIT_SET(x, v)    do { (x) = (((x) & ~0x1f000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_DCDCTIMING_LNWAIT_GET(x)       (((x) >> 12) & 0x1f)
  #define EFR32_EMU_DCDCTIMING_BYPWAIT(v)          ((v) << 20)
  #define EFR32_EMU_DCDCTIMING_BYPWAIT_SET(x, v)   do { (x) = (((x) & ~0xff00000) | ((v) << 20)); } while(0)
  #define EFR32_EMU_DCDCTIMING_BYPWAIT_GET(x)      (((x) >> 20) & 0xff)
  #define EFR32_EMU_DCDCTIMING_PWMRETIME           0x10000000
  #define EFR32_EMU_DCDCTIMING_DUTYSCALE(v)        ((v) << 29)
  #define EFR32_EMU_DCDCTIMING_DUTYSCALE_SET(x, v) do { (x) = (((x) & ~0x60000000) | ((v) << 29)); } while(0)
  #define EFR32_EMU_DCDCTIMING_DUTYSCALE_GET(x)    (((x) >> 29) & 0x3)

#define EFR32_EMU_DCDCLPVCTRL_ADDR                   0x00000064
#define EFR32_EMU_DCDCLPVCTRL_MASK                   0x000001ff
  #define EFR32_EMU_DCDCLPVCTRL_LPATT              0x00000001
  #define EFR32_EMU_DCDCLPVCTRL_LPVREF(v)          ((v) << 1)
  #define EFR32_EMU_DCDCLPVCTRL_LPVREF_SET(x, v)   do { (x) = (((x) & ~0x1fe) | ((v) << 1)); } while(0)
  #define EFR32_EMU_DCDCLPVCTRL_LPVREF_GET(x)      (((x) >> 1) & 0xff)

#define EFR32_EMU_DCDCLPFREQCTRL_ADDR                0x00000068
#define EFR32_EMU_DCDCLPFREQCTRL_MASK                0x00000003
  #define EFR32_EMU_DCDCLPFREQCTRL_LPOSCDIV(v)     ((EFR32_EMU_DCDCLPFREQCTRL_LPOSCDIV_##v) << 0)
  #define EFR32_EMU_DCDCLPFREQCTRL_LPOSCDIV_SET(x, v) do { (x) = (((x) & ~0x3) | ((EFR32_EMU_DCDCLPFREQCTRL_LPOSCDIV_##v) << 0)); } while(0)
  #define EFR32_EMU_DCDCLPFREQCTRL_LPOSCDIV_SETVAL(x, v) do { (x) = (((x) & ~0x3) | ((v) << 0)); } while(0)
  #define EFR32_EMU_DCDCLPFREQCTRL_LPOSCDIV_GET(x) (((x) >> 0) & 0x3)
/**  */
    #define EFR32_EMU_DCDCLPFREQCTRL_LPOSCDIV_DIV1   0x00000000
/**  */
    #define EFR32_EMU_DCDCLPFREQCTRL_LPOSCDIV_DIV2   0x00000001
/**  */
    #define EFR32_EMU_DCDCLPFREQCTRL_LPOSCDIV_DIV4   0x00000002
/**  */
    #define EFR32_EMU_DCDCLPFREQCTRL_LPOSCDIV_DIV8   0x00000003

#define EFR32_EMU_DCDCLPCTRL_ADDR                    0x0000006c
#define EFR32_EMU_DCDCLPCTRL_MASK                    0x0703f000
  #define EFR32_EMU_DCDCLPCTRL_LPCMPHYSSELEM234H(v) ((v) << 12)
  #define EFR32_EMU_DCDCLPCTRL_LPCMPHYSSELEM234H_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_DCDCLPCTRL_LPCMPHYSSELEM234H_GET(x) (((x) >> 12) & 0xf)
  #define EFR32_EMU_DCDCLPCTRL_LPPUMPDIS           0x00010000
  #define EFR32_EMU_DCDCLPCTRL_LPOSCLSSEL          0x00020000
  #define EFR32_EMU_DCDCLPCTRL_LPVREFDUTYEN        0x01000000
  #define EFR32_EMU_DCDCLPCTRL_LPBLANK(v)          ((v) << 25)
  #define EFR32_EMU_DCDCLPCTRL_LPBLANK_SET(x, v)   do { (x) = (((x) & ~0x6000000) | ((v) << 25)); } while(0)
  #define EFR32_EMU_DCDCLPCTRL_LPBLANK_GET(x)      (((x) >> 25) & 0x3)

#define EFR32_EMU_DCDCLNFREQCTRL_ADDR                0x00000070
#define EFR32_EMU_DCDCLNFREQCTRL_MASK                0x1f000007
  #define EFR32_EMU_DCDCLNFREQCTRL_RCOBAND(v)      ((v) << 0)
  #define EFR32_EMU_DCDCLNFREQCTRL_RCOBAND_SET(x, v) do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFR32_EMU_DCDCLNFREQCTRL_RCOBAND_GET(x)  (((x) >> 0) & 0x7)
  #define EFR32_EMU_DCDCLNFREQCTRL_RCOTRIM(v)      ((v) << 24)
  #define EFR32_EMU_DCDCLNFREQCTRL_RCOTRIM_SET(x, v) do { (x) = (((x) & ~0x1f000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_DCDCLNFREQCTRL_RCOTRIM_GET(x)  (((x) >> 24) & 0x1f)

#define EFR32_EMU_DCDCRCOSC_ADDR                     0x00000074
#define EFR32_EMU_DCDCRCOSC_MASK                     0x37f30201
  #define EFR32_EMU_DCDCRCOSC_RCOSYNC              0x00000001
  #define EFR32_EMU_DCDCRCOSC_RCOHOPEN             0x00000200
  #define EFR32_EMU_DCDCRCOSC_RCOHOPPERIOD(v)      ((EFR32_EMU_DCDCRCOSC_RCOHOPPERIOD_##v) << 16)
  #define EFR32_EMU_DCDCRCOSC_RCOHOPPERIOD_SET(x, v) do { (x) = (((x) & ~0x30000) | ((EFR32_EMU_DCDCRCOSC_RCOHOPPERIOD_##v) << 16)); } while(0)
  #define EFR32_EMU_DCDCRCOSC_RCOHOPPERIOD_SETVAL(x, v) do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_DCDCRCOSC_RCOHOPPERIOD_GET(x)  (((x) >> 16) & 0x3)
/**  */
    #define EFR32_EMU_DCDCRCOSC_RCOHOPPERIOD_HOP1    0x00000000
/**  */
    #define EFR32_EMU_DCDCRCOSC_RCOHOPPERIOD_HOP2    0x00000001
/**  */
    #define EFR32_EMU_DCDCRCOSC_RCOHOPPERIOD_HOP4    0x00000002
/**  */
    #define EFR32_EMU_DCDCRCOSC_RCOHOPPERIOD_HOP8    0x00000003
  #define EFR32_EMU_DCDCRCOSC_RCOHOP(v)            ((v) << 20)
  #define EFR32_EMU_DCDCRCOSC_RCOHOP_SET(x, v)     do { (x) = (((x) & ~0x7f00000) | ((v) << 20)); } while(0)
  #define EFR32_EMU_DCDCRCOSC_RCOHOP_GET(x)        (((x) >> 20) & 0x7f)
  #define EFR32_EMU_DCDCRCOSC_RCOSPREAD(v)         ((v) << 28)
  #define EFR32_EMU_DCDCRCOSC_RCOSPREAD_SET(x, v)  do { (x) = (((x) & ~0x30000000) | ((v) << 28)); } while(0)
  #define EFR32_EMU_DCDCRCOSC_RCOSPREAD_GET(x)     (((x) >> 28) & 0x3)

#define EFR32_EMU_DCDCSYNC_ADDR                      0x00000078
#define EFR32_EMU_DCDCSYNC_MASK                      0x00000001
  #define EFR32_EMU_DCDCSYNC_DCDCCTRLBUSY          0x00000001

#define EFR32_EMU_DCDCSTATUS_ADDR                    0x0000007c
#define EFR32_EMU_DCDCSTATUS_MASK                    0x0003ffff
  #define EFR32_EMU_DCDCSTATUS_RCOCALOUT           0x00000001
  #define EFR32_EMU_DCDCSTATUS_LPCMPOUT            0x00000002
  #define EFR32_EMU_DCDCSTATUS_LPTESTCLK           0x00000004
  #define EFR32_EMU_DCDCSTATUS_LPTESTSTATE(v)      ((v) << 3)
  #define EFR32_EMU_DCDCSTATUS_LPTESTSTATE_SET(x, v) do { (x) = (((x) & ~0x18) | ((v) << 3)); } while(0)
  #define EFR32_EMU_DCDCSTATUS_LPTESTSTATE_GET(x)  (((x) >> 3) & 0x3)
  #define EFR32_EMU_DCDCSTATUS_DCDCSMSTATE(v)      ((v) << 5)
  #define EFR32_EMU_DCDCSTATUS_DCDCSMSTATE_SET(x, v) do { (x) = (((x) & ~0xfe0) | ((v) << 5)); } while(0)
  #define EFR32_EMU_DCDCSTATUS_DCDCSMSTATE_GET(x)  (((x) >> 5) & 0x7f)
  #define EFR32_EMU_DCDCSTATUS_PFETOVERCUR         0x00001000
  #define EFR32_EMU_DCDCSTATUS_NFETOVERCUR         0x00002000
  #define EFR32_EMU_DCDCSTATUS_LPTESTCMPRAW        0x00004000
  #define EFR32_EMU_DCDCSTATUS_LPRUNNING           0x00008000
  #define EFR32_EMU_DCDCSTATUS_LNRUNNING           0x00010000
  #define EFR32_EMU_DCDCSTATUS_INBYPASS            0x00020000

#define EFR32_EMU_DCDCTRIM0_ADDR                     0x00000080
#define EFR32_EMU_DCDCTRIM0_MASK                     0x007ffff3
  #define EFR32_EMU_DCDCTRIM0_PWMSKIP(v)           ((v) << 0)
  #define EFR32_EMU_DCDCTRIM0_PWMSKIP_SET(x, v)    do { (x) = (((x) & ~0x3) | ((v) << 0)); } while(0)
  #define EFR32_EMU_DCDCTRIM0_PWMSKIP_GET(x)       (((x) >> 0) & 0x3)
  #define EFR32_EMU_DCDCTRIM0_RCORAMP(v)           ((v) << 4)
  #define EFR32_EMU_DCDCTRIM0_RCORAMP_SET(x, v)    do { (x) = (((x) & ~0x70) | ((v) << 4)); } while(0)
  #define EFR32_EMU_DCDCTRIM0_RCORAMP_GET(x)       (((x) >> 4) & 0x7)
  #define EFR32_EMU_DCDCTRIM0_CLIMVOSTRIM(v)       ((v) << 7)
  #define EFR32_EMU_DCDCTRIM0_CLIMVOSTRIM_SET(x, v) do { (x) = (((x) & ~0x380) | ((v) << 7)); } while(0)
  #define EFR32_EMU_DCDCTRIM0_CLIMVOSTRIM_GET(x)   (((x) >> 7) & 0x7)
  #define EFR32_EMU_DCDCTRIM0_ZDETVOSTRIM(v)       ((v) << 10)
  #define EFR32_EMU_DCDCTRIM0_ZDETVOSTRIM_SET(x, v) do { (x) = (((x) & ~0x7c00) | ((v) << 10)); } while(0)
  #define EFR32_EMU_DCDCTRIM0_ZDETVOSTRIM_GET(x)   (((x) >> 10) & 0x1f)
  #define EFR32_EMU_DCDCTRIM0_LPOSCTRIM(v)         ((v) << 15)
  #define EFR32_EMU_DCDCTRIM0_LPOSCTRIM_SET(x, v)  do { (x) = (((x) & ~0x78000) | ((v) << 15)); } while(0)
  #define EFR32_EMU_DCDCTRIM0_LPOSCTRIM_GET(x)     (((x) >> 15) & 0xf)
  #define EFR32_EMU_DCDCTRIM0_CLIMBIASTRIM(v)      ((v) << 19)
  #define EFR32_EMU_DCDCTRIM0_CLIMBIASTRIM_SET(x, v) do { (x) = (((x) & ~0x780000) | ((v) << 19)); } while(0)
  #define EFR32_EMU_DCDCTRIM0_CLIMBIASTRIM_GET(x)  (((x) >> 19) & 0xf)

#define EFR32_EMU_DCDCTRIM1_ADDR                     0x00000084
#define EFR32_EMU_DCDCTRIM1_MASK                     0xc7ff1f0f
  #define EFR32_EMU_DCDCTRIM1_ZDETBIASTRIM(v)      ((v) << 0)
  #define EFR32_EMU_DCDCTRIM1_ZDETBIASTRIM_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_EMU_DCDCTRIM1_ZDETBIASTRIM_GET(x)  (((x) >> 0) & 0xf)
  #define EFR32_EMU_DCDCTRIM1_ZDET0XTRIM(v)        ((v) << 8)
  #define EFR32_EMU_DCDCTRIM1_ZDET0XTRIM_SET(x, v) do { (x) = (((x) & ~0x1f00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_DCDCTRIM1_ZDET0XTRIM_GET(x)    (((x) >> 8) & 0x1f)
  #define EFR32_EMU_DCDCTRIM1_LPPFETCNT(v)         ((v) << 16)
  #define EFR32_EMU_DCDCTRIM1_LPPFETCNT_SET(x, v)  do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_DCDCTRIM1_LPPFETCNT_GET(x)     (((x) >> 16) & 0xf)
  #define EFR32_EMU_DCDCTRIM1_LPNFETCNT(v)         ((v) << 20)
  #define EFR32_EMU_DCDCTRIM1_LPNFETCNT_SET(x, v)  do { (x) = (((x) & ~0xf00000) | ((v) << 20)); } while(0)
  #define EFR32_EMU_DCDCTRIM1_LPNFETCNT_GET(x)     (((x) >> 20) & 0xf)
  #define EFR32_EMU_DCDCTRIM1_LPCLIMILIMSELRAMP(v) ((v) << 24)
  #define EFR32_EMU_DCDCTRIM1_LPCLIMILIMSELRAMP_SET(x, v) do { (x) = (((x) & ~0x7000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_DCDCTRIM1_LPCLIMILIMSELRAMP_GET(x) (((x) >> 24) & 0x7)
  #define EFR32_EMU_DCDCTRIM1_BYPPFETEN            0x40000000
  #define EFR32_EMU_DCDCTRIM1_SWTRIMEN             0x80000000

#define EFR32_EMU_DCDCTEST_ADDR                      0x00000088
#define EFR32_EMU_DCDCTEST_MASK                      0x8001ffff
  #define EFR32_EMU_DCDCTEST_LPINIT                0x00000001
  #define EFR32_EMU_DCDCTEST_LNPRECHARGE           0x00000002
  #define EFR32_EMU_DCDCTEST_PULSESEL              0x00000004
  #define EFR32_EMU_DCDCTEST_BYPASSEN              0x00000008
  #define EFR32_EMU_DCDCTEST_LPEN                  0x00000010
  #define EFR32_EMU_DCDCTEST_LNEN                  0x00000020
  #define EFR32_EMU_DCDCTEST_LPCMPHYSDIS           0x00000040
  #define EFR32_EMU_DCDCTEST_ZDETILIMEN            0x00000080
  #define EFR32_EMU_DCDCTEST_LPPUMPDIS             0x00000100
  #define EFR32_EMU_DCDCTEST_SWTESTEN              0x00000200
  #define EFR32_EMU_DCDCTEST_LPTESTCMPBIAS         0x00000400
  #define EFR32_EMU_DCDCTEST_SWTESTSTATE           0x00000800
  #define EFR32_EMU_DCDCTEST_LPTEST                0x00001000
  #define EFR32_EMU_DCDCTEST_LPTESTCMPSENSE        0x00002000
  #define EFR32_EMU_DCDCTEST_CLIMTESTEN            0x00004000
  #define EFR32_EMU_DCDCTEST_LPPUMPHI              0x00008000
  #define EFR32_EMU_DCDCTEST_RCOCALEN              0x00010000
  #define EFR32_EMU_DCDCTEST_TESTEN                0x80000000

#define EFR32_EMU_VMONCTRL_ADDR                      0x0000008c
#define EFR32_EMU_VMONCTRL_MASK                      0x00000003
  #define EFR32_EMU_VMONCTRL_REFRESHRATE(v)        ((EFR32_EMU_VMONCTRL_REFRESHRATE_##v) << 0)
  #define EFR32_EMU_VMONCTRL_REFRESHRATE_SET(x, v) do { (x) = (((x) & ~0x3) | ((EFR32_EMU_VMONCTRL_REFRESHRATE_##v) << 0)); } while(0)
  #define EFR32_EMU_VMONCTRL_REFRESHRATE_SETVAL(x, v) do { (x) = (((x) & ~0x3) | ((v) << 0)); } while(0)
  #define EFR32_EMU_VMONCTRL_REFRESHRATE_GET(x)    (((x) >> 0) & 0x3)
/**  */
    #define EFR32_EMU_VMONCTRL_REFRESHRATE_E1KHZ     0x00000000
/**  */
    #define EFR32_EMU_VMONCTRL_REFRESHRATE_E500HZ    0x00000001
/**  */
    #define EFR32_EMU_VMONCTRL_REFRESHRATE_E250HZ    0x00000002
/**  */
    #define EFR32_EMU_VMONCTRL_REFRESHRATE_E125HZ    0x00000003

#define EFR32_EMU_VMONAVDDCTRL_ADDR                  0x00000090
#define EFR32_EMU_VMONAVDDCTRL_MASK                  0x00ffff0f
  #define EFR32_EMU_VMONAVDDCTRL_EN                0x00000001
  #define EFR32_EMU_VMONAVDDCTRL_EM4ENTRY          0x00000002
  #define EFR32_EMU_VMONAVDDCTRL_RISEWU            0x00000004
  #define EFR32_EMU_VMONAVDDCTRL_FALLWU            0x00000008
  #define EFR32_EMU_VMONAVDDCTRL_FALLTHRESFINE(v)  ((v) << 8)
  #define EFR32_EMU_VMONAVDDCTRL_FALLTHRESFINE_SET(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_VMONAVDDCTRL_FALLTHRESFINE_GET(x) (((x) >> 8) & 0xf)
  #define EFR32_EMU_VMONAVDDCTRL_FALLTHRESCOARSE(v) ((v) << 12)
  #define EFR32_EMU_VMONAVDDCTRL_FALLTHRESCOARSE_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_VMONAVDDCTRL_FALLTHRESCOARSE_GET(x) (((x) >> 12) & 0xf)
  #define EFR32_EMU_VMONAVDDCTRL_RISETHRESFINE(v)  ((v) << 16)
  #define EFR32_EMU_VMONAVDDCTRL_RISETHRESFINE_SET(x, v) do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_VMONAVDDCTRL_RISETHRESFINE_GET(x) (((x) >> 16) & 0xf)
  #define EFR32_EMU_VMONAVDDCTRL_RISETHRESCOARSE(v) ((v) << 20)
  #define EFR32_EMU_VMONAVDDCTRL_RISETHRESCOARSE_SET(x, v) do { (x) = (((x) & ~0xf00000) | ((v) << 20)); } while(0)
  #define EFR32_EMU_VMONAVDDCTRL_RISETHRESCOARSE_GET(x) (((x) >> 20) & 0xf)

#define EFR32_EMU_VMONALTAVDDCTRL_ADDR               0x00000094
#define EFR32_EMU_VMONALTAVDDCTRL_MASK               0x0000ff0d
  #define EFR32_EMU_VMONALTAVDDCTRL_EN             0x00000001
  #define EFR32_EMU_VMONALTAVDDCTRL_RISEWU         0x00000004
  #define EFR32_EMU_VMONALTAVDDCTRL_FALLWU         0x00000008
  #define EFR32_EMU_VMONALTAVDDCTRL_THRESFINE(v)   ((v) << 8)
  #define EFR32_EMU_VMONALTAVDDCTRL_THRESFINE_SET(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_VMONALTAVDDCTRL_THRESFINE_GET(x) (((x) >> 8) & 0xf)
  #define EFR32_EMU_VMONALTAVDDCTRL_THRESCOARSE(v) ((v) << 12)
  #define EFR32_EMU_VMONALTAVDDCTRL_THRESCOARSE_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_VMONALTAVDDCTRL_THRESCOARSE_GET(x) (((x) >> 12) & 0xf)

#define EFR32_EMU_VMONDVDDCTRL_ADDR                  0x00000098
#define EFR32_EMU_VMONDVDDCTRL_MASK                  0x0000ff0d
  #define EFR32_EMU_VMONDVDDCTRL_EN                0x00000001
  #define EFR32_EMU_VMONDVDDCTRL_RISEWU            0x00000004
  #define EFR32_EMU_VMONDVDDCTRL_FALLWU            0x00000008
  #define EFR32_EMU_VMONDVDDCTRL_THRESFINE(v)      ((v) << 8)
  #define EFR32_EMU_VMONDVDDCTRL_THRESFINE_SET(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_VMONDVDDCTRL_THRESFINE_GET(x)  (((x) >> 8) & 0xf)
  #define EFR32_EMU_VMONDVDDCTRL_THRESCOARSE(v)    ((v) << 12)
  #define EFR32_EMU_VMONDVDDCTRL_THRESCOARSE_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_VMONDVDDCTRL_THRESCOARSE_GET(x) (((x) >> 12) & 0xf)

#define EFR32_EMU_VMONIO0CTRL_ADDR                   0x0000009c
#define EFR32_EMU_VMONIO0CTRL_MASK                   0x0000ff1d
  #define EFR32_EMU_VMONIO0CTRL_EN                 0x00000001
  #define EFR32_EMU_VMONIO0CTRL_RISEWU             0x00000004
  #define EFR32_EMU_VMONIO0CTRL_FALLWU             0x00000008
  #define EFR32_EMU_VMONIO0CTRL_RETDIS             0x00000010
  #define EFR32_EMU_VMONIO0CTRL_THRESFINE(v)       ((v) << 8)
  #define EFR32_EMU_VMONIO0CTRL_THRESFINE_SET(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_VMONIO0CTRL_THRESFINE_GET(x)   (((x) >> 8) & 0xf)
  #define EFR32_EMU_VMONIO0CTRL_THRESCOARSE(v)     ((v) << 12)
  #define EFR32_EMU_VMONIO0CTRL_THRESCOARSE_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_VMONIO0CTRL_THRESCOARSE_GET(x) (((x) >> 12) & 0xf)

#define EFR32_EMU_VMONFVDDCTRL_ADDR                  0x000000ac
#define EFR32_EMU_VMONFVDDCTRL_MASK                  0x0000ff0d
  #define EFR32_EMU_VMONFVDDCTRL_EN                0x00000001
  #define EFR32_EMU_VMONFVDDCTRL_RISEWU            0x00000004
  #define EFR32_EMU_VMONFVDDCTRL_FALLWU            0x00000008
  #define EFR32_EMU_VMONFVDDCTRL_THRESFINE(v)      ((v) << 8)
  #define EFR32_EMU_VMONFVDDCTRL_THRESFINE_SET(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_VMONFVDDCTRL_THRESFINE_GET(x)  (((x) >> 8) & 0xf)
  #define EFR32_EMU_VMONFVDDCTRL_THRESCOARSE(v)    ((v) << 12)
  #define EFR32_EMU_VMONFVDDCTRL_THRESCOARSE_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_VMONFVDDCTRL_THRESCOARSE_GET(x) (((x) >> 12) & 0xf)

#define EFR32_EMU_SGLNAMIXCTRL_ADDR                  0x000000b0
#define EFR32_EMU_SGLNAMIXCTRL_MASK                  0x00000001
  #define EFR32_EMU_SGLNAMIXCTRL_SGLNAMIXSTANDBY   0x00000001

#define EFR32_EMU_RAM1CTRL_ADDR                      0x000000b4
#define EFR32_EMU_RAM1CTRL_MASK                      0x00000003
  #define EFR32_EMU_RAM1CTRL_RAMPOWERDOWN(v)       ((EFR32_EMU_RAM1CTRL_RAMPOWERDOWN_##v) << 0)
  #define EFR32_EMU_RAM1CTRL_RAMPOWERDOWN_SET(x, v) do { (x) = (((x) & ~0x3) | ((EFR32_EMU_RAM1CTRL_RAMPOWERDOWN_##v) << 0)); } while(0)
  #define EFR32_EMU_RAM1CTRL_RAMPOWERDOWN_SETVAL(x, v) do { (x) = (((x) & ~0x3) | ((v) << 0)); } while(0)
  #define EFR32_EMU_RAM1CTRL_RAMPOWERDOWN_GET(x)   (((x) >> 0) & 0x3)
/**  */
    #define EFR32_EMU_RAM1CTRL_RAMPOWERDOWN_NONE     0x00000000
/**  */
    #define EFR32_EMU_RAM1CTRL_RAMPOWERDOWN_BLK1     0x00000002
/**  */
    #define EFR32_EMU_RAM1CTRL_RAMPOWERDOWN_BLK0TO1  0x00000003

#define EFR32_EMU_RAM2CTRL_ADDR                      0x000000b8
#define EFR32_EMU_RAM2CTRL_MASK                      0x00000001
  #define EFR32_EMU_RAM2CTRL_RAMPOWERDOWN(v)       ((EFR32_EMU_RAM2CTRL_RAMPOWERDOWN_##v) << 0)
  #define EFR32_EMU_RAM2CTRL_RAMPOWERDOWN_SET(x, v) do { (x) = (((x) & ~0x1) | ((EFR32_EMU_RAM2CTRL_RAMPOWERDOWN_##v) << 0)); } while(0)
  #define EFR32_EMU_RAM2CTRL_RAMPOWERDOWN_SETVAL(x, v) do { (x) = (((x) & ~0x1) | ((v) << 0)); } while(0)
  #define EFR32_EMU_RAM2CTRL_RAMPOWERDOWN_GET(x)   (((x) >> 0) & 0x1)
/**  */
    #define EFR32_EMU_RAM2CTRL_RAMPOWERDOWN_NONE     0x00000000
/**  */
    #define EFR32_EMU_RAM2CTRL_RAMPOWERDOWN_BLK      0x00000001

#define EFR32_EMU_STATEDLY2_ADDR                     0x000000e8
#define EFR32_EMU_STATEDLY2_MASK                     0x3fffff3f
  #define EFR32_EMU_STATEDLY2_EM23BODDREGWAIT(v)   ((v) << 0)
  #define EFR32_EMU_STATEDLY2_EM23BODDREGWAIT_SET(x, v) do { (x) = (((x) & ~0x3f) | ((v) << 0)); } while(0)
  #define EFR32_EMU_STATEDLY2_EM23BODDREGWAIT_GET(x) (((x) >> 0) & 0x3f)
  #define EFR32_EMU_STATEDLY2_EM234BODWAIT(v)      ((v) << 8)
  #define EFR32_EMU_STATEDLY2_EM234BODWAIT_SET(x, v) do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_STATEDLY2_EM234BODWAIT_GET(x)  (((x) >> 8) & 0xff)
  #define EFR32_EMU_STATEDLY2_EM4HWUFLASHVREFWAIT(v) ((v) << 16)
  #define EFR32_EMU_STATEDLY2_EM4HWUFLASHVREFWAIT_SET(x, v) do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_STATEDLY2_EM4HWUFLASHVREFWAIT_GET(x) (((x) >> 16) & 0xff)
  #define EFR32_EMU_STATEDLY2_EM4HLDREGREFWAIT(v)  ((v) << 24)
  #define EFR32_EMU_STATEDLY2_EM4HLDREGREFWAIT_SET(x, v) do { (x) = (((x) & ~0x3f000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_STATEDLY2_EM4HLDREGREFWAIT_GET(x) (((x) >> 24) & 0x3f)

#define EFR32_EMU_DCDCLPEM01CFG_ADDR                 0x000000ec
#define EFR32_EMU_DCDCLPEM01CFG_MASK                 0x0000f300
  #define EFR32_EMU_DCDCLPEM01CFG_LPCMPBIASEM01(v) ((EFR32_EMU_DCDCLPEM01CFG_LPCMPBIASEM01_##v) << 8)
  #define EFR32_EMU_DCDCLPEM01CFG_LPCMPBIASEM01_SET(x, v) do { (x) = (((x) & ~0x300) | ((EFR32_EMU_DCDCLPEM01CFG_LPCMPBIASEM01_##v) << 8)); } while(0)
  #define EFR32_EMU_DCDCLPEM01CFG_LPCMPBIASEM01_SETVAL(x, v) do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define EFR32_EMU_DCDCLPEM01CFG_LPCMPBIASEM01_GET(x) (((x) >> 8) & 0x3)
/**  */
    #define EFR32_EMU_DCDCLPEM01CFG_LPCMPBIASEM01_BIAS0 0x00000000
/**  */
    #define EFR32_EMU_DCDCLPEM01CFG_LPCMPBIASEM01_BIAS1 0x00000001
/**  */
    #define EFR32_EMU_DCDCLPEM01CFG_LPCMPBIASEM01_BIAS2 0x00000002
/**  */
    #define EFR32_EMU_DCDCLPEM01CFG_LPCMPBIASEM01_BIAS3 0x00000003
  #define EFR32_EMU_DCDCLPEM01CFG_LPCMPHYSSELEM01(v) ((v) << 12)
  #define EFR32_EMU_DCDCLPEM01CFG_LPCMPHYSSELEM01_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_DCDCLPEM01CFG_LPCMPHYSSELEM01_GET(x) (((x) >> 12) & 0xf)

#define EFR32_EMU_DCDCPRSSEL_ADDR                    0x000000fc
#define EFR32_EMU_DCDCPRSSEL_MASK                    0x0000010f
  #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL(v)       ((EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_##v) << 0)
  #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_SET(x, v) do { (x) = (((x) & ~0xf) | ((EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_##v) << 0)); } while(0)
  #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_SETVAL(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_GET(x)   (((x) >> 0) & 0xf)
/**  */
    #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_PRSCH0   0x00000000
/**  */
    #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_PRSCH1   0x00000001
/**  */
    #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_PRSCH2   0x00000002
/**  */
    #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_PRSCH3   0x00000003
/**  */
    #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_PRSCH4   0x00000004
/**  */
    #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_PRSCH5   0x00000005
/**  */
    #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_PRSCH6   0x00000006
/**  */
    #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_PRSCH7   0x00000007
/**  */
    #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_PRSCH8   0x00000008
/**  */
    #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_PRSCH9   0x00000009
/**  */
    #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_PRSCH10  0x0000000a
/**  */
    #define EFR32_EMU_DCDCPRSSEL_DCDCPRSSEL_PRSCH11  0x0000000b
  #define EFR32_EMU_DCDCPRSSEL_PRSNOISEDISEN       0x00000100

#define EFR32_EMU_EM23PERNORETAINCMD_ADDR            0x00000100
#define EFR32_EMU_EM23PERNORETAINCMD_MASK            0x0000ffff
  #define EFR32_EMU_EM23PERNORETAINCMD_ACMP0UNLOCK 0x00000001
  #define EFR32_EMU_EM23PERNORETAINCMD_ACMP1UNLOCK 0x00000002
  #define EFR32_EMU_EM23PERNORETAINCMD_PCNT0UNLOCK 0x00000004
  #define EFR32_EMU_EM23PERNORETAINCMD_PCNT1UNLOCK 0x00000008
  #define EFR32_EMU_EM23PERNORETAINCMD_PCNT2UNLOCK 0x00000010
  #define EFR32_EMU_EM23PERNORETAINCMD_I2C0UNLOCK  0x00000020
  #define EFR32_EMU_EM23PERNORETAINCMD_I2C1UNLOCK  0x00000040
  #define EFR32_EMU_EM23PERNORETAINCMD_DAC0UNLOCK  0x00000080
  #define EFR32_EMU_EM23PERNORETAINCMD_IDAC0UNLOCK 0x00000100
  #define EFR32_EMU_EM23PERNORETAINCMD_ADC0UNLOCK  0x00000200
  #define EFR32_EMU_EM23PERNORETAINCMD_LETIMER0UNLOCK 0x00000400
  #define EFR32_EMU_EM23PERNORETAINCMD_WDOG0UNLOCK 0x00000800
  #define EFR32_EMU_EM23PERNORETAINCMD_WDOG1UNLOCK 0x00001000
  #define EFR32_EMU_EM23PERNORETAINCMD_LESENSE0UNLOCK 0x00002000
  #define EFR32_EMU_EM23PERNORETAINCMD_CSENUNLOCK  0x00004000
  #define EFR32_EMU_EM23PERNORETAINCMD_LEUART0UNLOCK 0x00008000

#define EFR32_EMU_EM23PERNORETAINSTATUS_ADDR         0x00000104
#define EFR32_EMU_EM23PERNORETAINSTATUS_MASK         0x0000ffff
  #define EFR32_EMU_EM23PERNORETAINSTATUS_ACMP0LOCKED 0x00000001
  #define EFR32_EMU_EM23PERNORETAINSTATUS_ACMP1LOCKED 0x00000002
  #define EFR32_EMU_EM23PERNORETAINSTATUS_PCNT0LOCKED 0x00000004
  #define EFR32_EMU_EM23PERNORETAINSTATUS_PCNT1LOCKED 0x00000008
  #define EFR32_EMU_EM23PERNORETAINSTATUS_PCNT2LOCKED 0x00000010
  #define EFR32_EMU_EM23PERNORETAINSTATUS_I2C0LOCKED 0x00000020
  #define EFR32_EMU_EM23PERNORETAINSTATUS_I2C1LOCKED 0x00000040
  #define EFR32_EMU_EM23PERNORETAINSTATUS_DAC0LOCKED 0x00000080
  #define EFR32_EMU_EM23PERNORETAINSTATUS_IDAC0LOCKED 0x00000100
  #define EFR32_EMU_EM23PERNORETAINSTATUS_ADC0LOCKED 0x00000200
  #define EFR32_EMU_EM23PERNORETAINSTATUS_LETIMER0LOCKED 0x00000400
  #define EFR32_EMU_EM23PERNORETAINSTATUS_WDOG0LOCKED 0x00000800
  #define EFR32_EMU_EM23PERNORETAINSTATUS_WDOG1LOCKED 0x00001000
  #define EFR32_EMU_EM23PERNORETAINSTATUS_LESENSE0LOCKED 0x00002000
  #define EFR32_EMU_EM23PERNORETAINSTATUS_CSENLOCKED 0x00004000
  #define EFR32_EMU_EM23PERNORETAINSTATUS_LEUART0LOCKED 0x00008000

#define EFR32_EMU_EM23PERNORETAINCTRL_ADDR           0x00000108
#define EFR32_EMU_EM23PERNORETAINCTRL_MASK           0x0000ffff
  #define EFR32_EMU_EM23PERNORETAINCTRL_ACMP0DIS   0x00000001
  #define EFR32_EMU_EM23PERNORETAINCTRL_ACMP1DIS   0x00000002
  #define EFR32_EMU_EM23PERNORETAINCTRL_PCNT0DIS   0x00000004
  #define EFR32_EMU_EM23PERNORETAINCTRL_PCNT1DIS   0x00000008
  #define EFR32_EMU_EM23PERNORETAINCTRL_PCNT2DIS   0x00000010
  #define EFR32_EMU_EM23PERNORETAINCTRL_I2C0DIS    0x00000020
  #define EFR32_EMU_EM23PERNORETAINCTRL_I2C1DIS    0x00000040
  #define EFR32_EMU_EM23PERNORETAINCTRL_DAC0DIS    0x00000080
  #define EFR32_EMU_EM23PERNORETAINCTRL_IDAC0DIS   0x00000100
  #define EFR32_EMU_EM23PERNORETAINCTRL_ADC0DIS    0x00000200
  #define EFR32_EMU_EM23PERNORETAINCTRL_LETIMER0DIS 0x00000400
  #define EFR32_EMU_EM23PERNORETAINCTRL_WDOG0DIS   0x00000800
  #define EFR32_EMU_EM23PERNORETAINCTRL_WDOG1DIS   0x00001000
  #define EFR32_EMU_EM23PERNORETAINCTRL_LESENSE0DIS 0x00002000
  #define EFR32_EMU_EM23PERNORETAINCTRL_CSENDIS    0x00004000
  #define EFR32_EMU_EM23PERNORETAINCTRL_LEUART0DIS 0x00008000

#define EFR32_EMU_AUXCTRL0_ADDR                      0x00000140
#define EFR32_EMU_AUXCTRL0_MASK                      0x0000ffff
  #define EFR32_EMU_AUXCTRL0_AUX0(v)               ((v) << 0)
  #define EFR32_EMU_AUXCTRL0_AUX0_SET(x, v)        do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_AUXCTRL0_AUX0_GET(x)           (((x) >> 0) & 0xffff)

#define EFR32_EMU_AUXCTRL1_ADDR                      0x00000144
#define EFR32_EMU_AUXCTRL1_MASK                      0x000000ff
  #define EFR32_EMU_AUXCTRL1_AUX1(v)               ((v) << 0)
  #define EFR32_EMU_AUXCTRL1_AUX1_SET(x, v)        do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_AUXCTRL1_AUX1_GET(x)           (((x) >> 0) & 0xff)

#define EFR32_EMU_AUXCTRL2_ADDR                      0x00000148
#define EFR32_EMU_AUXCTRL2_MASK                      0x0000ffff
  #define EFR32_EMU_AUXCTRL2_AUX2(v)               ((v) << 0)
  #define EFR32_EMU_AUXCTRL2_AUX2_SET(x, v)        do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_AUXCTRL2_AUX2_GET(x)           (((x) >> 0) & 0xff)
  #define EFR32_EMU_AUXCTRL2_AUX3(v)               ((v) << 8)
  #define EFR32_EMU_AUXCTRL2_AUX3_SET(x, v)        do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_AUXCTRL2_AUX3_GET(x)           (((x) >> 8) & 0xff)

#define EFR32_EMU_PORBOD_ADDR                        0x0000014c
#define EFR32_EMU_PORBOD_MASK                        0xffffffff
  #define EFR32_EMU_PORBOD_PORBOD_REFTRIM(v)       ((v) << 0)
  #define EFR32_EMU_PORBOD_PORBOD_REFTRIM_SET(x, v) do { (x) = (((x) & ~0x1f) | ((v) << 0)); } while(0)
  #define EFR32_EMU_PORBOD_PORBOD_REFTRIM_GET(x)   (((x) >> 0) & 0x1f)
  #define EFR32_EMU_PORBOD_PORBOD_FORCE_MIRROR_FOR_VREF 0x00000020
  #define EFR32_EMU_PORBOD_PORBOD_AVDD_BOD_THR(v)  ((v) << 6)
  #define EFR32_EMU_PORBOD_PORBOD_AVDD_BOD_THR_SET(x, v) do { (x) = (((x) & ~0x7c0) | ((v) << 6)); } while(0)
  #define EFR32_EMU_PORBOD_PORBOD_AVDD_BOD_THR_GET(x) (((x) >> 6) & 0x1f)
  #define EFR32_EMU_PORBOD_PORBOD_DVDD_BOD_THR(v)  ((v) << 11)
  #define EFR32_EMU_PORBOD_PORBOD_DVDD_BOD_THR_SET(x, v) do { (x) = (((x) & ~0xf800) | ((v) << 11)); } while(0)
  #define EFR32_EMU_PORBOD_PORBOD_DVDD_BOD_THR_GET(x) (((x) >> 11) & 0x1f)
  #define EFR32_EMU_PORBOD_BIAS_TEMP_TRIM_LP(v)    ((v) << 16)
  #define EFR32_EMU_PORBOD_BIAS_TEMP_TRIM_LP_SET(x, v) do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_PORBOD_BIAS_TEMP_TRIM_LP_GET(x) (((x) >> 16) & 0xf)
  #define EFR32_EMU_PORBOD_BIAS_ABS_TRIM_LP(v)     ((v) << 20)
  #define EFR32_EMU_PORBOD_BIAS_ABS_TRIM_LP_SET(x, v) do { (x) = (((x) & ~0x1f00000) | ((v) << 20)); } while(0)
  #define EFR32_EMU_PORBOD_BIAS_ABS_TRIM_LP_GET(x) (((x) >> 20) & 0x1f)
  #define EFR32_EMU_PORBOD_BIAS_ILTC_UA_TRIM(v)    ((v) << 25)
  #define EFR32_EMU_PORBOD_BIAS_ILTC_UA_TRIM_SET(x, v) do { (x) = (((x) & ~0xe000000) | ((v) << 25)); } while(0)
  #define EFR32_EMU_PORBOD_BIAS_ILTC_UA_TRIM_GET(x) (((x) >> 25) & 0x7)
  #define EFR32_EMU_PORBOD_BIAS_ILTC_NA_TRIM(v)    ((v) << 28)
  #define EFR32_EMU_PORBOD_BIAS_ILTC_NA_TRIM_SET(x, v) do { (x) = (((x) & ~0x70000000) | ((v) << 28)); } while(0)
  #define EFR32_EMU_PORBOD_BIAS_ILTC_NA_TRIM_GET(x) (((x) >> 28) & 0x7)
  #define EFR32_EMU_PORBOD_GMC_CALIB_DISABLE       0x80000000

#define EFR32_EMU_PORBODREFRESH_ADDR                 0x00000150
#define EFR32_EMU_PORBODREFRESH_MASK                 0x0000000f
  #define EFR32_EMU_PORBODREFRESH_PORBOD_DUTY_CYCLE_OFF 0x00000001
  #define EFR32_EMU_PORBODREFRESH_PORBOD_FORCE_REFRESH 0x00000002
  #define EFR32_EMU_PORBODREFRESH_PORBOD_REFRESHRATE(v) ((EFR32_EMU_PORBODREFRESH_PORBOD_REFRESHRATE_##v) << 2)
  #define EFR32_EMU_PORBODREFRESH_PORBOD_REFRESHRATE_SET(x, v) do { (x) = (((x) & ~0xc) | ((EFR32_EMU_PORBODREFRESH_PORBOD_REFRESHRATE_##v) << 2)); } while(0)
  #define EFR32_EMU_PORBODREFRESH_PORBOD_REFRESHRATE_SETVAL(x, v) do { (x) = (((x) & ~0xc) | ((v) << 2)); } while(0)
  #define EFR32_EMU_PORBODREFRESH_PORBOD_REFRESHRATE_GET(x) (((x) >> 2) & 0x3)
/**  */
    #define EFR32_EMU_PORBODREFRESH_PORBOD_REFRESHRATE_E1KHZ 0x00000000
/**  */
    #define EFR32_EMU_PORBODREFRESH_PORBOD_REFRESHRATE_E500HZ 0x00000001
/**  */
    #define EFR32_EMU_PORBODREFRESH_PORBOD_REFRESHRATE_E250HZ 0x00000002
/**  */
    #define EFR32_EMU_PORBODREFRESH_PORBOD_REFRESHRATE_E125HZ 0x00000003

#define EFR32_EMU_PORBODOVERRIDE_ADDR                0x00000154
#define EFR32_EMU_PORBODOVERRIDE_MASK                0xffc00000
  #define EFR32_EMU_PORBODOVERRIDE_PORBOD_OVERRIDE_EN 0x00400000
  #define EFR32_EMU_PORBODOVERRIDE_OVR_PORBOD_BOD_BOOST 0x00800000
  #define EFR32_EMU_PORBODOVERRIDE_OVR_PORBOD_LEGACY_POR_SAFE_DISABLE 0x01000000
  #define EFR32_EMU_PORBODOVERRIDE_OVR_PORBOD_AVDD_BOD_EN 0x02000000
  #define EFR32_EMU_PORBODOVERRIDE_OVR_PORBOD_AVDD_EM4BOD_EN 0x04000000
  #define EFR32_EMU_PORBODOVERRIDE_OVR_PORBOD_DVDD_BOD_EN 0x08000000
  #define EFR32_EMU_PORBODOVERRIDE_OVR_PORBOD_FLASH_BOD_EN 0x10000000
  #define EFR32_EMU_PORBODOVERRIDE_OVR_PORBOD_DEC0_BOD_EN 0x20000000
  #define EFR32_EMU_PORBODOVERRIDE_OVR_PORBOD_DEC1_BOD_EN 0x40000000
  #define EFR32_EMU_PORBODOVERRIDE_OVR_PORBOD_BOD_BIAS_ENABLE 0x80000000

#define EFR32_EMU_BODCONF_ADDR                       0x00000158
#define EFR32_EMU_BODCONF_MASK                       0xef9e07fc
  #define EFR32_EMU_BODCONF_PORBOD_AVDD_EM4BOD_TRIM(v) ((v) << 2)
  #define EFR32_EMU_BODCONF_PORBOD_AVDD_EM4BOD_TRIM_SET(x, v) do { (x) = (((x) & ~0x7c) | ((v) << 2)); } while(0)
  #define EFR32_EMU_BODCONF_PORBOD_AVDD_EM4BOD_TRIM_GET(x) (((x) >> 2) & 0x1f)
  #define EFR32_EMU_BODCONF_PORBOD_AVDD_GL_CURR(v) ((v) << 7)
  #define EFR32_EMU_BODCONF_PORBOD_AVDD_GL_CURR_SET(x, v) do { (x) = (((x) & ~0x380) | ((v) << 7)); } while(0)
  #define EFR32_EMU_BODCONF_PORBOD_AVDD_GL_CURR_GET(x) (((x) >> 7) & 0x7)
  #define EFR32_EMU_BODCONF_PORBOD_AVDD_GL_RC      0x00000400
  #define EFR32_EMU_BODCONF_PORBOD_DVDD_GL_CURR(v) ((v) << 17)
  #define EFR32_EMU_BODCONF_PORBOD_DVDD_GL_CURR_SET(x, v) do { (x) = (((x) & ~0xe0000) | ((v) << 17)); } while(0)
  #define EFR32_EMU_BODCONF_PORBOD_DVDD_GL_CURR_GET(x) (((x) >> 17) & 0x7)
  #define EFR32_EMU_BODCONF_PORBOD_DVDD_GL_RC      0x00100000
  #define EFR32_EMU_BODCONF_EMUOSCDIV2EN           0x00800000
  #define EFR32_EMU_BODCONF_EMUOSC_TRIM(v)         ((v) << 24)
  #define EFR32_EMU_BODCONF_EMUOSC_TRIM_SET(x, v)  do { (x) = (((x) & ~0x7000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_BODCONF_EMUOSC_TRIM_GET(x)     (((x) >> 24) & 0x7)
  #define EFR32_EMU_BODCONF_EMUOSC_RTRIM           0x08000000
  #define EFR32_EMU_BODCONF_PORBOD_AVDD_EM4BOD_DIS 0x20000000
  #define EFR32_EMU_BODCONF_EM23BODBOOST           0x40000000
  #define EFR32_EMU_BODCONF_BODBOOSTDIS            0x80000000

#define EFR32_EMU_FLASHBOD_ADDR                      0x0000015c
#define EFR32_EMU_FLASHBOD_MASK                      0x000f07c0
  #define EFR32_EMU_FLASHBOD_PORBOD_FLASH_BOD_THR(v) ((v) << 6)
  #define EFR32_EMU_FLASHBOD_PORBOD_FLASH_BOD_THR_SET(x, v) do { (x) = (((x) & ~0x7c0) | ((v) << 6)); } while(0)
  #define EFR32_EMU_FLASHBOD_PORBOD_FLASH_BOD_THR_GET(x) (((x) >> 6) & 0x1f)
  #define EFR32_EMU_FLASHBOD_PORBOD_FLASH_GL_CURR(v) ((v) << 16)
  #define EFR32_EMU_FLASHBOD_PORBOD_FLASH_GL_CURR_SET(x, v) do { (x) = (((x) & ~0x70000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_FLASHBOD_PORBOD_FLASH_GL_CURR_GET(x) (((x) >> 16) & 0x7)
  #define EFR32_EMU_FLASHBOD_PORBOD_FLASH_GL_RC    0x00080000

#define EFR32_EMU_DECBOD_ADDR                        0x00000160
#define EFR32_EMU_DECBOD_MASK                        0x07bf07bf
  #define EFR32_EMU_DECBOD_PORBOD_DEC0_BOD_TRIM(v) ((v) << 0)
  #define EFR32_EMU_DECBOD_PORBOD_DEC0_BOD_TRIM_SET(x, v) do { (x) = (((x) & ~0x3) | ((v) << 0)); } while(0)
  #define EFR32_EMU_DECBOD_PORBOD_DEC0_BOD_TRIM_GET(x) (((x) >> 0) & 0x3)
  #define EFR32_EMU_DECBOD_PORBOD_DEC0_BOD_THR(v)  ((v) << 2)
  #define EFR32_EMU_DECBOD_PORBOD_DEC0_BOD_THR_SET(x, v) do { (x) = (((x) & ~0x3c) | ((v) << 2)); } while(0)
  #define EFR32_EMU_DECBOD_PORBOD_DEC0_BOD_THR_GET(x) (((x) >> 2) & 0xf)
  #define EFR32_EMU_DECBOD_PORBOD_DEC0_GL_CURR(v)  ((v) << 7)
  #define EFR32_EMU_DECBOD_PORBOD_DEC0_GL_CURR_SET(x, v) do { (x) = (((x) & ~0x380) | ((v) << 7)); } while(0)
  #define EFR32_EMU_DECBOD_PORBOD_DEC0_GL_CURR_GET(x) (((x) >> 7) & 0x7)
  #define EFR32_EMU_DECBOD_PORBOD_DEC0_GL_RC       0x00000400
  #define EFR32_EMU_DECBOD_PORBOD_DEC1_BOD_TRIM(v) ((v) << 16)
  #define EFR32_EMU_DECBOD_PORBOD_DEC1_BOD_TRIM_SET(x, v) do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_DECBOD_PORBOD_DEC1_BOD_TRIM_GET(x) (((x) >> 16) & 0x3)
  #define EFR32_EMU_DECBOD_PORBOD_DEC1_BOD_THR(v)  ((v) << 18)
  #define EFR32_EMU_DECBOD_PORBOD_DEC1_BOD_THR_SET(x, v) do { (x) = (((x) & ~0x3c0000) | ((v) << 18)); } while(0)
  #define EFR32_EMU_DECBOD_PORBOD_DEC1_BOD_THR_GET(x) (((x) >> 18) & 0xf)
  #define EFR32_EMU_DECBOD_PORBOD_DEC1_GL_CURR(v)  ((v) << 23)
  #define EFR32_EMU_DECBOD_PORBOD_DEC1_GL_CURR_SET(x, v) do { (x) = (((x) & ~0x3800000) | ((v) << 23)); } while(0)
  #define EFR32_EMU_DECBOD_PORBOD_DEC1_GL_CURR_GET(x) (((x) >> 23) & 0x7)
  #define EFR32_EMU_DECBOD_PORBOD_DEC1_GL_RC       0x04000000

#define EFR32_EMU_BIASCONF_ADDR                      0x00000164
#define EFR32_EMU_BIASCONF_MASK                      0x0000f3ff
  #define EFR32_EMU_BIASCONF_GMCEM01               0x00000001
  #define EFR32_EMU_BIASCONF_UADUTYEM01            0x00000002
  #define EFR32_EMU_BIASCONF_NADUTYEM01            0x00000004
  #define EFR32_EMU_BIASCONF_LPEM01                0x00000008
  #define EFR32_EMU_BIASCONF_GMCEM23               0x00000010
  #define EFR32_EMU_BIASCONF_UADUTYEM23            0x00000020
  #define EFR32_EMU_BIASCONF_NADUTYEM23            0x00000040
  #define EFR32_EMU_BIASCONF_LPEM23                0x00000080
  #define EFR32_EMU_BIASCONF_EN_GMC_W_BGR          0x00000100
  #define EFR32_EMU_BIASCONF_LSBIAS_SEL            0x00000200
  #define EFR32_EMU_BIASCONF_ILTC_NODUTY_EN        0x00001000
  #define EFR32_EMU_BIASCONF_DISRPUPDATE           0x00002000
  #define EFR32_EMU_BIASCONF_BIASCONTTM            0x00004000
  #define EFR32_EMU_BIASCONF_GMC_CALIB_USESAR      0x00008000

#define EFR32_EMU_BIASABSTRIM_ADDR                   0x00000168
#define EFR32_EMU_BIASABSTRIM_MASK                   0x1f1f1f00
  #define EFR32_EMU_BIASABSTRIM_BIAS_ABS_TRIM_HP(v) ((v) << 8)
  #define EFR32_EMU_BIASABSTRIM_BIAS_ABS_TRIM_HP_SET(x, v) do { (x) = (((x) & ~0x1f00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_BIASABSTRIM_BIAS_ABS_TRIM_HP_GET(x) (((x) >> 8) & 0x1f)
  #define EFR32_EMU_BIASABSTRIM_BIAS_ABS_TRIM_HPCAL(v) ((v) << 16)
  #define EFR32_EMU_BIASABSTRIM_BIAS_ABS_TRIM_HPCAL_SET(x, v) do { (x) = (((x) & ~0x1f0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_BIASABSTRIM_BIAS_ABS_TRIM_HPCAL_GET(x) (((x) >> 16) & 0x1f)
  #define EFR32_EMU_BIASABSTRIM_BIAS_ABS_TRIM_LPCAL(v) ((v) << 24)
  #define EFR32_EMU_BIASABSTRIM_BIAS_ABS_TRIM_LPCAL_SET(x, v) do { (x) = (((x) & ~0x1f000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_BIASABSTRIM_BIAS_ABS_TRIM_LPCAL_GET(x) (((x) >> 24) & 0x1f)

#define EFR32_EMU_BIASTEMPTRIM_ADDR                  0x0000016c
#define EFR32_EMU_BIASTEMPTRIM_MASK                  0x0000ff0f
  #define EFR32_EMU_BIASTEMPTRIM_BIAS_TEMP_TRIM_HP(v) ((v) << 0)
  #define EFR32_EMU_BIASTEMPTRIM_BIAS_TEMP_TRIM_HP_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_EMU_BIASTEMPTRIM_BIAS_TEMP_TRIM_HP_GET(x) (((x) >> 0) & 0xf)
  #define EFR32_EMU_BIASTEMPTRIM_BIAS_TEMP_TRIM_HPCAL(v) ((v) << 8)
  #define EFR32_EMU_BIASTEMPTRIM_BIAS_TEMP_TRIM_HPCAL_SET(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_BIASTEMPTRIM_BIAS_TEMP_TRIM_HPCAL_GET(x) (((x) >> 8) & 0xf)
  #define EFR32_EMU_BIASTEMPTRIM_BIAS_TEMP_TRIM_LPCAL(v) ((v) << 12)
  #define EFR32_EMU_BIASTEMPTRIM_BIAS_TEMP_TRIM_LPCAL_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_BIASTEMPTRIM_BIAS_TEMP_TRIM_LPCAL_GET(x) (((x) >> 12) & 0xf)

#define EFR32_EMU_BIASTRIM_ADDR                      0x00000170
#define EFR32_EMU_BIASTRIM_MASK                      0x01f003ff
  #define EFR32_EMU_BIASTRIM_BIAS_VREF_TRIM(v)     ((v) << 0)
  #define EFR32_EMU_BIASTRIM_BIAS_VREF_TRIM_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_EMU_BIASTRIM_BIAS_VREF_TRIM_GET(x) (((x) >> 0) & 0xf)
  #define EFR32_EMU_BIASTRIM_BIAS_LDO_NABIAS(v)    ((v) << 4)
  #define EFR32_EMU_BIASTRIM_BIAS_LDO_NABIAS_SET(x, v) do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define EFR32_EMU_BIASTRIM_BIAS_LDO_NABIAS_GET(x) (((x) >> 4) & 0x3)
  #define EFR32_EMU_BIASTRIM_BIAS_LDO_ILOAD(v)     ((v) << 6)
  #define EFR32_EMU_BIASTRIM_BIAS_LDO_ILOAD_SET(x, v) do { (x) = (((x) & ~0xc0) | ((v) << 6)); } while(0)
  #define EFR32_EMU_BIASTRIM_BIAS_LDO_ILOAD_GET(x) (((x) >> 6) & 0x3)
  #define EFR32_EMU_BIASTRIM_BIAS_NA_MULT(v)       ((v) << 8)
  #define EFR32_EMU_BIASTRIM_BIAS_NA_MULT_SET(x, v) do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define EFR32_EMU_BIASTRIM_BIAS_NA_MULT_GET(x)   (((x) >> 8) & 0x3)
  #define EFR32_EMU_BIASTRIM_BIAS_DLY_TRIM(v)      ((v) << 20)
  #define EFR32_EMU_BIASTRIM_BIAS_DLY_TRIM_SET(x, v) do { (x) = (((x) & ~0x1f00000) | ((v) << 20)); } while(0)
  #define EFR32_EMU_BIASTRIM_BIAS_DLY_TRIM_GET(x)  (((x) >> 20) & 0x1f)

#define EFR32_EMU_BIASPERIOD_ADDR                    0x00000174
#define EFR32_EMU_BIASPERIOD_MASK                    0x07733000
  #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM03(v) ((EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM03_##v) << 12)
  #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM03_SET(x, v) do { (x) = (((x) & ~0x3000) | ((EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM03_##v) << 12)); } while(0)
  #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM03_SETVAL(x, v) do { (x) = (((x) & ~0x3000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM03_GET(x) (((x) >> 12) & 0x3)
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM03_E1MS 0x00000000
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM03_E2MS 0x00000001
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM03_E4MS 0x00000002
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM03_E8MS 0x00000003
  #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM4H(v) ((EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM4H_##v) << 16)
  #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM4H_SET(x, v) do { (x) = (((x) & ~0x30000) | ((EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM4H_##v) << 16)); } while(0)
  #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM4H_SETVAL(x, v) do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM4H_GET(x) (((x) >> 16) & 0x3)
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM4H_E1MS 0x00000000
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM4H_E2MS 0x00000001
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM4H_E4MS 0x00000002
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_REFRESH_PERIOD_EM4H_E8MS 0x00000003
  #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM03(v) ((EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM03_##v) << 20)
  #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM03_SET(x, v) do { (x) = (((x) & ~0x700000) | ((EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM03_##v) << 20)); } while(0)
  #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM03_SETVAL(x, v) do { (x) = (((x) & ~0x700000) | ((v) << 20)); } while(0)
  #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM03_GET(x) (((x) >> 20) & 0x7)
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM03_E125MS 0x00000000
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM03_E250MS 0x00000001
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM03_E500MS 0x00000002
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM03_E1S 0x00000003
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM03_E2S 0x00000004
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM03_E4S 0x00000005
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM03_E8S 0x00000006
  #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM4H(v) ((EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM4H_##v) << 24)
  #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM4H_SET(x, v) do { (x) = (((x) & ~0x7000000) | ((EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM4H_##v) << 24)); } while(0)
  #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM4H_SETVAL(x, v) do { (x) = (((x) & ~0x7000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM4H_GET(x) (((x) >> 24) & 0x7)
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM4H_E125MS 0x00000000
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM4H_E250MS 0x00000001
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM4H_E500MS 0x00000002
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM4H_E1S 0x00000003
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM4H_E2S 0x00000004
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM4H_E4S 0x00000005
/**  */
    #define EFR32_EMU_BIASPERIOD_BIAS_GMC_CALIB_PERIOD_EM4H_E8S 0x00000006

#define EFR32_EMU_DREGCALIB_ADDR                     0x00000178
#define EFR32_EMU_DREGCALIB_MASK                     0x007f0c3f
  #define EFR32_EMU_DREGCALIB_HDREG_TRIM_VREG(v)   ((v) << 0)
  #define EFR32_EMU_DREGCALIB_HDREG_TRIM_VREG_SET(x, v) do { (x) = (((x) & ~0x3f) | ((v) << 0)); } while(0)
  #define EFR32_EMU_DREGCALIB_HDREG_TRIM_VREG_GET(x) (((x) >> 0) & 0x3f)
  #define EFR32_EMU_DREGCALIB_HDREG_TRIM_ISRC_CINT(v) ((v) << 10)
  #define EFR32_EMU_DREGCALIB_HDREG_TRIM_ISRC_CINT_SET(x, v) do { (x) = (((x) & ~0xc00) | ((v) << 10)); } while(0)
  #define EFR32_EMU_DREGCALIB_HDREG_TRIM_ISRC_CINT_GET(x) (((x) >> 10) & 0x3)
  #define EFR32_EMU_DREGCALIB_LDREG_TRIM_VREG(v)   ((v) << 16)
  #define EFR32_EMU_DREGCALIB_LDREG_TRIM_VREG_SET(x, v) do { (x) = (((x) & ~0x1f0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_DREGCALIB_LDREG_TRIM_VREG_GET(x) (((x) >> 16) & 0x1f)
  #define EFR32_EMU_DREGCALIB_LDREG_DUTYSCALE(v)   ((EFR32_EMU_DREGCALIB_LDREG_DUTYSCALE_##v) << 21)
  #define EFR32_EMU_DREGCALIB_LDREG_DUTYSCALE_SET(x, v) do { (x) = (((x) & ~0x600000) | ((EFR32_EMU_DREGCALIB_LDREG_DUTYSCALE_##v) << 21)); } while(0)
  #define EFR32_EMU_DREGCALIB_LDREG_DUTYSCALE_SETVAL(x, v) do { (x) = (((x) & ~0x600000) | ((v) << 21)); } while(0)
  #define EFR32_EMU_DREGCALIB_LDREG_DUTYSCALE_GET(x) (((x) >> 21) & 0x3)
/**  */
    #define EFR32_EMU_DREGCALIB_LDREG_DUTYSCALE_DIV1 0x00000000
/**  */
    #define EFR32_EMU_DREGCALIB_LDREG_DUTYSCALE_DIV2 0x00000001
/**  */
    #define EFR32_EMU_DREGCALIB_LDREG_DUTYSCALE_DIV4 0x00000002
/**  */
    #define EFR32_EMU_DREGCALIB_LDREG_DUTYSCALE_DIV8 0x00000003

#define EFR32_EMU_DREGOVERRIDE_ADDR                  0x0000017c
#define EFR32_EMU_DREGOVERRIDE_MASK                  0x00003f1d
  #define EFR32_EMU_DREGOVERRIDE_LDREG_OVERRIDE_EN 0x00000001
  #define EFR32_EMU_DREGOVERRIDE_OVR_LDREG_EN_PD0SW 0x00000004
  #define EFR32_EMU_DREGOVERRIDE_OVR_LDREG_EN_LDREG 0x00000008
  #define EFR32_EMU_DREGOVERRIDE_OVR_LDREG_VREF_EN 0x00000010
  #define EFR32_EMU_DREGOVERRIDE_HDREG_OVERRIDE_EN 0x00000100
  #define EFR32_EMU_DREGOVERRIDE_OVR_HDREG_EN_HARD_SW 0x00000200
  #define EFR32_EMU_DREGOVERRIDE_OVR_HDREG_EN_HDREG_BIAS 0x00000400
  #define EFR32_EMU_DREGOVERRIDE_OVR_HDREG_EN_COLD_START 0x00000800
  #define EFR32_EMU_DREGOVERRIDE_OVR_HDREG_EN_HDREG_FUNC 0x00001000
  #define EFR32_EMU_DREGOVERRIDE_OVR_HDREG_EN_VREG_MODE 0x00002000

#define EFR32_EMU_RAM0FEATURE_ADDR                   0x00000180
#define EFR32_EMU_RAM0FEATURE_MASK                   0x001f0330
  #define EFR32_EMU_RAM0FEATURE_SEQRAMEN(v)        ((EFR32_EMU_RAM0FEATURE_SEQRAMEN_##v) << 4)
  #define EFR32_EMU_RAM0FEATURE_SEQRAMEN_SET(x, v) do { (x) = (((x) & ~0x30) | ((EFR32_EMU_RAM0FEATURE_SEQRAMEN_##v) << 4)); } while(0)
  #define EFR32_EMU_RAM0FEATURE_SEQRAMEN_SETVAL(x, v) do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define EFR32_EMU_RAM0FEATURE_SEQRAMEN_GET(x)    (((x) >> 4) & 0x3)
/**  */
    #define EFR32_EMU_RAM0FEATURE_SEQRAMEN_SEQRAM0   0x00000001
/**  */
    #define EFR32_EMU_RAM0FEATURE_SEQRAMEN_SEQRAM0TO1 0x00000003
  #define EFR32_EMU_RAM0FEATURE_RAM0DIV(v)         ((EFR32_EMU_RAM0FEATURE_RAM0DIV_##v) << 8)
  #define EFR32_EMU_RAM0FEATURE_RAM0DIV_SET(x, v)  do { (x) = (((x) & ~0x300) | ((EFR32_EMU_RAM0FEATURE_RAM0DIV_##v) << 8)); } while(0)
  #define EFR32_EMU_RAM0FEATURE_RAM0DIV_SETVAL(x, v) do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define EFR32_EMU_RAM0FEATURE_RAM0DIV_GET(x)     (((x) >> 8) & 0x3)
/**  */
    #define EFR32_EMU_RAM0FEATURE_RAM0DIV_DIV1       0x00000000
/**  */
    #define EFR32_EMU_RAM0FEATURE_RAM0DIV_DIV2       0x00000001
/**  */
    #define EFR32_EMU_RAM0FEATURE_RAM0DIV_DIV4       0x00000002
/**  */
    #define EFR32_EMU_RAM0FEATURE_RAM0DIV_DIV8       0x00000003
  #define EFR32_EMU_RAM0FEATURE_RAMSIZE(v)         ((EFR32_EMU_RAM0FEATURE_RAMSIZE_##v) << 16)
  #define EFR32_EMU_RAM0FEATURE_RAMSIZE_SET(x, v)  do { (x) = (((x) & ~0x1f0000) | ((EFR32_EMU_RAM0FEATURE_RAMSIZE_##v) << 16)); } while(0)
  #define EFR32_EMU_RAM0FEATURE_RAMSIZE_SETVAL(x, v) do { (x) = (((x) & ~0x1f0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_RAM0FEATURE_RAMSIZE_GET(x)     (((x) >> 16) & 0x1f)
/**  */
    #define EFR32_EMU_RAM0FEATURE_RAMSIZE_RAM0       0x00000001
/**  */
    #define EFR32_EMU_RAM0FEATURE_RAMSIZE_RAM0TO1    0x00000003
/**  */
    #define EFR32_EMU_RAM0FEATURE_RAMSIZE_RAM0TO2    0x00000007
/**  */
    #define EFR32_EMU_RAM0FEATURE_RAMSIZE_RAM0TO3    0x0000000f
/**  */
    #define EFR32_EMU_RAM0FEATURE_RAMSIZE_RAM0TO4    0x0000001f

#define EFR32_EMU_STATEDLY0_ADDR                     0x00000184
#define EFR32_EMU_STATEDLY0_MASK                     0x0003f7ff
  #define EFR32_EMU_STATEDLY0_EM23WAITHD(v)        ((v) << 0)
  #define EFR32_EMU_STATEDLY0_EM23WAITHD_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_EMU_STATEDLY0_EM23WAITHD_GET(x)    (((x) >> 0) & 0xf)
  #define EFR32_EMU_STATEDLY0_EM23WAITHDFUNC(v)    ((v) << 4)
  #define EFR32_EMU_STATEDLY0_EM23WAITHDFUNC_SET(x, v) do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define EFR32_EMU_STATEDLY0_EM23WAITHDFUNC_GET(x) (((x) >> 4) & 0x3)
  #define EFR32_EMU_STATEDLY0_EM4WAITHD(v)         ((v) << 6)
  #define EFR32_EMU_STATEDLY0_EM4WAITHD_SET(x, v)  do { (x) = (((x) & ~0x7c0) | ((v) << 6)); } while(0)
  #define EFR32_EMU_STATEDLY0_EM4WAITHD_GET(x)     (((x) >> 6) & 0x1f)
  #define EFR32_EMU_STATEDLY0_EM4WAITHDFUNC(v)     ((v) << 12)
  #define EFR32_EMU_STATEDLY0_EM4WAITHDFUNC_SET(x, v) do { (x) = (((x) & ~0x3000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_STATEDLY0_EM4WAITHDFUNC_GET(x) (((x) >> 12) & 0x3)
  #define EFR32_EMU_STATEDLY0_ISORETDELAY(v)       ((v) << 14)
  #define EFR32_EMU_STATEDLY0_ISORETDELAY_SET(x, v) do { (x) = (((x) & ~0xc000) | ((v) << 14)); } while(0)
  #define EFR32_EMU_STATEDLY0_ISORETDELAY_GET(x)   (((x) >> 14) & 0x3)
  #define EFR32_EMU_STATEDLY0_RETDEASSERTDELAY(v)  ((v) << 16)
  #define EFR32_EMU_STATEDLY0_RETDEASSERTDELAY_SET(x, v) do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_STATEDLY0_RETDEASSERTDELAY_GET(x) (((x) >> 16) & 0x3)

#define EFR32_EMU_STATEDLY1_ADDR                     0x00000188
#define EFR32_EMU_STATEDLY1_MASK                     0xffff07ff
  #define EFR32_EMU_STATEDLY1_EM4SPORDELAY(v)      ((v) << 0)
  #define EFR32_EMU_STATEDLY1_EM4SPORDELAY_SET(x, v) do { (x) = (((x) & ~0x7ff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_STATEDLY1_EM4SPORDELAY_GET(x)  (((x) >> 0) & 0x7ff)
  #define EFR32_EMU_STATEDLY1_SETTLINGDELAY(v)     ((v) << 16)
  #define EFR32_EMU_STATEDLY1_SETTLINGDELAY_SET(x, v) do { (x) = (((x) & ~0x7ff0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_STATEDLY1_SETTLINGDELAY_GET(x) (((x) >> 16) & 0x7ff)
  #define EFR32_EMU_STATEDLY1_EM4HDREGWAIT(v)      ((v) << 27)
  #define EFR32_EMU_STATEDLY1_EM4HDREGWAIT_SET(x, v) do { (x) = (((x) & ~0xf8000000) | ((v) << 27)); } while(0)
  #define EFR32_EMU_STATEDLY1_EM4HDREGWAIT_GET(x)  (((x) >> 27) & 0x1f)

#define EFR32_EMU_VMONCONF_ADDR                      0x0000018c
#define EFR32_EMU_VMONCONF_MASK                      0x0000003f
  #define EFR32_EMU_VMONCONF_CALIBEN               0x00000001
  #define EFR32_EMU_VMONCONF_BUFBIAS               0x00000002
  #define EFR32_EMU_VMONCONF_CURRBOOST             0x00000004
  #define EFR32_EMU_VMONCONF_VREFCAL(v)            ((v) << 3)
  #define EFR32_EMU_VMONCONF_VREFCAL_SET(x, v)     do { (x) = (((x) & ~0x38) | ((v) << 3)); } while(0)
  #define EFR32_EMU_VMONCONF_VREFCAL_GET(x)        (((x) >> 3) & 0x7)

#define EFR32_EMU_TESTLOCK_ADDR                      0x00000190
#define EFR32_EMU_TESTLOCK_MASK                      0x0000ffff
  #define EFR32_EMU_TESTLOCK_LOCKKEY(v)            ((EFR32_EMU_TESTLOCK_LOCKKEY_##v) << 0)
  #define EFR32_EMU_TESTLOCK_LOCKKEY_SET(x, v)     do { (x) = (((x) & ~0xffff) | ((EFR32_EMU_TESTLOCK_LOCKKEY_##v) << 0)); } while(0)
  #define EFR32_EMU_TESTLOCK_LOCKKEY_SETVAL(x, v)  do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TESTLOCK_LOCKKEY_GET(x)        (((x) >> 0) & 0xffff)
/**  */
    #define EFR32_EMU_TESTLOCK_LOCKKEY_UNLOCKED      0x00000000
/**  */
    #define EFR32_EMU_TESTLOCK_LOCKKEY_LOCKED        0x00000001

#define EFR32_EMU_SCANCTRL_ADDR                      0x00000194
#define EFR32_EMU_SCANCTRL_MASK                      0x0000001e
  #define EFR32_EMU_SCANCTRL_SCANTEST_EN           0x00000002
  #define EFR32_EMU_SCANCTRL_SCAN_PIN_MODE         0x00000004
  #define EFR32_EMU_SCANCTRL_SCAN_DRIVE_MODE       0x00000008
  #define EFR32_EMU_SCANCTRL_ISO_OVERRIDE_EN       0x00000010

#define EFR32_EMU_TESTCTRL_ADDR                      0x00000198
#define EFR32_EMU_TESTCTRL_MASK                      0xff3f3fc7
  #define EFR32_EMU_TESTCTRL_EXPORT_RESET          0x00000001
  #define EFR32_EMU_TESTCTRL_HARD_PIN_RESET_OVERRIDE 0x00000002
  #define EFR32_EMU_TESTCTRL_MASK_EXPORT_RESET     0x00000004
  #define EFR32_EMU_TESTCTRL_RAW_BOD_SEL           0x00000040
  #define EFR32_EMU_TESTCTRL_BOD_MASK              0x00000080
  #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0(v)      ((EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_##v) << 8)
  #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_SET(x, v) do { (x) = (((x) & ~0x3f00) | ((EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_##v) << 8)); } while(0)
  #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_SETVAL(x, v) do { (x) = (((x) & ~0x3f00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_GET(x)  (((x) >> 8) & 0x3f)
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_POR     0x00000000
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_AVDDEM4BOD 0x00000001
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_AVDDBOD 0x00000002
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_DVDDBOD 0x00000003
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_FLASHBOD 0x00000004
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_DEC0BOD 0x00000005
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_DEC1BOD 0x00000006
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_VMONAVDD 0x00000007
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_VMONALTAVDD 0x00000008
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_VMONDVDD 0x00000009
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_VMONIO0 0x0000000a
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_VMONFVDD 0x0000000c
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_LEGACYPOR 0x0000000d
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_BIASRDY 0x0000000e
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_DCDCCMPRAW 0x0000000f
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_DCDCCMPOUT 0x00000010
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_DCDCTESTCLK 0x00000011
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_DCDCRCOCAL 0x00000012
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_EM01ACTIVE 0x00000013
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_EM23REQ 0x00000014
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_EM23ACTIVE 0x00000015
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_EM4ACTIVE 0x00000016
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_HDREGBIAS 0x00000017
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_HDREGFUNC 0x00000018
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_HDREGVREG 0x00000019
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_HDREGVREGRDY 0x0000001a
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_HDREGSW 0x0000001b
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_LDREGEN 0x0000001c
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_LDREGSW 0x0000001d
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_PD01DIS 0x0000001e
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_PD02DIS 0x0000001f
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_DECBODRSTPTR 0x00000020
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL0_EMUOSC  0x00000021
  #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1(v)      ((EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_##v) << 16)
  #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_SET(x, v) do { (x) = (((x) & ~0x3f0000) | ((EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_##v) << 16)); } while(0)
  #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_SETVAL(x, v) do { (x) = (((x) & ~0x3f0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_GET(x)  (((x) >> 16) & 0x3f)
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_POR     0x00000000
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_AVDDEM4BOD 0x00000001
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_AVDDBOD 0x00000002
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_DVDDBOD 0x00000003
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_FLASHBOD 0x00000004
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_DEC0BOD 0x00000005
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_DEC1BOD 0x00000006
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_VMONAVDD 0x00000007
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_VMONALTAVDD 0x00000008
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_VMONDVDD 0x00000009
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_VMONIO0 0x0000000a
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_VMONFVDD 0x0000000c
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_LEGACYPOR 0x0000000d
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_BIASRDY 0x0000000e
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_DCDCCMPRAW 0x0000000f
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_DCDCCMPOUT 0x00000010
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_DCDCTESTCLK 0x00000011
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_DCDCRCOCAL 0x00000012
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_EM01ACTIVE 0x00000013
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_EM23REQ 0x00000014
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_EM23ACTIVE 0x00000015
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_EM4ACTIVE 0x00000016
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_HDREGBIAS 0x00000017
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_HDREGFUNC 0x00000018
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_HDREGVREG 0x00000019
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_HDREGVREGRDY 0x0000001a
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_HDREGSW 0x0000001b
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_LDREGEN 0x0000001c
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_LDREGSW 0x0000001d
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_PD01DIS 0x0000001e
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_PD02DIS 0x0000001f
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_DECBODRSTPTR 0x00000020
/**  */
    #define EFR32_EMU_TESTCTRL_CMCTRLPRSSEL1_EMUOSC  0x00000021
  #define EFR32_EMU_TESTCTRL_DVDD_DSCHRG           0x01000000
  #define EFR32_EMU_TESTCTRL_PD1_DSCHRG            0x02000000
  #define EFR32_EMU_TESTCTRL_BIAS_OVERRIDE_EN      0x04000000
  #define EFR32_EMU_TESTCTRL_POWERLOSSDISABLE      0x08000000
  #define EFR32_EMU_TESTCTRL_FLASH_PWR_SW_OVR      0x10000000
  #define EFR32_EMU_TESTCTRL_EMUOSCEN              0x20000000
  #define EFR32_EMU_TESTCTRL_EM234FLASHPWRDOWNDIS  0x40000000
  #define EFR32_EMU_TESTCTRL_LDREGDISMASK          0x80000000

#define EFR32_EMU_BIASTESTCTRL_ADDR                  0x0000019c
#define EFR32_EMU_BIASTESTCTRL_MASK                  0x01bff37d
  #define EFR32_EMU_BIASTESTCTRL_GMC_CALIB_START   0x00000001
  #define EFR32_EMU_BIASTESTCTRL_FORCE_GMC_CAL_REQ 0x00000004
  #define EFR32_EMU_BIASTESTCTRL_BIAS_RIP_RESET    0x00000008
  #define EFR32_EMU_BIASTESTCTRL_BIAS_RIP_OVR      0x00000010
  #define EFR32_EMU_BIASTESTCTRL_BIAS_RIP_OVR_CLK  0x00000020
  #define EFR32_EMU_BIASTESTCTRL_BIAS_GMC_CALIB_OVR 0x00000040
  #define EFR32_EMU_BIASTESTCTRL_BIAS_DLY_SEL(v)   ((v) << 8)
  #define EFR32_EMU_BIASTESTCTRL_BIAS_DLY_SEL_SET(x, v) do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define EFR32_EMU_BIASTESTCTRL_BIAS_DLY_SEL_GET(x) (((x) >> 8) & 0x3)
  #define EFR32_EMU_BIASTESTCTRL_GMC_CALIB_OVR(v)  ((v) << 12)
  #define EFR32_EMU_BIASTESTCTRL_GMC_CALIB_OVR_SET(x, v) do { (x) = (((x) & ~0xff000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_BIASTESTCTRL_GMC_CALIB_OVR_GET(x) (((x) >> 12) & 0xff)
  #define EFR32_EMU_BIASTESTCTRL_TM_BIASRDY_MASK   0x00100000
  #define EFR32_EMU_BIASTESTCTRL_BLANK_BIAS_RDY    0x00200000
  #define EFR32_EMU_BIASTESTCTRL_OVR_BIAS_RDY_EN   0x00800000
  #define EFR32_EMU_BIASTESTCTRL_OVR_BIAS_EN       0x01000000

#define EFR32_EMU_TESTCTRLANAISO_ADDR                0x000001a0
#define EFR32_EMU_TESTCTRLANAISO_MASK                0xc0787fee
  #define EFR32_EMU_TESTCTRLANAISO_ISO_LFRCO       0x00000002
  #define EFR32_EMU_TESTCTRLANAISO_ISO_LFXO        0x00000004
  #define EFR32_EMU_TESTCTRLANAISO_ISO_ULFRCO      0x00000008
  #define EFR32_EMU_TESTCTRLANAISO_ISO_HFRCO       0x00000020
  #define EFR32_EMU_TESTCTRLANAISO_ISO_AUXHFRCO    0x00000040
  #define EFR32_EMU_TESTCTRLANAISO_ISO_EMUOSC      0x00000080
  #define EFR32_EMU_TESTCTRLANAISO_ISO_BIAS        0x00000100
  #define EFR32_EMU_TESTCTRLANAISO_ISO_PORBOD      0x00000200
  #define EFR32_EMU_TESTCTRLANAISO_ISO_CMP         0x00000400
  #define EFR32_EMU_TESTCTRLANAISO_ISO_ADC         0x00000800
  #define EFR32_EMU_TESTCTRLANAISO_ISO_DAC         0x00001000
  #define EFR32_EMU_TESTCTRLANAISO_ISO_AMUXCP      0x00002000
  #define EFR32_EMU_TESTCTRLANAISO_ISO_DCDC        0x00004000
  #define EFR32_EMU_TESTCTRLANAISO_ISO_BCLFRCO     0x00080000
  #define EFR32_EMU_TESTCTRLANAISO_ISO_FLASHVREF   0x00100000
  #define EFR32_EMU_TESTCTRLANAISO_ISO_CSEN        0x00200000
  #define EFR32_EMU_TESTCTRLANAISO_ISO_WFXO        0x00400000
  #define EFR32_EMU_TESTCTRLANAISO_ISO_RADIO       0x40000000
  #define EFR32_EMU_TESTCTRLANAISO_ISO_LVDS        0x80000000

#define EFR32_EMU_EM01COUNTERWAIT_ADDR               0x000001a4
#define EFR32_EMU_EM01COUNTERWAIT_MASK               0x0007ffff
  #define EFR32_EMU_EM01COUNTERWAIT_BODSETTLEWAIT(v) ((v) << 0)
  #define EFR32_EMU_EM01COUNTERWAIT_BODSETTLEWAIT_SET(x, v) do { (x) = (((x) & ~0x1f) | ((v) << 0)); } while(0)
  #define EFR32_EMU_EM01COUNTERWAIT_BODSETTLEWAIT_GET(x) (((x) >> 0) & 0x1f)
  #define EFR32_EMU_EM01COUNTERWAIT_HDREGSTEPWAIT(v) ((v) << 5)
  #define EFR32_EMU_EM01COUNTERWAIT_HDREGSTEPWAIT_SET(x, v) do { (x) = (((x) & ~0x3e0) | ((v) << 5)); } while(0)
  #define EFR32_EMU_EM01COUNTERWAIT_HDREGSTEPWAIT_GET(x) (((x) >> 5) & 0x1f)
  #define EFR32_EMU_EM01COUNTERWAIT_VSBODINTWAIT(v) ((v) << 10)
  #define EFR32_EMU_EM01COUNTERWAIT_VSBODINTWAIT_SET(x, v) do { (x) = (((x) & ~0x7c00) | ((v) << 10)); } while(0)
  #define EFR32_EMU_EM01COUNTERWAIT_VSBODINTWAIT_GET(x) (((x) >> 10) & 0x1f)
  #define EFR32_EMU_EM01COUNTERWAIT_FLASHVREFBYPASSDISWAIT(v) ((v) << 15)
  #define EFR32_EMU_EM01COUNTERWAIT_FLASHVREFBYPASSDISWAIT_SET(x, v) do { (x) = (((x) & ~0x78000) | ((v) << 15)); } while(0)
  #define EFR32_EMU_EM01COUNTERWAIT_FLASHVREFBYPASSDISWAIT_GET(x) (((x) >> 15) & 0xf)

#define EFR32_EMU_RAM1FEATURE_ADDR                   0x000001a8
#define EFR32_EMU_RAM1FEATURE_MASK                   0x00000003
  #define EFR32_EMU_RAM1FEATURE_RAMSIZE(v)         ((EFR32_EMU_RAM1FEATURE_RAMSIZE_##v) << 0)
  #define EFR32_EMU_RAM1FEATURE_RAMSIZE_SET(x, v)  do { (x) = (((x) & ~0x3) | ((EFR32_EMU_RAM1FEATURE_RAMSIZE_##v) << 0)); } while(0)
  #define EFR32_EMU_RAM1FEATURE_RAMSIZE_SETVAL(x, v) do { (x) = (((x) & ~0x3) | ((v) << 0)); } while(0)
  #define EFR32_EMU_RAM1FEATURE_RAMSIZE_GET(x)     (((x) >> 0) & 0x3)
/**  */
    #define EFR32_EMU_RAM1FEATURE_RAMSIZE_RAM0       0x00000001
/**  */
    #define EFR32_EMU_RAM1FEATURE_RAMSIZE_RAM0TO1    0x00000003

#define EFR32_EMU_RAM2FEATURE_ADDR                   0x000001ac
#define EFR32_EMU_RAM2FEATURE_MASK                   0x00000001
  #define EFR32_EMU_RAM2FEATURE_RAMSIZE(v)         ((EFR32_EMU_RAM2FEATURE_RAMSIZE_##v) << 0)
  #define EFR32_EMU_RAM2FEATURE_RAMSIZE_SET(x, v)  do { (x) = (((x) & ~0x1) | ((EFR32_EMU_RAM2FEATURE_RAMSIZE_##v) << 0)); } while(0)
  #define EFR32_EMU_RAM2FEATURE_RAMSIZE_SETVAL(x, v) do { (x) = (((x) & ~0x1) | ((v) << 0)); } while(0)
  #define EFR32_EMU_RAM2FEATURE_RAMSIZE_GET(x)     (((x) >> 0) & 0x1)
/**  */
    #define EFR32_EMU_RAM2FEATURE_RAMSIZE_RAM0       0x00000001

#define EFR32_EMU_RAMBIASCONF_ADDR                   0x000001b0
#define EFR32_EMU_RAMBIASCONF_MASK                   0x0000000f
  #define EFR32_EMU_RAMBIASCONF_RAMBIASCTRL(v)     ((EFR32_EMU_RAMBIASCONF_RAMBIASCTRL_##v) << 0)
  #define EFR32_EMU_RAMBIASCONF_RAMBIASCTRL_SET(x, v) do { (x) = (((x) & ~0xf) | ((EFR32_EMU_RAMBIASCONF_RAMBIASCTRL_##v) << 0)); } while(0)
  #define EFR32_EMU_RAMBIASCONF_RAMBIASCTRL_SETVAL(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_EMU_RAMBIASCONF_RAMBIASCTRL_GET(x) (((x) >> 0) & 0xf)
/**  */
    #define EFR32_EMU_RAMBIASCONF_RAMBIASCTRL_NONE   0x00000000
/**  */
    #define EFR32_EMU_RAMBIASCONF_RAMBIASCTRL_VSB100 0x00000001
/**  */
    #define EFR32_EMU_RAMBIASCONF_RAMBIASCTRL_VSB200 0x00000002
/**  */
    #define EFR32_EMU_RAMBIASCONF_RAMBIASCTRL_VSB300 0x00000004
/**  */
    #define EFR32_EMU_RAMBIASCONF_RAMBIASCTRL_VSB400 0x00000008

#define EFR32_EMU_TGTRAMRM_ADDR                      0x000001b4
#define EFR32_EMU_TGTRAMRM_MASK                      0x000f0f0f
  #define EFR32_EMU_TGTRAMRM_TGTRAMRM0(v)          ((v) << 0)
  #define EFR32_EMU_TGTRAMRM_TGTRAMRM0_SET(x, v)   do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TGTRAMRM_TGTRAMRM0_GET(x)      (((x) >> 0) & 0xf)
  #define EFR32_EMU_TGTRAMRM_TGTRAMRM1(v)          ((v) << 8)
  #define EFR32_EMU_TGTRAMRM_TGTRAMRM1_SET(x, v)   do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TGTRAMRM_TGTRAMRM1_GET(x)      (((x) >> 8) & 0xf)
  #define EFR32_EMU_TGTRAMRM_TGTRAMRM2(v)          ((v) << 16)
  #define EFR32_EMU_TGTRAMRM_TGTRAMRM2_SET(x, v)   do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_TGTRAMRM_TGTRAMRM2_GET(x)      (((x) >> 16) & 0xf)

#define EFR32_EMU_TGTDECBODTHR_ADDR                  0x000001b8
#define EFR32_EMU_TGTDECBODTHR_MASK                  0x000f0f0f
  #define EFR32_EMU_TGTDECBODTHR_TGTDECBODTHR0(v)  ((v) << 0)
  #define EFR32_EMU_TGTDECBODTHR_TGTDECBODTHR0_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TGTDECBODTHR_TGTDECBODTHR0_GET(x) (((x) >> 0) & 0xf)
  #define EFR32_EMU_TGTDECBODTHR_TGTDECBODTHR1(v)  ((v) << 8)
  #define EFR32_EMU_TGTDECBODTHR_TGTDECBODTHR1_SET(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TGTDECBODTHR_TGTDECBODTHR1_GET(x) (((x) >> 8) & 0xf)
  #define EFR32_EMU_TGTDECBODTHR_TGTDECBODTHR2(v)  ((v) << 16)
  #define EFR32_EMU_TGTDECBODTHR_TGTDECBODTHR2_SET(x, v) do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_TGTDECBODTHR_TGTDECBODTHR2_GET(x) (((x) >> 16) & 0xf)

#define EFR32_EMU_TGTHDREGTRIM_ADDR                  0x000001bc
#define EFR32_EMU_TGTHDREGTRIM_MASK                  0x003f3f3f
  #define EFR32_EMU_TGTHDREGTRIM_TGTHDREGTRIM0(v)  ((v) << 0)
  #define EFR32_EMU_TGTHDREGTRIM_TGTHDREGTRIM0_SET(x, v) do { (x) = (((x) & ~0x3f) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TGTHDREGTRIM_TGTHDREGTRIM0_GET(x) (((x) >> 0) & 0x3f)
  #define EFR32_EMU_TGTHDREGTRIM_TGTHDREGTRIM1(v)  ((v) << 8)
  #define EFR32_EMU_TGTHDREGTRIM_TGTHDREGTRIM1_SET(x, v) do { (x) = (((x) & ~0x3f00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TGTHDREGTRIM_TGTHDREGTRIM1_GET(x) (((x) >> 8) & 0x3f)
  #define EFR32_EMU_TGTHDREGTRIM_TGTHDREGTRIM2(v)  ((v) << 16)
  #define EFR32_EMU_TGTHDREGTRIM_TGTHDREGTRIM2_SET(x, v) do { (x) = (((x) & ~0x3f0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_TGTHDREGTRIM_TGTHDREGTRIM2_GET(x) (((x) >> 16) & 0x3f)

#define EFR32_EMU_TGTDCDCLNVCTRL_ADDR                0x000001c0
#define EFR32_EMU_TGTDCDCLNVCTRL_MASK                0x007f7f7f
  #define EFR32_EMU_TGTDCDCLNVCTRL_TGTDCDCLNVCTRL0(v) ((v) << 0)
  #define EFR32_EMU_TGTDCDCLNVCTRL_TGTDCDCLNVCTRL0_SET(x, v) do { (x) = (((x) & ~0x7f) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TGTDCDCLNVCTRL_TGTDCDCLNVCTRL0_GET(x) (((x) >> 0) & 0x7f)
  #define EFR32_EMU_TGTDCDCLNVCTRL_TGTDCDCLNVCTRL1(v) ((v) << 8)
  #define EFR32_EMU_TGTDCDCLNVCTRL_TGTDCDCLNVCTRL1_SET(x, v) do { (x) = (((x) & ~0x7f00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TGTDCDCLNVCTRL_TGTDCDCLNVCTRL1_GET(x) (((x) >> 8) & 0x7f)
  #define EFR32_EMU_TGTDCDCLNVCTRL_TGTDCDCLNVCTRL2(v) ((v) << 16)
  #define EFR32_EMU_TGTDCDCLNVCTRL_TGTDCDCLNVCTRL2_SET(x, v) do { (x) = (((x) & ~0x7f0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_TGTDCDCLNVCTRL_TGTDCDCLNVCTRL2_GET(x) (((x) >> 16) & 0x7f)

#define EFR32_EMU_TGTLDREGTRIM_ADDR                  0x000001c4
#define EFR32_EMU_TGTLDREGTRIM_MASK                  0x001f1f1f
  #define EFR32_EMU_TGTLDREGTRIM_TGTLDREGTRIM0(v)  ((v) << 0)
  #define EFR32_EMU_TGTLDREGTRIM_TGTLDREGTRIM0_SET(x, v) do { (x) = (((x) & ~0x1f) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TGTLDREGTRIM_TGTLDREGTRIM0_GET(x) (((x) >> 0) & 0x1f)
  #define EFR32_EMU_TGTLDREGTRIM_TGTLDREGTRIM1(v)  ((v) << 8)
  #define EFR32_EMU_TGTLDREGTRIM_TGTLDREGTRIM1_SET(x, v) do { (x) = (((x) & ~0x1f00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TGTLDREGTRIM_TGTLDREGTRIM1_GET(x) (((x) >> 8) & 0x1f)
  #define EFR32_EMU_TGTLDREGTRIM_TGTLDREGTRIM2(v)  ((v) << 16)
  #define EFR32_EMU_TGTLDREGTRIM_TGTLDREGTRIM2_SET(x, v) do { (x) = (((x) & ~0x1f0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_TGTLDREGTRIM_TGTLDREGTRIM2_GET(x) (((x) >> 16) & 0x1f)

#define EFR32_EMU_TGTDCDCLPVCTRL_ADDR                0x000001c8
#define EFR32_EMU_TGTDCDCLPVCTRL_MASK                0x000000ff
  #define EFR32_EMU_TGTDCDCLPVCTRL_TGTDCDCLPVCTRL0(v) ((v) << 0)
  #define EFR32_EMU_TGTDCDCLPVCTRL_TGTDCDCLPVCTRL0_SET(x, v) do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TGTDCDCLPVCTRL_TGTDCDCLPVCTRL0_GET(x) (((x) >> 0) & 0xff)

#define EFR32_EMU_TGTRREGTRIM_ADDR                   0x000001cc
#define EFR32_EMU_TGTRREGTRIM_MASK                   0x00ffffff
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIML0(v)   ((v) << 0)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIML0_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIML0_GET(x) (((x) >> 0) & 0xf)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIMH0(v)   ((v) << 4)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIMH0_SET(x, v) do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIMH0_GET(x) (((x) >> 4) & 0xf)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIML1(v)   ((v) << 8)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIML1_SET(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIML1_GET(x) (((x) >> 8) & 0xf)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIMH1(v)   ((v) << 12)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIMH1_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIMH1_GET(x) (((x) >> 12) & 0xf)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIML2(v)   ((v) << 16)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIML2_SET(x, v) do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIML2_GET(x) (((x) >> 16) & 0xf)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIMH2(v)   ((v) << 20)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIMH2_SET(x, v) do { (x) = (((x) & ~0xf00000) | ((v) << 20)); } while(0)
  #define EFR32_EMU_TGTRREGTRIM_TGTRREGTRIMH2_GET(x) (((x) >> 20) & 0xf)

#define EFR32_EMU_TGTHFRCOCTRL_ADDR                  0x000001d0
#define EFR32_EMU_TGTHFRCOCTRL_MASK                  0xffff3f7f
  #define EFR32_EMU_TGTHFRCOCTRL_TUNING(v)         ((v) << 0)
  #define EFR32_EMU_TGTHFRCOCTRL_TUNING_SET(x, v)  do { (x) = (((x) & ~0x7f) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TGTHFRCOCTRL_TUNING_GET(x)     (((x) >> 0) & 0x7f)
  #define EFR32_EMU_TGTHFRCOCTRL_FINETUNING(v)     ((v) << 8)
  #define EFR32_EMU_TGTHFRCOCTRL_FINETUNING_SET(x, v) do { (x) = (((x) & ~0x3f00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TGTHFRCOCTRL_FINETUNING_GET(x) (((x) >> 8) & 0x3f)
  #define EFR32_EMU_TGTHFRCOCTRL_FREQRANGE(v)      ((v) << 16)
  #define EFR32_EMU_TGTHFRCOCTRL_FREQRANGE_SET(x, v) do { (x) = (((x) & ~0x1f0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_TGTHFRCOCTRL_FREQRANGE_GET(x)  (((x) >> 16) & 0x1f)
  #define EFR32_EMU_TGTHFRCOCTRL_CMPBIAS(v)        ((v) << 21)
  #define EFR32_EMU_TGTHFRCOCTRL_CMPBIAS_SET(x, v) do { (x) = (((x) & ~0xe00000) | ((v) << 21)); } while(0)
  #define EFR32_EMU_TGTHFRCOCTRL_CMPBIAS_GET(x)    (((x) >> 21) & 0x7)
  #define EFR32_EMU_TGTHFRCOCTRL_LDOHP             0x01000000
  #define EFR32_EMU_TGTHFRCOCTRL_CLKDIV(v)         ((EFR32_EMU_TGTHFRCOCTRL_CLKDIV_##v) << 25)
  #define EFR32_EMU_TGTHFRCOCTRL_CLKDIV_SET(x, v)  do { (x) = (((x) & ~0x6000000) | ((EFR32_EMU_TGTHFRCOCTRL_CLKDIV_##v) << 25)); } while(0)
  #define EFR32_EMU_TGTHFRCOCTRL_CLKDIV_SETVAL(x, v) do { (x) = (((x) & ~0x6000000) | ((v) << 25)); } while(0)
  #define EFR32_EMU_TGTHFRCOCTRL_CLKDIV_GET(x)     (((x) >> 25) & 0x3)
/**  */
    #define EFR32_EMU_TGTHFRCOCTRL_CLKDIV_DIV1       0x00000000
/**  */
    #define EFR32_EMU_TGTHFRCOCTRL_CLKDIV_DIV2       0x00000001
/**  */
    #define EFR32_EMU_TGTHFRCOCTRL_CLKDIV_DIV4       0x00000002
  #define EFR32_EMU_TGTHFRCOCTRL_FINETUNINGEN      0x08000000
  #define EFR32_EMU_TGTHFRCOCTRL_VREFTC(v)         ((v) << 28)
  #define EFR32_EMU_TGTHFRCOCTRL_VREFTC_SET(x, v)  do { (x) = (((x) & ~0xf0000000) | ((v) << 28)); } while(0)
  #define EFR32_EMU_TGTHFRCOCTRL_VREFTC_GET(x)     (((x) >> 28) & 0xf)

#define EFR32_EMU_RREGCALIB_ADDR                     0x000001d4
#define EFR32_EMU_RREGCALIB_MASK                     0x00ff00ff
  #define EFR32_EMU_RREGCALIB_RREG_HIGHSIDE_TRIM(v) ((v) << 0)
  #define EFR32_EMU_RREGCALIB_RREG_HIGHSIDE_TRIM_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_EMU_RREGCALIB_RREG_HIGHSIDE_TRIM_GET(x) (((x) >> 0) & 0xf)
  #define EFR32_EMU_RREGCALIB_RREG_LOWSIDE_TRIM(v) ((v) << 4)
  #define EFR32_EMU_RREGCALIB_RREG_LOWSIDE_TRIM_SET(x, v) do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define EFR32_EMU_RREGCALIB_RREG_LOWSIDE_TRIM_GET(x) (((x) >> 4) & 0xf)
  #define EFR32_EMU_RREGCALIB_RREG_IDAC_TRIMH(v)   ((v) << 16)
  #define EFR32_EMU_RREGCALIB_RREG_IDAC_TRIMH_SET(x, v) do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_RREGCALIB_RREG_IDAC_TRIMH_GET(x) (((x) >> 16) & 0xf)
  #define EFR32_EMU_RREGCALIB_RREG_IDAC_TRIML(v)   ((v) << 20)
  #define EFR32_EMU_RREGCALIB_RREG_IDAC_TRIML_SET(x, v) do { (x) = (((x) & ~0xf00000) | ((v) << 20)); } while(0)
  #define EFR32_EMU_RREGCALIB_RREG_IDAC_TRIML_GET(x) (((x) >> 20) & 0xf)

#define EFR32_EMU_RREGTEST_ADDR                      0x000001d8
#define EFR32_EMU_RREGTEST_MASK                      0x000000ff
  #define EFR32_EMU_RREGTEST_RREG_SW_GATE_DRAIN_DIS 0x00000001
  #define EFR32_EMU_RREGTEST_RREG_HIGHSIDE_SW_DIS  0x00000002
  #define EFR32_EMU_RREGTEST_RREG_LOWSIDE_SW_DIS   0x00000004
  #define EFR32_EMU_RREGTEST_RREG_BIAS_5NA_P_EN    0x00000008
  #define EFR32_EMU_RREGTEST_RREG_CAL_EN           0x00000010
  #define EFR32_EMU_RREGTEST_RREG_CAL_RST          0x00000020
  #define EFR32_EMU_RREGTEST_RREG_STATUS_CMPOUT_HIGH 0x00000040
  #define EFR32_EMU_RREGTEST_RREG_STATUS_CMPOUT_LOW 0x00000080

#define EFR32_EMU_RREGOVERRIDE_ADDR                  0x000001dc
#define EFR32_EMU_RREGOVERRIDE_MASK                  0x0000003f
  #define EFR32_EMU_RREGOVERRIDE_RREG_OVERRIDE_EN  0x00000001
  #define EFR32_EMU_RREGOVERRIDE_OVR_RREG_HIGHSIDE_PU_DIS 0x00000002
  #define EFR32_EMU_RREGOVERRIDE_OVR_RREG_HIGHSIDE_PU_WEAK_DIS 0x00000004
  #define EFR32_EMU_RREGOVERRIDE_OVR_RREG_LOWSIDE_PD_DIS 0x00000008
  #define EFR32_EMU_RREGOVERRIDE_OVR_RREG_LOWSIDE_PD_WEAK_DIS 0x00000010
  #define EFR32_EMU_RREGOVERRIDE_OVR_RREG_EN       0x00000020

#define EFR32_EMU_BCOSCENCMD_ADDR                    0x000001e0
#define EFR32_EMU_BCOSCENCMD_MASK                    0x00000003
  #define EFR32_EMU_BCOSCENCMD_BCLFRCOEN           0x00000001
  #define EFR32_EMU_BCOSCENCMD_BCLFRCODIS          0x00000002

#define EFR32_EMU_BCLFRCOCTRL_ADDR                   0x000001e4
#define EFR32_EMU_BCLFRCOCTRL_MASK                   0xf30701ff
  #define EFR32_EMU_BCLFRCOCTRL_TUNING(v)          ((v) << 0)
  #define EFR32_EMU_BCLFRCOCTRL_TUNING_SET(x, v)   do { (x) = (((x) & ~0x1ff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_BCLFRCOCTRL_TUNING_GET(x)      (((x) >> 0) & 0x1ff)
  #define EFR32_EMU_BCLFRCOCTRL_ENVREF             0x00010000
  #define EFR32_EMU_BCLFRCOCTRL_ENCHOP             0x00020000
  #define EFR32_EMU_BCLFRCOCTRL_ENDEM              0x00040000
  #define EFR32_EMU_BCLFRCOCTRL_TIMEOUT(v)         ((EFR32_EMU_BCLFRCOCTRL_TIMEOUT_##v) << 24)
  #define EFR32_EMU_BCLFRCOCTRL_TIMEOUT_SET(x, v)  do { (x) = (((x) & ~0x3000000) | ((EFR32_EMU_BCLFRCOCTRL_TIMEOUT_##v) << 24)); } while(0)
  #define EFR32_EMU_BCLFRCOCTRL_TIMEOUT_SETVAL(x, v) do { (x) = (((x) & ~0x3000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_BCLFRCOCTRL_TIMEOUT_GET(x)     (((x) >> 24) & 0x3)
/**  */
    #define EFR32_EMU_BCLFRCOCTRL_TIMEOUT_E2CYCLES   0x00000000
/**  */
    #define EFR32_EMU_BCLFRCOCTRL_TIMEOUT_E16CYCLES  0x00000001
/**  */
    #define EFR32_EMU_BCLFRCOCTRL_TIMEOUT_E32CYCLES  0x00000002
  #define EFR32_EMU_BCLFRCOCTRL_GMCCURTUNE(v)      ((v) << 28)
  #define EFR32_EMU_BCLFRCOCTRL_GMCCURTUNE_SET(x, v) do { (x) = (((x) & ~0xf0000000) | ((v) << 28)); } while(0)
  #define EFR32_EMU_BCLFRCOCTRL_GMCCURTUNE_GET(x)  (((x) >> 28) & 0xf)

#define EFR32_EMU_TESTBCLFRCOCTRL_ADDR               0x000001e8
#define EFR32_EMU_TESTBCLFRCOCTRL_MASK               0x0ff1fff3
  #define EFR32_EMU_TESTBCLFRCOCTRL_DISOSC         0x00000001
  #define EFR32_EMU_TESTBCLFRCOCTRL_DISSYNC        0x00000002
  #define EFR32_EMU_TESTBCLFRCOCTRL_MODE(v)        ((EFR32_EMU_TESTBCLFRCOCTRL_MODE_##v) << 4)
  #define EFR32_EMU_TESTBCLFRCOCTRL_MODE_SET(x, v) do { (x) = (((x) & ~0x30) | ((EFR32_EMU_TESTBCLFRCOCTRL_MODE_##v) << 4)); } while(0)
  #define EFR32_EMU_TESTBCLFRCOCTRL_MODE_SETVAL(x, v) do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define EFR32_EMU_TESTBCLFRCOCTRL_MODE_GET(x)    (((x) >> 4) & 0x3)
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_MODE_E32KHZDUTY50 0x00000000
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_MODE_E64KHZDUTY5 0x00000001
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_MODE_E16KHZDUTY50 0x00000002
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_MODE_E32KHZDUTY5 0x00000003
  #define EFR32_EMU_TESTBCLFRCOCTRL_SELCLKDIV(v)   ((EFR32_EMU_TESTBCLFRCOCTRL_SELCLKDIV_##v) << 6)
  #define EFR32_EMU_TESTBCLFRCOCTRL_SELCLKDIV_SET(x, v) do { (x) = (((x) & ~0xc0) | ((EFR32_EMU_TESTBCLFRCOCTRL_SELCLKDIV_##v) << 6)); } while(0)
  #define EFR32_EMU_TESTBCLFRCOCTRL_SELCLKDIV_SETVAL(x, v) do { (x) = (((x) & ~0xc0) | ((v) << 6)); } while(0)
  #define EFR32_EMU_TESTBCLFRCOCTRL_SELCLKDIV_GET(x) (((x) >> 6) & 0x3)
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_SELCLKDIV_DIV1 0x00000000
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_SELCLKDIV_DIV2 0x00000001
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_SELCLKDIV_DIV4 0x00000002
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_SELCLKDIV_DIV8 0x00000003
  #define EFR32_EMU_TESTBCLFRCOCTRL_VREFUPDATE(v)  ((EFR32_EMU_TESTBCLFRCOCTRL_VREFUPDATE_##v) << 8)
  #define EFR32_EMU_TESTBCLFRCOCTRL_VREFUPDATE_SET(x, v) do { (x) = (((x) & ~0x300) | ((EFR32_EMU_TESTBCLFRCOCTRL_VREFUPDATE_##v) << 8)); } while(0)
  #define EFR32_EMU_TESTBCLFRCOCTRL_VREFUPDATE_SETVAL(x, v) do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TESTBCLFRCOCTRL_VREFUPDATE_GET(x) (((x) >> 8) & 0x3)
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_VREFUPDATE_E32CYCLES 0x00000000
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_VREFUPDATE_E64CYCLES 0x00000001
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_VREFUPDATE_E128CYCLES 0x00000002
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_VREFUPDATE_E256CYCLES 0x00000003
  #define EFR32_EMU_TESTBCLFRCOCTRL_VREFPRECH(v)   ((EFR32_EMU_TESTBCLFRCOCTRL_VREFPRECH_##v) << 10)
  #define EFR32_EMU_TESTBCLFRCOCTRL_VREFPRECH_SET(x, v) do { (x) = (((x) & ~0xc00) | ((EFR32_EMU_TESTBCLFRCOCTRL_VREFPRECH_##v) << 10)); } while(0)
  #define EFR32_EMU_TESTBCLFRCOCTRL_VREFPRECH_SETVAL(x, v) do { (x) = (((x) & ~0xc00) | ((v) << 10)); } while(0)
  #define EFR32_EMU_TESTBCLFRCOCTRL_VREFPRECH_GET(x) (((x) >> 10) & 0x3)
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_VREFPRECH_E2CYCLES 0x00000000
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_VREFPRECH_E4CYCLES 0x00000001
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_VREFPRECH_E8CYCLES 0x00000002
/**  */
    #define EFR32_EMU_TESTBCLFRCOCTRL_VREFPRECH_E16CYCLES 0x00000003
  #define EFR32_EMU_TESTBCLFRCOCTRL_FLIPCHOP       0x00001000
  #define EFR32_EMU_TESTBCLFRCOCTRL_DEMCLKSEL      0x00002000
  #define EFR32_EMU_TESTBCLFRCOCTRL_WELLBUFDIS     0x00004000
  #define EFR32_EMU_TESTBCLFRCOCTRL_FORCECOMP      0x00008000
  #define EFR32_EMU_TESTBCLFRCOCTRL_BLOCKIREF      0x00010000
  #define EFR32_EMU_TESTBCLFRCOCTRL_RNSHUNT(v)     ((v) << 20)
  #define EFR32_EMU_TESTBCLFRCOCTRL_RNSHUNT_SET(x, v) do { (x) = (((x) & ~0xf00000) | ((v) << 20)); } while(0)
  #define EFR32_EMU_TESTBCLFRCOCTRL_RNSHUNT_GET(x) (((x) >> 20) & 0xf)
  #define EFR32_EMU_TESTBCLFRCOCTRL_RPSHUNT(v)     ((v) << 24)
  #define EFR32_EMU_TESTBCLFRCOCTRL_RPSHUNT_SET(x, v) do { (x) = (((x) & ~0xf000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_TESTBCLFRCOCTRL_RPSHUNT_GET(x) (((x) >> 24) & 0xf)

#define EFR32_EMU_PORBOD2_ADDR                       0x000001ec
#define EFR32_EMU_PORBOD2_MASK                       0x0000001f
  #define EFR32_EMU_PORBOD2_PORBOD_REFTRIMEM2(v)   ((v) << 0)
  #define EFR32_EMU_PORBOD2_PORBOD_REFTRIMEM2_SET(x, v) do { (x) = (((x) & ~0x1f) | ((v) << 0)); } while(0)
  #define EFR32_EMU_PORBOD2_PORBOD_REFTRIMEM2_GET(x) (((x) >> 0) & 0x1f)

#define EFR32_EMU_FLASHVREFCALIB_ADDR                0x000001f0
#define EFR32_EMU_FLASHVREFCALIB_MASK                0x00067e3f
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_BYPASS_DIS 0x00000001
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_BYPASS_EN 0x00000002
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_BYPASS_STATUS 0x00000004
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_EN    0x00000008
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_SEL(v) ((v) << 4)
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_SEL_SET(x, v) do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_SEL_GET(x) (((x) >> 4) & 0x3)
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_TRIM(v) ((v) << 9)
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_TRIM_SET(x, v) do { (x) = (((x) & ~0x1e00) | ((v) << 9)); } while(0)
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_TRIM_GET(x) (((x) >> 9) & 0xf)
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_VREFDIS_EM23 0x00002000
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_PULLDOWNEN 0x00004000
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_DUTYSCALE(v) ((EFR32_EMU_FLASHVREFCALIB_FLASHVREF_DUTYSCALE_##v) << 17)
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_DUTYSCALE_SET(x, v) do { (x) = (((x) & ~0x60000) | ((EFR32_EMU_FLASHVREFCALIB_FLASHVREF_DUTYSCALE_##v) << 17)); } while(0)
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_DUTYSCALE_SETVAL(x, v) do { (x) = (((x) & ~0x60000) | ((v) << 17)); } while(0)
  #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_DUTYSCALE_GET(x) (((x) >> 17) & 0x3)
/**  */
    #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_DUTYSCALE_DIV1 0x00000000
/**  */
    #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_DUTYSCALE_DIV2 0x00000001
/**  */
    #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_DUTYSCALE_DIV4 0x00000002
/**  */
    #define EFR32_EMU_FLASHVREFCALIB_FLASHVREF_DUTYSCALE_DIV8 0x00000003

#define EFR32_EMU_TEMPLO_THR0_ADDR                   0x00000240
#define EFR32_EMU_TEMPLO_THR0_MASK                   0xffffffff
  #define EFR32_EMU_TEMPLO_THR0_TEMPLO0(v)         ((v) << 0)
  #define EFR32_EMU_TEMPLO_THR0_TEMPLO0_SET(x, v)  do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TEMPLO_THR0_TEMPLO0_GET(x)     (((x) >> 0) & 0xff)
  #define EFR32_EMU_TEMPLO_THR0_TEMPLO1(v)         ((v) << 8)
  #define EFR32_EMU_TEMPLO_THR0_TEMPLO1_SET(x, v)  do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TEMPLO_THR0_TEMPLO1_GET(x)     (((x) >> 8) & 0xff)
  #define EFR32_EMU_TEMPLO_THR0_TEMPLO2(v)         ((v) << 16)
  #define EFR32_EMU_TEMPLO_THR0_TEMPLO2_SET(x, v)  do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_TEMPLO_THR0_TEMPLO2_GET(x)     (((x) >> 16) & 0xff)
  #define EFR32_EMU_TEMPLO_THR0_TEMPLO3(v)         ((v) << 24)
  #define EFR32_EMU_TEMPLO_THR0_TEMPLO3_SET(x, v)  do { (x) = (((x) & ~0xff000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_TEMPLO_THR0_TEMPLO3_GET(x)     (((x) >> 24) & 0xff)

#define EFR32_EMU_TEMPHI_THR0_ADDR                   0x00000244
#define EFR32_EMU_TEMPHI_THR0_MASK                   0xffffffff
  #define EFR32_EMU_TEMPHI_THR0_TEMPHI0(v)         ((v) << 0)
  #define EFR32_EMU_TEMPHI_THR0_TEMPHI0_SET(x, v)  do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TEMPHI_THR0_TEMPHI0_GET(x)     (((x) >> 0) & 0xff)
  #define EFR32_EMU_TEMPHI_THR0_TEMPHI1(v)         ((v) << 8)
  #define EFR32_EMU_TEMPHI_THR0_TEMPHI1_SET(x, v)  do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TEMPHI_THR0_TEMPHI1_GET(x)     (((x) >> 8) & 0xff)
  #define EFR32_EMU_TEMPHI_THR0_TEMPHI2(v)         ((v) << 16)
  #define EFR32_EMU_TEMPHI_THR0_TEMPHI2_SET(x, v)  do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_TEMPHI_THR0_TEMPHI2_GET(x)     (((x) >> 16) & 0xff)
  #define EFR32_EMU_TEMPHI_THR0_TEMPHI3(v)         ((v) << 24)
  #define EFR32_EMU_TEMPHI_THR0_TEMPHI3_SET(x, v)  do { (x) = (((x) & ~0xff000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_TEMPHI_THR0_TEMPHI3_GET(x)     (((x) >> 24) & 0xff)

#define EFR32_EMU_TEMPLO_THR1_ADDR                   0x00000248
#define EFR32_EMU_TEMPLO_THR1_MASK                   0xffffffff
  #define EFR32_EMU_TEMPLO_THR1_TEMPLO4(v)         ((v) << 0)
  #define EFR32_EMU_TEMPLO_THR1_TEMPLO4_SET(x, v)  do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TEMPLO_THR1_TEMPLO4_GET(x)     (((x) >> 0) & 0xff)
  #define EFR32_EMU_TEMPLO_THR1_TEMPLO5(v)         ((v) << 8)
  #define EFR32_EMU_TEMPLO_THR1_TEMPLO5_SET(x, v)  do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TEMPLO_THR1_TEMPLO5_GET(x)     (((x) >> 8) & 0xff)
  #define EFR32_EMU_TEMPLO_THR1_TEMPLO6(v)         ((v) << 16)
  #define EFR32_EMU_TEMPLO_THR1_TEMPLO6_SET(x, v)  do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_TEMPLO_THR1_TEMPLO6_GET(x)     (((x) >> 16) & 0xff)
  #define EFR32_EMU_TEMPLO_THR1_TEMPLO7(v)         ((v) << 24)
  #define EFR32_EMU_TEMPLO_THR1_TEMPLO7_SET(x, v)  do { (x) = (((x) & ~0xff000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_TEMPLO_THR1_TEMPLO7_GET(x)     (((x) >> 24) & 0xff)

#define EFR32_EMU_TEMPHI_THR1_ADDR                   0x0000024c
#define EFR32_EMU_TEMPHI_THR1_MASK                   0xffffffff
  #define EFR32_EMU_TEMPHI_THR1_TEMPHI4(v)         ((v) << 0)
  #define EFR32_EMU_TEMPHI_THR1_TEMPHI4_SET(x, v)  do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TEMPHI_THR1_TEMPHI4_GET(x)     (((x) >> 0) & 0xff)
  #define EFR32_EMU_TEMPHI_THR1_TEMPHI5(v)         ((v) << 8)
  #define EFR32_EMU_TEMPHI_THR1_TEMPHI5_SET(x, v)  do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_TEMPHI_THR1_TEMPHI5_GET(x)     (((x) >> 8) & 0xff)
  #define EFR32_EMU_TEMPHI_THR1_TEMPHI6(v)         ((v) << 16)
  #define EFR32_EMU_TEMPHI_THR1_TEMPHI6_SET(x, v)  do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_TEMPHI_THR1_TEMPHI6_GET(x)     (((x) >> 16) & 0xff)
  #define EFR32_EMU_TEMPHI_THR1_TEMPHI7(v)         ((v) << 24)
  #define EFR32_EMU_TEMPHI_THR1_TEMPHI7_SET(x, v)  do { (x) = (((x) & ~0xff000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_TEMPHI_THR1_TEMPHI7_GET(x)     (((x) >> 24) & 0xff)

#define EFR32_EMU_TEMPLO_THR2_ADDR                   0x00000250
#define EFR32_EMU_TEMPLO_THR2_MASK                   0x000000ff
  #define EFR32_EMU_TEMPLO_THR2_TEMPLO8(v)         ((v) << 0)
  #define EFR32_EMU_TEMPLO_THR2_TEMPLO8_SET(x, v)  do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_TEMPLO_THR2_TEMPLO8_GET(x)     (((x) >> 0) & 0xff)

#define EFR32_EMU_DIAGAEN_ADDR                       0x000003c0
#define EFR32_EMU_DIAGAEN_MASK                       0x80800087
  #define EFR32_EMU_DIAGAEN_DIAGA_GP_EN            0x00000001
  #define EFR32_EMU_DIAGAEN_DIAGA_RF_EN            0x00000002
  #define EFR32_EMU_DIAGAEN_DIAGPN_EN              0x00000004
  #define EFR32_EMU_DIAGAEN_ABUS_DIAGA_GP_EN       0x00000080
  #define EFR32_EMU_DIAGAEN_ABUS_DIAGA_RF_EN       0x00800000
  #define EFR32_EMU_DIAGAEN_DIAGPN_PADMUXEN        0x80000000

#define EFR32_EMU_DIAGABLKTPSEL_ADDR                 0x000003c4
#define EFR32_EMU_DIAGABLKTPSEL_MASK                 0x1f0f3f0f
  #define EFR32_EMU_DIAGABLKTPSEL_GPTP(v)          ((v) << 0)
  #define EFR32_EMU_DIAGABLKTPSEL_GPTP_SET(x, v)   do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_EMU_DIAGABLKTPSEL_GPTP_GET(x)      (((x) >> 0) & 0xf)
  #define EFR32_EMU_DIAGABLKTPSEL_GPBLK(v)         ((EFR32_EMU_DIAGABLKTPSEL_GPBLK_##v) << 8)
  #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_SET(x, v)  do { (x) = (((x) & ~0x3f00) | ((EFR32_EMU_DIAGABLKTPSEL_GPBLK_##v) << 8)); } while(0)
  #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_SETVAL(x, v) do { (x) = (((x) & ~0x3f00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_GET(x)     (((x) >> 8) & 0x3f)
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_NONE       0x00000000
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_ULFRCO     0x00000001
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_LFRCO      0x00000002
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_LFXO       0x00000003
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_HFRCOA     0x00000004
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_HFRCOX     0x00000005
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_AUXHFRCOA  0x00000006
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_AUXHFRCOX  0x00000007
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_EMUOSC     0x00000008
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_BIAS       0x00000009
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_ADC0       0x0000000a
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_ACMP0      0x0000000b
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_ACMP1      0x0000000c
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_PORBOD0    0x0000000d
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_PORBOD1    0x0000000e
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_IDAC       0x0000000f
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_GPDCDC0    0x00000010
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_GPDCDC1    0x00000011
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_HDREG      0x00000012
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_LDREG      0x00000013
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_VMON       0x00000014
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_LVDS       0x00000015
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_AMUXCP     0x00000016
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_PWRCFG     0x00000017
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_VREF       0x0000001f
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_OPA0       0x00000023
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_OPA1       0x00000024
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_OPA2       0x00000025
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_DAC0       0x00000027
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_BCLFRCO    0x00000028
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_RETREG     0x00000029
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_GPBLK_CSEN       0x0000002a
  #define EFR32_EMU_DIAGABLKTPSEL_RFTP(v)          ((v) << 16)
  #define EFR32_EMU_DIAGABLKTPSEL_RFTP_SET(x, v)   do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_DIAGABLKTPSEL_RFTP_GET(x)      (((x) >> 16) & 0xf)
  #define EFR32_EMU_DIAGABLKTPSEL_RFBLK(v)         ((EFR32_EMU_DIAGABLKTPSEL_RFBLK_##v) << 24)
  #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_SET(x, v)  do { (x) = (((x) & ~0x1f000000) | ((EFR32_EMU_DIAGABLKTPSEL_RFBLK_##v) << 24)); } while(0)
  #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_SETVAL(x, v) do { (x) = (((x) & ~0x1f000000) | ((v) << 24)); } while(0)
  #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_GET(x)     (((x) >> 24) & 0x1f)
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_NONE       0x00000000
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_AUXPLL     0x00000001
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_IFADC1     0x00000002
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_IFADC2     0x00000003
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_IFFILT     0x00000004
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_IFPGA      0x00000005
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_ISVTR      0x00000006
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_LNAMIX     0x00000007
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_RFSENSE    0x00000008
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_SGLNAMIX   0x00000009
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_SGPA       0x0000000a
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_SYCHP      0x0000000b
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_SYLPF      0x0000000c
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_SYMMD      0x0000000d
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_SYVCO      0x0000000e
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_SYXO       0x0000000f
/**  */
    #define EFR32_EMU_DIAGABLKTPSEL_RFBLK_TXPA       0x00000010

#define EFR32_EMU_DIAGPNBLKSEL_ADDR                  0x000003c8
#define EFR32_EMU_DIAGPNBLKSEL_MASK                  0x00000f00
  #define EFR32_EMU_DIAGPNBLKSEL_PNRFBLK(v)        ((EFR32_EMU_DIAGPNBLKSEL_PNRFBLK_##v) << 8)
  #define EFR32_EMU_DIAGPNBLKSEL_PNRFBLK_SET(x, v) do { (x) = (((x) & ~0xf00) | ((EFR32_EMU_DIAGPNBLKSEL_PNRFBLK_##v) << 8)); } while(0)
  #define EFR32_EMU_DIAGPNBLKSEL_PNRFBLK_SETVAL(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_EMU_DIAGPNBLKSEL_PNRFBLK_GET(x)    (((x) >> 8) & 0xf)
/**  */
    #define EFR32_EMU_DIAGPNBLKSEL_PNRFBLK_NONE      0x00000000
/**  */
    #define EFR32_EMU_DIAGPNBLKSEL_PNRFBLK_IFFILT    0x00000001
/**  */
    #define EFR32_EMU_DIAGPNBLKSEL_PNRFBLK_IFPGA     0x00000002
/**  */
    #define EFR32_EMU_DIAGPNBLKSEL_PNRFBLK_LNAMIX    0x00000003
/**  */
    #define EFR32_EMU_DIAGPNBLKSEL_PNRFBLK_SGLNAMIX  0x00000004
/**  */
    #define EFR32_EMU_DIAGPNBLKSEL_PNRFBLK_SYLPF     0x00000005

#define EFR32_EMU_DIAGABRIDGESEL_ADDR                0x000003cc
#define EFR32_EMU_DIAGABRIDGESEL_MASK                0x80730033
  #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_GP_SEL(v) ((EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_GP_SEL_##v) << 0)
  #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_GP_SEL_SET(x, v) do { (x) = (((x) & ~0x3) | ((EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_GP_SEL_##v) << 0)); } while(0)
  #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_GP_SEL_SETVAL(x, v) do { (x) = (((x) & ~0x3) | ((v) << 0)); } while(0)
  #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_GP_SEL_GET(x) (((x) >> 0) & 0x3)
/**  */
    #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_GP_SEL_GNDA 0x00000000
/**  */
    #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_GP_SEL_DIAGAGP 0x00000001
/**  */
    #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_GP_SEL_DIAGAGPBUF 0x00000002
/**  */
    #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_GP_SEL_DIAGAGP1MOHM 0x00000003
  #define EFR32_EMU_DIAGABRIDGESEL_DIAGA_GP_BUF_EN 0x00000010
  #define EFR32_EMU_DIAGABRIDGESEL_DIAGA_GP_SHORT_N 0x00000020
  #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_RF_SEL(v) ((EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_RF_SEL_##v) << 16)
  #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_RF_SEL_SET(x, v) do { (x) = (((x) & ~0x30000) | ((EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_RF_SEL_##v) << 16)); } while(0)
  #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_RF_SEL_SETVAL(x, v) do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_RF_SEL_GET(x) (((x) >> 16) & 0x3)
/**  */
    #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_RF_SEL_GNDA 0x00000000
/**  */
    #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_RF_SEL_DIAGARF 0x00000001
/**  */
    #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_RF_SEL_DIAGARFBUF 0x00000002
/**  */
    #define EFR32_EMU_DIAGABRIDGESEL_ABUS_DIAGA_RF_SEL_DIAGARF1MOHM 0x00000003
  #define EFR32_EMU_DIAGABRIDGESEL_DIAGA_RF_BUF_EN 0x00100000
  #define EFR32_EMU_DIAGABRIDGESEL_DIAGA_RF_SHORT_N 0x00200000
  #define EFR32_EMU_DIAGABRIDGESEL_DIAGPN_BUF_EN   0x00400000
  #define EFR32_EMU_DIAGABRIDGESEL_DIAGA_SEL_VDDX  0x80000000

#define EFR32_EMU_APDPGPIOSEL_ADDR                   0x000003d0
#define EFR32_EMU_APDPGPIOSEL_MASK                   0x0001ffff
  #define EFR32_EMU_APDPGPIOSEL_APORT_DP_GPIO_SEL(v) ((v) << 0)
  #define EFR32_EMU_APDPGPIOSEL_APORT_DP_GPIO_SEL_SET(x, v) do { (x) = (((x) & ~0x1ffff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_APDPGPIOSEL_APORT_DP_GPIO_SEL_GET(x) (((x) >> 0) & 0x1ffff)

#define EFR32_EMU_APDNGPIOSEL_ADDR                   0x000003d4
#define EFR32_EMU_APDNGPIOSEL_MASK                   0x0001ffff
  #define EFR32_EMU_APDNGPIOSEL_APORT_DN_GPIO_SEL(v) ((v) << 0)
  #define EFR32_EMU_APDNGPIOSEL_APORT_DN_GPIO_SEL_SET(x, v) do { (x) = (((x) & ~0x1ffff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_APDNGPIOSEL_APORT_DN_GPIO_SEL_GET(x) (((x) >> 0) & 0x1ffff)

#define EFR32_EMU_APAPGPIOSEL_ADDR                   0x000003d8
#define EFR32_EMU_APAPGPIOSEL_MASK                   0x0001ffff
  #define EFR32_EMU_APAPGPIOSEL_APORT_AP_GPIO_SEL(v) ((v) << 0)
  #define EFR32_EMU_APAPGPIOSEL_APORT_AP_GPIO_SEL_SET(x, v) do { (x) = (((x) & ~0x1ffff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_APAPGPIOSEL_APORT_AP_GPIO_SEL_GET(x) (((x) >> 0) & 0x1ffff)

#define EFR32_EMU_APANGPIOSEL_ADDR                   0x000003dc
#define EFR32_EMU_APANGPIOSEL_MASK                   0x0001ffff
  #define EFR32_EMU_APANGPIOSEL_APORT_AN_GPIO_SEL(v) ((v) << 0)
  #define EFR32_EMU_APANGPIOSEL_APORT_AN_GPIO_SEL_SET(x, v) do { (x) = (((x) & ~0x1ffff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_APANGPIOSEL_APORT_AN_GPIO_SEL_GET(x) (((x) >> 0) & 0x1ffff)

#define EFR32_EMU_APBPGPIOSEL_ADDR                   0x000003e0
#define EFR32_EMU_APBPGPIOSEL_MASK                   0x0001ffff
  #define EFR32_EMU_APBPGPIOSEL_APORT_BP_GPIO_SEL(v) ((v) << 0)
  #define EFR32_EMU_APBPGPIOSEL_APORT_BP_GPIO_SEL_SET(x, v) do { (x) = (((x) & ~0x1ffff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_APBPGPIOSEL_APORT_BP_GPIO_SEL_GET(x) (((x) >> 0) & 0x1ffff)

#define EFR32_EMU_APBNGPIOSEL_ADDR                   0x000003e4
#define EFR32_EMU_APBNGPIOSEL_MASK                   0x0001ffff
  #define EFR32_EMU_APBNGPIOSEL_APORT_BN_GPIO_SEL(v) ((v) << 0)
  #define EFR32_EMU_APBNGPIOSEL_APORT_BN_GPIO_SEL_SET(x, v) do { (x) = (((x) & ~0x1ffff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_APBNGPIOSEL_APORT_BN_GPIO_SEL_GET(x) (((x) >> 0) & 0x1ffff)

#define EFR32_EMU_APCPGPIOSEL_ADDR                   0x000003e8
#define EFR32_EMU_APCPGPIOSEL_MASK                   0x0001ffff
  #define EFR32_EMU_APCPGPIOSEL_APORT_CP_GPIO_SEL(v) ((v) << 0)
  #define EFR32_EMU_APCPGPIOSEL_APORT_CP_GPIO_SEL_SET(x, v) do { (x) = (((x) & ~0x1ffff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_APCPGPIOSEL_APORT_CP_GPIO_SEL_GET(x) (((x) >> 0) & 0x1ffff)

#define EFR32_EMU_APCNGPIOSEL_ADDR                   0x000003ec
#define EFR32_EMU_APCNGPIOSEL_MASK                   0x0001ffff
  #define EFR32_EMU_APCNGPIOSEL_APORT_CN_GPIO_SEL(v) ((v) << 0)
  #define EFR32_EMU_APCNGPIOSEL_APORT_CN_GPIO_SEL_SET(x, v) do { (x) = (((x) & ~0x1ffff) | ((v) << 0)); } while(0)
  #define EFR32_EMU_APCNGPIOSEL_APORT_CN_GPIO_SEL_GET(x) (((x) >> 0) & 0x1ffff)

#define EFR32_EMU_EM2PERCTRL_ADDR                    0x000003f0
#define EFR32_EMU_EM2PERCTRL_MASK                    0x0000000f
  #define EFR32_EMU_EM2PERCTRL_EM2PERPWDN(v)       ((EFR32_EMU_EM2PERCTRL_EM2PERPWDN_##v) << 0)
  #define EFR32_EMU_EM2PERCTRL_EM2PERPWDN_SET(x, v) do { (x) = (((x) & ~0x3) | ((EFR32_EMU_EM2PERCTRL_EM2PERPWDN_##v) << 0)); } while(0)
  #define EFR32_EMU_EM2PERCTRL_EM2PERPWDN_SETVAL(x, v) do { (x) = (((x) & ~0x3) | ((v) << 0)); } while(0)
  #define EFR32_EMU_EM2PERCTRL_EM2PERPWDN_GET(x)   (((x) >> 0) & 0x3)
/**  */
    #define EFR32_EMU_EM2PERCTRL_EM2PERPWDN_NONE     0x00000000
/**  */
    #define EFR32_EMU_EM2PERCTRL_EM2PERPWDN_BLK2     0x00000002
/**  */
    #define EFR32_EMU_EM2PERCTRL_EM2PERPWDN_BLK1TO2  0x00000003
  #define EFR32_EMU_EM2PERCTRL_EM2PERPWUP(v)       ((EFR32_EMU_EM2PERCTRL_EM2PERPWUP_##v) << 2)
  #define EFR32_EMU_EM2PERCTRL_EM2PERPWUP_SET(x, v) do { (x) = (((x) & ~0xc) | ((EFR32_EMU_EM2PERCTRL_EM2PERPWUP_##v) << 2)); } while(0)
  #define EFR32_EMU_EM2PERCTRL_EM2PERPWUP_SETVAL(x, v) do { (x) = (((x) & ~0xc) | ((v) << 2)); } while(0)
  #define EFR32_EMU_EM2PERCTRL_EM2PERPWUP_GET(x)   (((x) >> 2) & 0x3)
/**  */
    #define EFR32_EMU_EM2PERCTRL_EM2PERPWUP_NONE     0x00000000
/**  */
    #define EFR32_EMU_EM2PERCTRL_EM2PERPWUP_BLK2     0x00000002
/**  */
    #define EFR32_EMU_EM2PERCTRL_EM2PERPWUP_BLK1TO2  0x00000003

#endif

