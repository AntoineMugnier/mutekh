/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs cdefs_use_reg_mask=1 cdefs_use_field_shift=1                 \
     cdefs_sfx_field_shift=_IDX
*/

#ifndef _EFR32_AGC_BFGEN_DEFS_
#define _EFR32_AGC_BFGEN_DEFS_

#define EFR32_AGC_STATUS0_ADDR                       0x00000000
#define EFR32_AGC_STATUS0_MASK                       0x3efff43f
  #define EFR32_AGC_STATUS0_GAININDEX_IDX          0
  #define EFR32_AGC_STATUS0_GAININDEX(v)           ((v) << 0)
  #define EFR32_AGC_STATUS0_GAININDEX_SET(x, v)    do { (x) = (((x) & ~0x3f) | ((v) << 0)); } while(0)
  #define EFR32_AGC_STATUS0_GAININDEX_GET(x)       (((x) >> 0) & 0x3f)
  #define EFR32_AGC_STATUS0_CCA                    0x00000400
  #define EFR32_AGC_STATUS0_CCA_IDX                10
  #define EFR32_AGC_STATUS0_GAINOK                 0x00001000
  #define EFR32_AGC_STATUS0_GAINOK_IDX             12
  #define EFR32_AGC_STATUS0_GAINIFPGA_IDX          13
  #define EFR32_AGC_STATUS0_GAINIFPGA(v)           ((v) << 13)
  #define EFR32_AGC_STATUS0_GAINIFPGA_SET(x, v)    do { (x) = (((x) & ~0x1e000) | ((v) << 13)); } while(0)
  #define EFR32_AGC_STATUS0_GAINIFPGA_GET(x)       (((x) >> 13) & 0xf)
  #define EFR32_AGC_STATUS0_GAINLNADEGEN_IDX       17
  #define EFR32_AGC_STATUS0_GAINLNADEGEN(v)        ((v) << 17)
  #define EFR32_AGC_STATUS0_GAINLNADEGEN_SET(x, v) do { (x) = (((x) & ~0xe0000) | ((v) << 17)); } while(0)
  #define EFR32_AGC_STATUS0_GAINLNADEGEN_GET(x)    (((x) >> 17) & 0x7)
  #define EFR32_AGC_STATUS0_GAINLNASLICE_IDX       20
  #define EFR32_AGC_STATUS0_GAINLNASLICE(v)        ((v) << 20)
  #define EFR32_AGC_STATUS0_GAINLNASLICE_SET(x, v) do { (x) = (((x) & ~0xf00000) | ((v) << 20)); } while(0)
  #define EFR32_AGC_STATUS0_GAINLNASLICE_GET(x)    (((x) >> 20) & 0xf)
  #define EFR32_AGC_STATUS0_GAINLNAATTEN_IDX       25
  #define EFR32_AGC_STATUS0_GAINLNAATTEN(v)        ((v) << 25)
  #define EFR32_AGC_STATUS0_GAINLNAATTEN_SET(x, v) do { (x) = (((x) & ~0x3e000000) | ((v) << 25)); } while(0)
  #define EFR32_AGC_STATUS0_GAINLNAATTEN_GET(x)    (((x) >> 25) & 0x1f)

#define EFR32_AGC_STATUS1_ADDR                       0x00000004
#define EFR32_AGC_STATUS1_MASK                       0x0001feff
  #define EFR32_AGC_STATUS1_CHPWR_IDX              0
  #define EFR32_AGC_STATUS1_CHPWR(v)               ((v) << 0)
  #define EFR32_AGC_STATUS1_CHPWR_SET(x, v)        do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_AGC_STATUS1_CHPWR_GET(x)           (((x) >> 0) & 0xff)
  #define EFR32_AGC_STATUS1_ADCSTABILITYDET        0x00000200
  #define EFR32_AGC_STATUS1_ADCSTABILITYDET_IDX    9
  #define EFR32_AGC_STATUS1_PGAPEAKDET2            0x00000400
  #define EFR32_AGC_STATUS1_PGAPEAKDET2_IDX        10
  #define EFR32_AGC_STATUS1_PGAPEAKDET1            0x00000800
  #define EFR32_AGC_STATUS1_PGAPEAKDET1_IDX        11
  #define EFR32_AGC_STATUS1_CFLOOPSTATE_IDX        12
  #define EFR32_AGC_STATUS1_CFLOOPSTATE(v)         ((EFR32_AGC_STATUS1_CFLOOPSTATE_##v) << 12)
  #define EFR32_AGC_STATUS1_CFLOOPSTATE_SET(x, v)  do { (x) = (((x) & ~0x3000) | ((EFR32_AGC_STATUS1_CFLOOPSTATE_##v) << 12)); } while(0)
  #define EFR32_AGC_STATUS1_CFLOOPSTATE_GET(x)     (((x) >> 12) & 0x3)
/**  */
    #define EFR32_AGC_STATUS1_CFLOOPSTATE_IDLE       0x00000000
/**  */
    #define EFR32_AGC_STATUS1_CFLOOPSTATE_PWRMEAS    0x00000001
/**  */
    #define EFR32_AGC_STATUS1_CFLOOPSTATE_CFDELAY    0x00000002
/**  */
    #define EFR32_AGC_STATUS1_CFLOOPSTATE_NOP        0x00000003
  #define EFR32_AGC_STATUS1_FASTLOOPSTATE_IDX      14
  #define EFR32_AGC_STATUS1_FASTLOOPSTATE(v)       ((EFR32_AGC_STATUS1_FASTLOOPSTATE_##v) << 14)
  #define EFR32_AGC_STATUS1_FASTLOOPSTATE_SET(x, v) do { (x) = (((x) & ~0x1c000) | ((EFR32_AGC_STATUS1_FASTLOOPSTATE_##v) << 14)); } while(0)
  #define EFR32_AGC_STATUS1_FASTLOOPSTATE_GET(x)   (((x) >> 14) & 0x7)
/**  */
    #define EFR32_AGC_STATUS1_FASTLOOPSTATE_IDLE     0x00000000
/**  */
    #define EFR32_AGC_STATUS1_FASTLOOPSTATE_PEAKCHK  0x00000001
/**  */
    #define EFR32_AGC_STATUS1_FASTLOOPSTATE_FEDELAY  0x00000002
/**  */
    #define EFR32_AGC_STATUS1_FASTLOOPSTATE_PEAKRST  0x00000003
/**  */
    #define EFR32_AGC_STATUS1_FASTLOOPSTATE_PEAKWAIT 0x00000004

#define EFR32_AGC_RSSI_ADDR                          0x00000008
#define EFR32_AGC_RSSI_MASK                          0x0000ffc0
/** This is the fractionnal part of the RSSI value measured. @multiple */
  #define EFR32_AGC_RSSI_RSSIFRAC_IDX              6
  #define EFR32_AGC_RSSI_RSSIFRAC(v)               ((v) << 6)
  #define EFR32_AGC_RSSI_RSSIFRAC_SET(x, v)        do { (x) = (((x) & ~0xc0) | ((v) << 6)); } while(0)
  #define EFR32_AGC_RSSI_RSSIFRAC_GET(x)           (((x) >> 6) & 0x3)
/** This is the integer part of the RSSI value measured. When RX is not enabled
   this value is equal to -128 dBm. @multiple */
  #define EFR32_AGC_RSSI_RSSIINT_IDX               8
  #define EFR32_AGC_RSSI_RSSIINT(v)                ((v) << 8)
  #define EFR32_AGC_RSSI_RSSIINT_SET(x, v)         do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define EFR32_AGC_RSSI_RSSIINT_GET(x)            (((x) >> 8) & 0xff)

#define EFR32_AGC_FRAMERSSI_ADDR                     0x0000000c
#define EFR32_AGC_FRAMERSSI_MASK                     0x0000ffc0
  #define EFR32_AGC_FRAMERSSI_FRAMERSSIFRAC_IDX    6
  #define EFR32_AGC_FRAMERSSI_FRAMERSSIFRAC(v)     ((v) << 6)
  #define EFR32_AGC_FRAMERSSI_FRAMERSSIFRAC_SET(x, v) do { (x) = (((x) & ~0xc0) | ((v) << 6)); } while(0)
  #define EFR32_AGC_FRAMERSSI_FRAMERSSIFRAC_GET(x) (((x) >> 6) & 0x3)
  #define EFR32_AGC_FRAMERSSI_FRAMERSSIINT_IDX     8
  #define EFR32_AGC_FRAMERSSI_FRAMERSSIINT(v)      ((v) << 8)
  #define EFR32_AGC_FRAMERSSI_FRAMERSSIINT_SET(x, v) do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define EFR32_AGC_FRAMERSSI_FRAMERSSIINT_GET(x)  (((x) >> 8) & 0xff)

#define EFR32_AGC_CTRL0_ADDR                         0x00000014
#define EFR32_AGC_CTRL0_MASK                         0x03ffffff
/** This is the target power level as measured by the channel filter loop. The
   AGC drives the gain configuration so that this target value is measured after
   the channel filter. @multiple */
  #define EFR32_AGC_CTRL0_PWRTARGET_IDX            0
  #define EFR32_AGC_CTRL0_PWRTARGET(v)             ((v) << 0)
  #define EFR32_AGC_CTRL0_PWRTARGET_SET(x, v)      do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_AGC_CTRL0_PWRTARGET_GET(x)         (((x) >> 0) & 0xff)
  #define EFR32_AGC_CTRL0_MODE_IDX                 8
  #define EFR32_AGC_CTRL0_MODE(v)                  ((EFR32_AGC_CTRL0_MODE_##v) << 8)
  #define EFR32_AGC_CTRL0_MODE_SET(x, v)           do { (x) = (((x) & ~0x700) | ((EFR32_AGC_CTRL0_MODE_##v) << 8)); } while(0)
  #define EFR32_AGC_CTRL0_MODE_GET(x)              (((x) >> 8) & 0x7)
/**  */
    #define EFR32_AGC_CTRL0_MODE_CONT                0x00000000
/**  */
    #define EFR32_AGC_CTRL0_MODE_LOCKPREDET          0x00000001
/**  */
    #define EFR32_AGC_CTRL0_MODE_LOCKFRAMEDET        0x00000002
/** This value is substracted to the latched rssi value. @multiple */
  #define EFR32_AGC_CTRL0_RSSISHIFT_IDX            11
  #define EFR32_AGC_CTRL0_RSSISHIFT(v)             ((v) << 11)
  #define EFR32_AGC_CTRL0_RSSISHIFT_SET(x, v)      do { (x) = (((x) & ~0x7f800) | ((v) << 11)); } while(0)
  #define EFR32_AGC_CTRL0_RSSISHIFT_GET(x)         (((x) >> 11) & 0xff)
  #define EFR32_AGC_CTRL0_DISCFLOOPADJ             0x00080000
  #define EFR32_AGC_CTRL0_DISCFLOOPADJ_IDX         19
  #define EFR32_AGC_CTRL0_USEADCSATDET             0x00100000
  #define EFR32_AGC_CTRL0_USEADCSATDET_IDX         20
  #define EFR32_AGC_CTRL0_AGCCLKUNDIVREQ           0x00200000
  #define EFR32_AGC_CTRL0_AGCCLKUNDIVREQ_IDX       21
  #define EFR32_AGC_CTRL0_DISRESETCHPWR            0x00400000
  #define EFR32_AGC_CTRL0_DISRESETCHPWR_IDX        22
  #define EFR32_AGC_CTRL0_ADCRESETDURATION_IDX     23
  #define EFR32_AGC_CTRL0_ADCRESETDURATION(v)      ((v) << 23)
  #define EFR32_AGC_CTRL0_ADCRESETDURATION_SET(x, v) do { (x) = (((x) & ~0x1800000) | ((v) << 23)); } while(0)
  #define EFR32_AGC_CTRL0_ADCRESETDURATION_GET(x)  (((x) >> 23) & 0x3)
  #define EFR32_AGC_CTRL0_ENRSSIRESET              0x02000000
  #define EFR32_AGC_CTRL0_ENRSSIRESET_IDX          25

#define EFR32_AGC_CTRL1_ADDR                         0x00000018
#define EFR32_AGC_CTRL1_MASK                         0xffffffff
/** This defines the CCA RSSI threshold, in dBm, above which the channel is
   considered 'busy'. @multiple */
  #define EFR32_AGC_CTRL1_CCATHRSH_IDX             0
  #define EFR32_AGC_CTRL1_CCATHRSH(v)              ((v) << 0)
  #define EFR32_AGC_CTRL1_CCATHRSH_SET(x, v)       do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_AGC_CTRL1_CCATHRSH_GET(x)          (((x) >> 0) & 0xff)
/** This defines the number of symbols used for RSSI measurement when RSSI
   measurement is not running continuously. N = 2^rssiperiod. The rssi
   measurement time is defined as N/bitrate. @multiple */
  #define EFR32_AGC_CTRL1_RSSIPERIOD_IDX           8
  #define EFR32_AGC_CTRL1_RSSIPERIOD(v)            ((v) << 8)
  #define EFR32_AGC_CTRL1_RSSIPERIOD_SET(x, v)     do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_AGC_CTRL1_RSSIPERIOD_GET(x)        (((x) >> 8) & 0xf)
/** The channel filter AGC loop measures the true signal power by performing an
   RSSI (Radio Signal Strength Indicator) measurement. The AGC period adjusts the
   length of the measurement window. The longer the measurement window the more
   accurate the measurement will be, however this comes at a price of a longer
   preamble require- ment at the Tx side. The AGC period adjusts the measurement
   window in the following fashion: T_meas = 2^AGC_PERIOD, where the unit is
   typically one baud. @multiple */
  #define EFR32_AGC_CTRL1_AGCPERIOD_IDX            12
  #define EFR32_AGC_CTRL1_AGCPERIOD(v)             ((v) << 12)
  #define EFR32_AGC_CTRL1_AGCPERIOD_SET(x, v)      do { (x) = (((x) & ~0x7000) | ((v) << 12)); } while(0)
  #define EFR32_AGC_CTRL1_AGCPERIOD_GET(x)         (((x) >> 12) & 0x7)
  #define EFR32_AGC_CTRL1_SUBPERIOD                0x00008000
  #define EFR32_AGC_CTRL1_SUBPERIOD_IDX            15
  #define EFR32_AGC_CTRL1_SUBNUM_IDX               16
  #define EFR32_AGC_CTRL1_SUBNUM(v)                ((v) << 16)
  #define EFR32_AGC_CTRL1_SUBNUM_SET(x, v)         do { (x) = (((x) & ~0x1f0000) | ((v) << 16)); } while(0)
  #define EFR32_AGC_CTRL1_SUBNUM_GET(x)            (((x) >> 16) & 0x1f)
  #define EFR32_AGC_CTRL1_SUBDEN_IDX               21
  #define EFR32_AGC_CTRL1_SUBDEN(v)                ((v) << 21)
  #define EFR32_AGC_CTRL1_SUBDEN_SET(x, v)         do { (x) = (((x) & ~0x3e00000) | ((v) << 21)); } while(0)
  #define EFR32_AGC_CTRL1_SUBDEN_GET(x)            (((x) >> 21) & 0x1f)
  #define EFR32_AGC_CTRL1_SUBINT_IDX               26
  #define EFR32_AGC_CTRL1_SUBINT(v)                ((v) << 26)
  #define EFR32_AGC_CTRL1_SUBINT_SET(x, v)         do { (x) = (((x) & ~0xfc000000) | ((v) << 26)); } while(0)
  #define EFR32_AGC_CTRL1_SUBINT_GET(x)            (((x) >> 26) & 0x3f)

#define EFR32_AGC_CTRL2_ADDR                         0x0000001c
#define EFR32_AGC_CTRL2_MASK                         0xffffffe0
  #define EFR32_AGC_CTRL2_HYST_IDX                 5
  #define EFR32_AGC_CTRL2_HYST(v)                  ((v) << 5)
  #define EFR32_AGC_CTRL2_HYST_SET(x, v)           do { (x) = (((x) & ~0x1e0) | ((v) << 5)); } while(0)
  #define EFR32_AGC_CTRL2_HYST_GET(x)              (((x) >> 5) & 0xf)
  #define EFR32_AGC_CTRL2_DMASEL                   0x00000200
  #define EFR32_AGC_CTRL2_DMASEL_IDX               9
  #define EFR32_AGC_CTRL2_MAXPWRVAR_IDX            10
  #define EFR32_AGC_CTRL2_MAXPWRVAR(v)             ((v) << 10)
  #define EFR32_AGC_CTRL2_MAXPWRVAR_SET(x, v)      do { (x) = (((x) & ~0xfc00) | ((v) << 10)); } while(0)
  #define EFR32_AGC_CTRL2_MAXPWRVAR_GET(x)         (((x) >> 10) & 0x3f)
  #define EFR32_AGC_CTRL2_FASTLOOPDEL_IDX          16
  #define EFR32_AGC_CTRL2_FASTLOOPDEL(v)           ((v) << 16)
  #define EFR32_AGC_CTRL2_FASTLOOPDEL_SET(x, v)    do { (x) = (((x) & ~0x1f0000) | ((v) << 16)); } while(0)
  #define EFR32_AGC_CTRL2_FASTLOOPDEL_GET(x)       (((x) >> 16) & 0x1f)
  #define EFR32_AGC_CTRL2_CFLOOPDEL_IDX            21
  #define EFR32_AGC_CTRL2_CFLOOPDEL(v)             ((v) << 21)
  #define EFR32_AGC_CTRL2_CFLOOPDEL_SET(x, v)      do { (x) = (((x) & ~0xfe00000) | ((v) << 21)); } while(0)
  #define EFR32_AGC_CTRL2_CFLOOPDEL_GET(x)         (((x) >> 21) & 0x7f)
  #define EFR32_AGC_CTRL2_RSSIFAST                 0x10000000
  #define EFR32_AGC_CTRL2_RSSIFAST_IDX             28
  #define EFR32_AGC_CTRL2_ADCRSTFASTLOOP_IDX       29
  #define EFR32_AGC_CTRL2_ADCRSTFASTLOOP(v)        ((EFR32_AGC_CTRL2_ADCRSTFASTLOOP_##v) << 29)
  #define EFR32_AGC_CTRL2_ADCRSTFASTLOOP_SET(x, v) do { (x) = (((x) & ~0x60000000) | ((EFR32_AGC_CTRL2_ADCRSTFASTLOOP_##v) << 29)); } while(0)
  #define EFR32_AGC_CTRL2_ADCRSTFASTLOOP_GET(x)    (((x) >> 29) & 0x3)
/**  */
    #define EFR32_AGC_CTRL2_ADCRSTFASTLOOP_GAINREDUCTION 0x00000000
/**  */
    #define EFR32_AGC_CTRL2_ADCRSTFASTLOOP_ALWAYS    0x00000001
/**  */
    #define EFR32_AGC_CTRL2_ADCRSTFASTLOOP_NEVER     0x00000002
  #define EFR32_AGC_CTRL2_ADCRSTSTARTUP            0x80000000
  #define EFR32_AGC_CTRL2_ADCRSTSTARTUP_IDX        31

#define EFR32_AGC_RSSISTEPTHR_ADDR                   0x00000020
#define EFR32_AGC_RSSISTEPTHR_MASK                   0xfff1ffff
  #define EFR32_AGC_RSSISTEPTHR_POSSTEPTHR_IDX     0
  #define EFR32_AGC_RSSISTEPTHR_POSSTEPTHR(v)      ((v) << 0)
  #define EFR32_AGC_RSSISTEPTHR_POSSTEPTHR_SET(x, v) do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define EFR32_AGC_RSSISTEPTHR_POSSTEPTHR_GET(x)  (((x) >> 0) & 0xff)
  #define EFR32_AGC_RSSISTEPTHR_NEGSTEPTHR_IDX     8
  #define EFR32_AGC_RSSISTEPTHR_NEGSTEPTHR(v)      ((v) << 8)
  #define EFR32_AGC_RSSISTEPTHR_NEGSTEPTHR_SET(x, v) do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define EFR32_AGC_RSSISTEPTHR_NEGSTEPTHR_GET(x)  (((x) >> 8) & 0xff)
  #define EFR32_AGC_RSSISTEPTHR_STEPPER            0x00010000
  #define EFR32_AGC_RSSISTEPTHR_STEPPER_IDX        16
  #define EFR32_AGC_RSSISTEPTHR_DEMODRESTARTPER_IDX 20
  #define EFR32_AGC_RSSISTEPTHR_DEMODRESTARTPER(v) ((v) << 20)
  #define EFR32_AGC_RSSISTEPTHR_DEMODRESTARTPER_SET(x, v) do { (x) = (((x) & ~0xf00000) | ((v) << 20)); } while(0)
  #define EFR32_AGC_RSSISTEPTHR_DEMODRESTARTPER_GET(x) (((x) >> 20) & 0xf)
  #define EFR32_AGC_RSSISTEPTHR_DEMODRESTARTTHR_IDX 24
  #define EFR32_AGC_RSSISTEPTHR_DEMODRESTARTTHR(v) ((v) << 24)
  #define EFR32_AGC_RSSISTEPTHR_DEMODRESTARTTHR_SET(x, v) do { (x) = (((x) & ~0xff000000) | ((v) << 24)); } while(0)
  #define EFR32_AGC_RSSISTEPTHR_DEMODRESTARTTHR_GET(x) (((x) >> 24) & 0xff)

#define EFR32_AGC_IFPEAKDET_ADDR                     0x00000024
#define EFR32_AGC_IFPEAKDET_MASK                     0x000003ff
  #define EFR32_AGC_IFPEAKDET_PKDTHRESH1_IDX       0
  #define EFR32_AGC_IFPEAKDET_PKDTHRESH1(v)        ((v) << 0)
  #define EFR32_AGC_IFPEAKDET_PKDTHRESH1_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_AGC_IFPEAKDET_PKDTHRESH1_GET(x)    (((x) >> 0) & 0xf)
  #define EFR32_AGC_IFPEAKDET_PKDTHRESH2_IDX       4
  #define EFR32_AGC_IFPEAKDET_PKDTHRESH2(v)        ((v) << 4)
  #define EFR32_AGC_IFPEAKDET_PKDTHRESH2_SET(x, v) do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define EFR32_AGC_IFPEAKDET_PKDTHRESH2_GET(x)    (((x) >> 4) & 0xf)
  #define EFR32_AGC_IFPEAKDET_MODEPKD_IDX          8
  #define EFR32_AGC_IFPEAKDET_MODEPKD(v)           ((v) << 8)
  #define EFR32_AGC_IFPEAKDET_MODEPKD_SET(x, v)    do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define EFR32_AGC_IFPEAKDET_MODEPKD_GET(x)       (((x) >> 8) & 0x3)

#define EFR32_AGC_MANGAIN_ADDR                       0x00000028
#define EFR32_AGC_MANGAIN_MASK                       0x7feffebf
  #define EFR32_AGC_MANGAIN_MANGAININDEX_IDX       0
  #define EFR32_AGC_MANGAIN_MANGAININDEX(v)        ((v) << 0)
  #define EFR32_AGC_MANGAIN_MANGAININDEX_SET(x, v) do { (x) = (((x) & ~0x3f) | ((v) << 0)); } while(0)
  #define EFR32_AGC_MANGAIN_MANGAININDEX_GET(x)    (((x) >> 0) & 0x3f)
  #define EFR32_AGC_MANGAIN_MANGAININDEXEN         0x00000080
  #define EFR32_AGC_MANGAIN_MANGAININDEXEN_IDX     7
  #define EFR32_AGC_MANGAIN_MANGAINIFPGA_IDX       9
  #define EFR32_AGC_MANGAIN_MANGAINIFPGA(v)        ((v) << 9)
  #define EFR32_AGC_MANGAIN_MANGAINIFPGA_SET(x, v) do { (x) = (((x) & ~0x1e00) | ((v) << 9)); } while(0)
  #define EFR32_AGC_MANGAIN_MANGAINIFPGA_GET(x)    (((x) >> 9) & 0xf)
  #define EFR32_AGC_MANGAIN_MANGAINLNADEGEN_IDX    13
  #define EFR32_AGC_MANGAIN_MANGAINLNADEGEN(v)     ((v) << 13)
  #define EFR32_AGC_MANGAIN_MANGAINLNADEGEN_SET(x, v) do { (x) = (((x) & ~0xe000) | ((v) << 13)); } while(0)
  #define EFR32_AGC_MANGAIN_MANGAINLNADEGEN_GET(x) (((x) >> 13) & 0x7)
  #define EFR32_AGC_MANGAIN_MANGAINLNASLICES_IDX   16
  #define EFR32_AGC_MANGAIN_MANGAINLNASLICES(v)    ((v) << 16)
  #define EFR32_AGC_MANGAIN_MANGAINLNASLICES_SET(x, v) do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_AGC_MANGAIN_MANGAINLNASLICES_GET(x) (((x) >> 16) & 0xf)
  #define EFR32_AGC_MANGAIN_MANGAINLNAATTEN_IDX    21
  #define EFR32_AGC_MANGAIN_MANGAINLNAATTEN(v)     ((v) << 21)
  #define EFR32_AGC_MANGAIN_MANGAINLNAATTEN_SET(x, v) do { (x) = (((x) & ~0x3e00000) | ((v) << 21)); } while(0)
  #define EFR32_AGC_MANGAIN_MANGAINLNAATTEN_GET(x) (((x) >> 21) & 0x1f)
  #define EFR32_AGC_MANGAIN_MANGAINLNASLICESREG_IDX 26
  #define EFR32_AGC_MANGAIN_MANGAINLNASLICESREG(v) ((v) << 26)
  #define EFR32_AGC_MANGAIN_MANGAINLNASLICESREG_SET(x, v) do { (x) = (((x) & ~0x3c000000) | ((v) << 26)); } while(0)
  #define EFR32_AGC_MANGAIN_MANGAINLNASLICESREG_GET(x) (((x) >> 26) & 0xf)
  #define EFR32_AGC_MANGAIN_MANGAINEN              0x40000000
  #define EFR32_AGC_MANGAIN_MANGAINEN_IDX          30

#define EFR32_AGC_RFPEAKDET_ADDR                     0x0000002c
#define EFR32_AGC_RFPEAKDET_MASK                     0x000001ff
  #define EFR32_AGC_RFPEAKDET_RFPKDTHRESH1_IDX     0
  #define EFR32_AGC_RFPEAKDET_RFPKDTHRESH1(v)      ((v) << 0)
  #define EFR32_AGC_RFPEAKDET_RFPKDTHRESH1_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_AGC_RFPEAKDET_RFPKDTHRESH1_GET(x)  (((x) >> 0) & 0xf)
  #define EFR32_AGC_RFPEAKDET_RFPKDTHRESH2_IDX     4
  #define EFR32_AGC_RFPEAKDET_RFPKDTHRESH2(v)      ((v) << 4)
  #define EFR32_AGC_RFPEAKDET_RFPKDTHRESH2_SET(x, v) do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define EFR32_AGC_RFPEAKDET_RFPKDTHRESH2_GET(x)  (((x) >> 4) & 0xf)
  #define EFR32_AGC_RFPEAKDET_RFPKDSWITCHDEL       0x00000100
  #define EFR32_AGC_RFPEAKDET_RFPKDSWITCHDEL_IDX   8

#define EFR32_AGC_IF_ADDR                            0x00000030
#define EFR32_AGC_IF_MASK                            0x0000003d
  #define EFR32_AGC_IF_RSSIVALID                   0x00000001
  #define EFR32_AGC_IF_RSSIVALID_IDX               0
  #define EFR32_AGC_IF_CCA                         0x00000004
  #define EFR32_AGC_IF_CCA_IDX                     2
  #define EFR32_AGC_IF_RSSIPOSSTEP                 0x00000008
  #define EFR32_AGC_IF_RSSIPOSSTEP_IDX             3
  #define EFR32_AGC_IF_RSSINEGSTEP                 0x00000010
  #define EFR32_AGC_IF_RSSINEGSTEP_IDX             4
  #define EFR32_AGC_IF_RSSIDONE                    0x00000020
  #define EFR32_AGC_IF_RSSIDONE_IDX                5

/** See IF register fields @multiple */
#define EFR32_AGC_IFS_ADDR                           0x00000034
#define EFR32_AGC_IFS_MASK                           0x00000000

/** See IF register fields @multiple */
#define EFR32_AGC_IFC_ADDR                           0x00000038
#define EFR32_AGC_IFC_MASK                           0x00000000

/** See IF register fields @multiple */
#define EFR32_AGC_IEN_ADDR                           0x0000003c
#define EFR32_AGC_IEN_MASK                           0x00000000

#define EFR32_AGC_CMD_ADDR                           0x00000040
#define EFR32_AGC_CMD_MASK                           0x00000001
  #define EFR32_AGC_CMD_RSSISTART                  0x00000001
  #define EFR32_AGC_CMD_RSSISTART_IDX              0

#define EFR32_AGC_GAINRANGE_ADDR                     0x00000048
#define EFR32_AGC_GAINRANGE_MASK                     0x00003fff
  #define EFR32_AGC_GAINRANGE_MAXGAIN_IDX          0
  #define EFR32_AGC_GAINRANGE_MAXGAIN(v)           ((v) << 0)
  #define EFR32_AGC_GAINRANGE_MAXGAIN_SET(x, v)    do { (x) = (((x) & ~0x7f) | ((v) << 0)); } while(0)
  #define EFR32_AGC_GAINRANGE_MAXGAIN_GET(x)       (((x) >> 0) & 0x7f)
  #define EFR32_AGC_GAINRANGE_MINGAIN_IDX          7
  #define EFR32_AGC_GAINRANGE_MINGAIN(v)           ((v) << 7)
  #define EFR32_AGC_GAINRANGE_MINGAIN_SET(x, v)    do { (x) = (((x) & ~0x3f80) | ((v) << 7)); } while(0)
  #define EFR32_AGC_GAINRANGE_MINGAIN_GET(x)       (((x) >> 7) & 0x7f)

#define EFR32_AGC_GAININDEX_ADDR                     0x0000004c
#define EFR32_AGC_GAININDEX_MASK                     0x000fffff
  #define EFR32_AGC_GAININDEX_NUMINDEXPGA_IDX      0
  #define EFR32_AGC_GAININDEX_NUMINDEXPGA(v)       ((v) << 0)
  #define EFR32_AGC_GAININDEX_NUMINDEXPGA_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_AGC_GAININDEX_NUMINDEXPGA_GET(x)   (((x) >> 0) & 0xf)
  #define EFR32_AGC_GAININDEX_NUMINDEXDEGEN_IDX    4
  #define EFR32_AGC_GAININDEX_NUMINDEXDEGEN(v)     ((v) << 4)
  #define EFR32_AGC_GAININDEX_NUMINDEXDEGEN_SET(x, v) do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define EFR32_AGC_GAININDEX_NUMINDEXDEGEN_GET(x) (((x) >> 4) & 0x3)
  #define EFR32_AGC_GAININDEX_NUMINDEXSLICES_IDX   6
  #define EFR32_AGC_GAININDEX_NUMINDEXSLICES(v)    ((v) << 6)
  #define EFR32_AGC_GAININDEX_NUMINDEXSLICES_SET(x, v) do { (x) = (((x) & ~0x1c0) | ((v) << 6)); } while(0)
  #define EFR32_AGC_GAININDEX_NUMINDEXSLICES_GET(x) (((x) >> 6) & 0x7)
  #define EFR32_AGC_GAININDEX_NUMINDEXATTEN_IDX    9
  #define EFR32_AGC_GAININDEX_NUMINDEXATTEN(v)     ((v) << 9)
  #define EFR32_AGC_GAININDEX_NUMINDEXATTEN_SET(x, v) do { (x) = (((x) & ~0x3e00) | ((v) << 9)); } while(0)
  #define EFR32_AGC_GAININDEX_NUMINDEXATTEN_GET(x) (((x) >> 9) & 0x1f)
  #define EFR32_AGC_GAININDEX_MININDEXPGA_IDX      14
  #define EFR32_AGC_GAININDEX_MININDEXPGA(v)       ((v) << 14)
  #define EFR32_AGC_GAININDEX_MININDEXPGA_SET(x, v) do { (x) = (((x) & ~0x3c000) | ((v) << 14)); } while(0)
  #define EFR32_AGC_GAININDEX_MININDEXPGA_GET(x)   (((x) >> 14) & 0xf)
  #define EFR32_AGC_GAININDEX_MININDEXDEGEN_IDX    18
  #define EFR32_AGC_GAININDEX_MININDEXDEGEN(v)     ((v) << 18)
  #define EFR32_AGC_GAININDEX_MININDEXDEGEN_SET(x, v) do { (x) = (((x) & ~0xc0000) | ((v) << 18)); } while(0)
  #define EFR32_AGC_GAININDEX_MININDEXDEGEN_GET(x) (((x) >> 18) & 0x3)

#define EFR32_AGC_SLICECODE_ADDR                     0x00000050
#define EFR32_AGC_SLICECODE_MASK                     0x0fffffff
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX0_IDX  0
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX0(v)   ((v) << 0)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX0_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX0_GET(x) (((x) >> 0) & 0xf)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX1_IDX  4
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX1(v)   ((v) << 4)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX1_SET(x, v) do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX1_GET(x) (((x) >> 4) & 0xf)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX2_IDX  8
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX2(v)   ((v) << 8)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX2_SET(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX2_GET(x) (((x) >> 8) & 0xf)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX3_IDX  12
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX3(v)   ((v) << 12)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX3_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX3_GET(x) (((x) >> 12) & 0xf)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX4_IDX  16
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX4(v)   ((v) << 16)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX4_SET(x, v) do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX4_GET(x) (((x) >> 16) & 0xf)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX5_IDX  20
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX5(v)   ((v) << 20)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX5_SET(x, v) do { (x) = (((x) & ~0xf00000) | ((v) << 20)); } while(0)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX5_GET(x) (((x) >> 20) & 0xf)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX6_IDX  24
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX6(v)   ((v) << 24)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX6_SET(x, v) do { (x) = (((x) & ~0xf000000) | ((v) << 24)); } while(0)
  #define EFR32_AGC_SLICECODE_SLICECODEINDEX6_GET(x) (((x) >> 24) & 0xf)

#define EFR32_AGC_ATTENCODE1_ADDR                    0x00000054
#define EFR32_AGC_ATTENCODE1_MASK                    0x0fffffff
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX0_IDX 0
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX0(v)  ((v) << 0)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX0_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX0_GET(x) (((x) >> 0) & 0xf)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX1_IDX 4
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX1(v)  ((v) << 4)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX1_SET(x, v) do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX1_GET(x) (((x) >> 4) & 0xf)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX2_IDX 8
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX2(v)  ((v) << 8)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX2_SET(x, v) do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX2_GET(x) (((x) >> 8) & 0xf)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX3_IDX 12
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX3(v)  ((v) << 12)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX3_SET(x, v) do { (x) = (((x) & ~0xf000) | ((v) << 12)); } while(0)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX3_GET(x) (((x) >> 12) & 0xf)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX4_IDX 16
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX4(v)  ((v) << 16)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX4_SET(x, v) do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX4_GET(x) (((x) >> 16) & 0xf)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX5_IDX 20
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX5(v)  ((v) << 20)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX5_SET(x, v) do { (x) = (((x) & ~0xf00000) | ((v) << 20)); } while(0)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX5_GET(x) (((x) >> 20) & 0xf)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX6_IDX 24
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX6(v)  ((v) << 24)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX6_SET(x, v) do { (x) = (((x) & ~0xf000000) | ((v) << 24)); } while(0)
  #define EFR32_AGC_ATTENCODE1_ATTENCODEINDEX6_GET(x) (((x) >> 24) & 0xf)

#define EFR32_AGC_ATTENCODE2_ADDR                    0x00000058
#define EFR32_AGC_ATTENCODE2_MASK                    0x3fffffff
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX7_IDX 0
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX7(v)  ((v) << 0)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX7_SET(x, v) do { (x) = (((x) & ~0x1f) | ((v) << 0)); } while(0)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX7_GET(x) (((x) >> 0) & 0x1f)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX8_IDX 5
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX8(v)  ((v) << 5)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX8_SET(x, v) do { (x) = (((x) & ~0x3e0) | ((v) << 5)); } while(0)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX8_GET(x) (((x) >> 5) & 0x1f)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX9_IDX 10
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX9(v)  ((v) << 10)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX9_SET(x, v) do { (x) = (((x) & ~0x7c00) | ((v) << 10)); } while(0)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX9_GET(x) (((x) >> 10) & 0x1f)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX10_IDX 15
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX10(v) ((v) << 15)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX10_SET(x, v) do { (x) = (((x) & ~0xf8000) | ((v) << 15)); } while(0)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX10_GET(x) (((x) >> 15) & 0x1f)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX11_IDX 20
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX11(v) ((v) << 20)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX11_SET(x, v) do { (x) = (((x) & ~0x1f00000) | ((v) << 20)); } while(0)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX11_GET(x) (((x) >> 20) & 0x1f)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX12_IDX 25
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX12(v) ((v) << 25)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX12_SET(x, v) do { (x) = (((x) & ~0x3e000000) | ((v) << 25)); } while(0)
  #define EFR32_AGC_ATTENCODE2_ATTENCODEINDEX12_GET(x) (((x) >> 25) & 0x1f)

#define EFR32_AGC_ATTENCODE3_ADDR                    0x0000005c
#define EFR32_AGC_ATTENCODE3_MASK                    0x3fffffff
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX13_IDX 0
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX13(v) ((v) << 0)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX13_SET(x, v) do { (x) = (((x) & ~0x1f) | ((v) << 0)); } while(0)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX13_GET(x) (((x) >> 0) & 0x1f)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX14_IDX 5
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX14(v) ((v) << 5)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX14_SET(x, v) do { (x) = (((x) & ~0x3e0) | ((v) << 5)); } while(0)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX14_GET(x) (((x) >> 5) & 0x1f)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX15_IDX 10
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX15(v) ((v) << 10)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX15_SET(x, v) do { (x) = (((x) & ~0x7c00) | ((v) << 10)); } while(0)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX15_GET(x) (((x) >> 10) & 0x1f)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX16_IDX 15
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX16(v) ((v) << 15)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX16_SET(x, v) do { (x) = (((x) & ~0xf8000) | ((v) << 15)); } while(0)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX16_GET(x) (((x) >> 15) & 0x1f)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX17_IDX 20
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX17(v) ((v) << 20)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX17_SET(x, v) do { (x) = (((x) & ~0x1f00000) | ((v) << 20)); } while(0)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX17_GET(x) (((x) >> 20) & 0x1f)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX18_IDX 25
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX18(v) ((v) << 25)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX18_SET(x, v) do { (x) = (((x) & ~0x3e000000) | ((v) << 25)); } while(0)
  #define EFR32_AGC_ATTENCODE3_ATTENCODEINDEX18_GET(x) (((x) >> 25) & 0x1f)

#define EFR32_AGC_GAINERROR1_ADDR                    0x00000060
#define EFR32_AGC_GAINERROR1_MASK                    0x07ffffff
  #define EFR32_AGC_GAINERROR1_DEGENERRINDEX0_IDX  0
  #define EFR32_AGC_GAINERROR1_DEGENERRINDEX0(v)   ((v) << 0)
  #define EFR32_AGC_GAINERROR1_DEGENERRINDEX0_SET(x, v) do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFR32_AGC_GAINERROR1_DEGENERRINDEX0_GET(x) (((x) >> 0) & 0x7)
  #define EFR32_AGC_GAINERROR1_DEGENERRINDEX1_IDX  3
  #define EFR32_AGC_GAINERROR1_DEGENERRINDEX1(v)   ((v) << 3)
  #define EFR32_AGC_GAINERROR1_DEGENERRINDEX1_SET(x, v) do { (x) = (((x) & ~0x38) | ((v) << 3)); } while(0)
  #define EFR32_AGC_GAINERROR1_DEGENERRINDEX1_GET(x) (((x) >> 3) & 0x7)
  #define EFR32_AGC_GAINERROR1_DEGENERRINDEX2_IDX  6
  #define EFR32_AGC_GAINERROR1_DEGENERRINDEX2(v)   ((v) << 6)
  #define EFR32_AGC_GAINERROR1_DEGENERRINDEX2_SET(x, v) do { (x) = (((x) & ~0x1c0) | ((v) << 6)); } while(0)
  #define EFR32_AGC_GAINERROR1_DEGENERRINDEX2_GET(x) (((x) >> 6) & 0x7)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX0_IDX  9
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX0(v)   ((v) << 9)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX0_SET(x, v) do { (x) = (((x) & ~0xe00) | ((v) << 9)); } while(0)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX0_GET(x) (((x) >> 9) & 0x7)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX1_IDX  12
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX1(v)   ((v) << 12)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX1_SET(x, v) do { (x) = (((x) & ~0x7000) | ((v) << 12)); } while(0)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX1_GET(x) (((x) >> 12) & 0x7)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX2_IDX  15
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX2(v)   ((v) << 15)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX2_SET(x, v) do { (x) = (((x) & ~0x38000) | ((v) << 15)); } while(0)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX2_GET(x) (((x) >> 15) & 0x7)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX3_IDX  18
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX3(v)   ((v) << 18)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX3_SET(x, v) do { (x) = (((x) & ~0x1c0000) | ((v) << 18)); } while(0)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX3_GET(x) (((x) >> 18) & 0x7)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX4_IDX  21
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX4(v)   ((v) << 21)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX4_SET(x, v) do { (x) = (((x) & ~0xe00000) | ((v) << 21)); } while(0)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX4_GET(x) (((x) >> 21) & 0x7)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX5_IDX  24
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX5(v)   ((v) << 24)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX5_SET(x, v) do { (x) = (((x) & ~0x7000000) | ((v) << 24)); } while(0)
  #define EFR32_AGC_GAINERROR1_SLICEERRINDEX5_GET(x) (((x) >> 24) & 0x7)

#define EFR32_AGC_GAINERROR2_ADDR                    0x00000064
#define EFR32_AGC_GAINERROR2_MASK                    0x3fffffff
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX0_IDX  0
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX0(v)   ((v) << 0)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX0_SET(x, v) do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX0_GET(x) (((x) >> 0) & 0x7)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX1_IDX  3
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX1(v)   ((v) << 3)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX1_SET(x, v) do { (x) = (((x) & ~0x38) | ((v) << 3)); } while(0)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX1_GET(x) (((x) >> 3) & 0x7)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX2_IDX  6
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX2(v)   ((v) << 6)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX2_SET(x, v) do { (x) = (((x) & ~0x1c0) | ((v) << 6)); } while(0)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX2_GET(x) (((x) >> 6) & 0x7)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX3_IDX  9
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX3(v)   ((v) << 9)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX3_SET(x, v) do { (x) = (((x) & ~0xe00) | ((v) << 9)); } while(0)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX3_GET(x) (((x) >> 9) & 0x7)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX4_IDX  12
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX4(v)   ((v) << 12)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX4_SET(x, v) do { (x) = (((x) & ~0x7000) | ((v) << 12)); } while(0)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX4_GET(x) (((x) >> 12) & 0x7)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX5_IDX  15
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX5(v)   ((v) << 15)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX5_SET(x, v) do { (x) = (((x) & ~0x38000) | ((v) << 15)); } while(0)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX5_GET(x) (((x) >> 15) & 0x7)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX6_IDX  18
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX6(v)   ((v) << 18)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX6_SET(x, v) do { (x) = (((x) & ~0x1c0000) | ((v) << 18)); } while(0)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX6_GET(x) (((x) >> 18) & 0x7)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX7_IDX  21
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX7(v)   ((v) << 21)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX7_SET(x, v) do { (x) = (((x) & ~0xe00000) | ((v) << 21)); } while(0)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX7_GET(x) (((x) >> 21) & 0x7)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX8_IDX  24
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX8(v)   ((v) << 24)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX8_SET(x, v) do { (x) = (((x) & ~0x7000000) | ((v) << 24)); } while(0)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX8_GET(x) (((x) >> 24) & 0x7)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX9_IDX  27
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX9(v)   ((v) << 27)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX9_SET(x, v) do { (x) = (((x) & ~0x38000000) | ((v) << 27)); } while(0)
  #define EFR32_AGC_GAINERROR2_ATTENERRINDEX9_GET(x) (((x) >> 27) & 0x7)

#define EFR32_AGC_GAINERROR3_ADDR                    0x00000068
#define EFR32_AGC_GAINERROR3_MASK                    0x00ffffff
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX10_IDX 0
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX10(v)  ((v) << 0)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX10_SET(x, v) do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX10_GET(x) (((x) >> 0) & 0x7)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX11_IDX 3
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX11(v)  ((v) << 3)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX11_SET(x, v) do { (x) = (((x) & ~0x38) | ((v) << 3)); } while(0)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX11_GET(x) (((x) >> 3) & 0x7)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX12_IDX 6
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX12(v)  ((v) << 6)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX12_SET(x, v) do { (x) = (((x) & ~0x1c0) | ((v) << 6)); } while(0)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX12_GET(x) (((x) >> 6) & 0x7)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX13_IDX 9
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX13(v)  ((v) << 9)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX13_SET(x, v) do { (x) = (((x) & ~0xe00) | ((v) << 9)); } while(0)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX13_GET(x) (((x) >> 9) & 0x7)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX14_IDX 12
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX14(v)  ((v) << 12)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX14_SET(x, v) do { (x) = (((x) & ~0x7000) | ((v) << 12)); } while(0)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX14_GET(x) (((x) >> 12) & 0x7)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX15_IDX 15
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX15(v)  ((v) << 15)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX15_SET(x, v) do { (x) = (((x) & ~0x38000) | ((v) << 15)); } while(0)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX15_GET(x) (((x) >> 15) & 0x7)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX16_IDX 18
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX16(v)  ((v) << 18)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX16_SET(x, v) do { (x) = (((x) & ~0x1c0000) | ((v) << 18)); } while(0)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX16_GET(x) (((x) >> 18) & 0x7)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX17_IDX 21
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX17(v)  ((v) << 21)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX17_SET(x, v) do { (x) = (((x) & ~0xe00000) | ((v) << 21)); } while(0)
  #define EFR32_AGC_GAINERROR3_ATTENERRINDEX17_GET(x) (((x) >> 21) & 0x7)

#define EFR32_AGC_MANUALCTRL_ADDR                    0x0000006c
#define EFR32_AGC_MANUALCTRL_MASK                    0x000000ff
  #define EFR32_AGC_MANUALCTRL_ENMANUALRSTPKD      0x00000001
  #define EFR32_AGC_MANUALCTRL_ENMANUALRSTPKD_IDX  0
  #define EFR32_AGC_MANUALCTRL_MANUALRSTPKD        0x00000002
  #define EFR32_AGC_MANUALCTRL_MANUALRSTPKD_IDX    1
  #define EFR32_AGC_MANUALCTRL_ENMANUALSLICESSEL   0x00000004
  #define EFR32_AGC_MANUALCTRL_ENMANUALSLICESSEL_IDX 2
  #define EFR32_AGC_MANUALCTRL_MANUALSLICESSEL     0x00000008
  #define EFR32_AGC_MANUALCTRL_MANUALSLICESSEL_IDX 3
  #define EFR32_AGC_MANUALCTRL_ENMANUALSLICESDUMP  0x00000010
  #define EFR32_AGC_MANUALCTRL_ENMANUALSLICESDUMP_IDX 4
  #define EFR32_AGC_MANUALCTRL_MANUALSLICESDUMP    0x00000020
  #define EFR32_AGC_MANUALCTRL_MANUALSLICESDUMP_IDX 5
  #define EFR32_AGC_MANUALCTRL_ENMANUALRSTRFPKD    0x00000040
  #define EFR32_AGC_MANUALCTRL_ENMANUALRSTRFPKD_IDX 6
  #define EFR32_AGC_MANUALCTRL_MANUALRSTRFPKD      0x00000080
  #define EFR32_AGC_MANUALCTRL_MANUALRSTRFPKD_IDX  7

#define EFR32_AGC_GAINSTEPLIM_ADDR                   0x00000070
#define EFR32_AGC_GAINSTEPLIM_MASK                   0x7fffffff
  #define EFR32_AGC_GAINSTEPLIM_FASTSTEPDOWN_IDX   0
  #define EFR32_AGC_GAINSTEPLIM_FASTSTEPDOWN(v)    ((v) << 0)
  #define EFR32_AGC_GAINSTEPLIM_FASTSTEPDOWN_SET(x, v) do { (x) = (((x) & ~0x3f) | ((v) << 0)); } while(0)
  #define EFR32_AGC_GAINSTEPLIM_FASTSTEPDOWN_GET(x) (((x) >> 0) & 0x3f)
  #define EFR32_AGC_GAINSTEPLIM_EN2XFASTSTEPDOWN   0x00000040
  #define EFR32_AGC_GAINSTEPLIM_EN2XFASTSTEPDOWN_IDX 6
  #define EFR32_AGC_GAINSTEPLIM_FASTSTEPUP_IDX     7
  #define EFR32_AGC_GAINSTEPLIM_FASTSTEPUP(v)      ((v) << 7)
  #define EFR32_AGC_GAINSTEPLIM_FASTSTEPUP_SET(x, v) do { (x) = (((x) & ~0x1f80) | ((v) << 7)); } while(0)
  #define EFR32_AGC_GAINSTEPLIM_FASTSTEPUP_GET(x)  (((x) >> 7) & 0x3f)
  #define EFR32_AGC_GAINSTEPLIM_EN2XFASTSTEPUP     0x00002000
  #define EFR32_AGC_GAINSTEPLIM_EN2XFASTSTEPUP_IDX 13
  #define EFR32_AGC_GAINSTEPLIM_CFLOOPSTEPMAX_IDX  14
  #define EFR32_AGC_GAINSTEPLIM_CFLOOPSTEPMAX(v)   ((v) << 14)
  #define EFR32_AGC_GAINSTEPLIM_CFLOOPSTEPMAX_SET(x, v) do { (x) = (((x) & ~0xfc000) | ((v) << 14)); } while(0)
  #define EFR32_AGC_GAINSTEPLIM_CFLOOPSTEPMAX_GET(x) (((x) >> 14) & 0x3f)
  #define EFR32_AGC_GAINSTEPLIM_SLOWDECAYCNT_IDX   20
  #define EFR32_AGC_GAINSTEPLIM_SLOWDECAYCNT(v)    ((v) << 20)
  #define EFR32_AGC_GAINSTEPLIM_SLOWDECAYCNT_SET(x, v) do { (x) = (((x) & ~0x7f00000) | ((v) << 20)); } while(0)
  #define EFR32_AGC_GAINSTEPLIM_SLOWDECAYCNT_GET(x) (((x) >> 20) & 0x7f)
  #define EFR32_AGC_GAINSTEPLIM_ADCATTENCODE_IDX   27
  #define EFR32_AGC_GAINSTEPLIM_ADCATTENCODE(v)    ((v) << 27)
  #define EFR32_AGC_GAINSTEPLIM_ADCATTENCODE_SET(x, v) do { (x) = (((x) & ~0x18000000) | ((v) << 27)); } while(0)
  #define EFR32_AGC_GAINSTEPLIM_ADCATTENCODE_GET(x) (((x) >> 27) & 0x3)
  #define EFR32_AGC_GAINSTEPLIM_ADCATTENMODE_IDX   29
  #define EFR32_AGC_GAINSTEPLIM_ADCATTENMODE(v)    ((EFR32_AGC_GAINSTEPLIM_ADCATTENMODE_##v) << 29)
  #define EFR32_AGC_GAINSTEPLIM_ADCATTENMODE_SET(x, v) do { (x) = (((x) & ~0x60000000) | ((EFR32_AGC_GAINSTEPLIM_ADCATTENMODE_##v) << 29)); } while(0)
  #define EFR32_AGC_GAINSTEPLIM_ADCATTENMODE_GET(x) (((x) >> 29) & 0x3)
/**  */
    #define EFR32_AGC_GAINSTEPLIM_ADCATTENMODE_DISABLE 0x00000000
/**  */
    #define EFR32_AGC_GAINSTEPLIM_ADCATTENMODE_NOTMAXGAIN 0x00000001
/**  */
    #define EFR32_AGC_GAINSTEPLIM_ADCATTENMODE_ADCUNSTABLE 0x00000002
/**  */
    #define EFR32_AGC_GAINSTEPLIM_ADCATTENMODE_STABILITYANDGAIN 0x00000003

#define EFR32_AGC_LOOPDEL_ADDR                       0x00000074
#define EFR32_AGC_LOOPDEL_MASK                       0x000fffff
  #define EFR32_AGC_LOOPDEL_PKDWAIT_IDX            0
  #define EFR32_AGC_LOOPDEL_PKDWAIT(v)             ((v) << 0)
  #define EFR32_AGC_LOOPDEL_PKDWAIT_SET(x, v)      do { (x) = (((x) & ~0x3ff) | ((v) << 0)); } while(0)
  #define EFR32_AGC_LOOPDEL_PKDWAIT_GET(x)         (((x) >> 0) & 0x3ff)
  #define EFR32_AGC_LOOPDEL_IFPGADEL_IDX           10
  #define EFR32_AGC_LOOPDEL_IFPGADEL(v)            ((v) << 10)
  #define EFR32_AGC_LOOPDEL_IFPGADEL_SET(x, v)     do { (x) = (((x) & ~0x7c00) | ((v) << 10)); } while(0)
  #define EFR32_AGC_LOOPDEL_IFPGADEL_GET(x)        (((x) >> 10) & 0x1f)
  #define EFR32_AGC_LOOPDEL_LNASLICESDEL_IDX       15
  #define EFR32_AGC_LOOPDEL_LNASLICESDEL(v)        ((v) << 15)
  #define EFR32_AGC_LOOPDEL_LNASLICESDEL_SET(x, v) do { (x) = (((x) & ~0xf8000) | ((v) << 15)); } while(0)
  #define EFR32_AGC_LOOPDEL_LNASLICESDEL_GET(x)    (((x) >> 15) & 0x1f)

#define EFR32_AGC_MININDEX_ADDR                      0x00000078
#define EFR32_AGC_MININDEX_MASK                      0x00ffffff
  #define EFR32_AGC_MININDEX_INDEXMINATTEN_IDX     0
  #define EFR32_AGC_MININDEX_INDEXMINATTEN(v)      ((v) << 0)
  #define EFR32_AGC_MININDEX_INDEXMINATTEN_SET(x, v) do { (x) = (((x) & ~0x3f) | ((v) << 0)); } while(0)
  #define EFR32_AGC_MININDEX_INDEXMINATTEN_GET(x)  (((x) >> 0) & 0x3f)
  #define EFR32_AGC_MININDEX_INDEXMINSLICES_IDX    6
  #define EFR32_AGC_MININDEX_INDEXMINSLICES(v)     ((v) << 6)
  #define EFR32_AGC_MININDEX_INDEXMINSLICES_SET(x, v) do { (x) = (((x) & ~0xfc0) | ((v) << 6)); } while(0)
  #define EFR32_AGC_MININDEX_INDEXMINSLICES_GET(x) (((x) >> 6) & 0x3f)
  #define EFR32_AGC_MININDEX_INDEXMINDEGEN_IDX     12
  #define EFR32_AGC_MININDEX_INDEXMINDEGEN(v)      ((v) << 12)
  #define EFR32_AGC_MININDEX_INDEXMINDEGEN_SET(x, v) do { (x) = (((x) & ~0x3f000) | ((v) << 12)); } while(0)
  #define EFR32_AGC_MININDEX_INDEXMINDEGEN_GET(x)  (((x) >> 12) & 0x3f)
  #define EFR32_AGC_MININDEX_INDEXMINPGA_IDX       18
  #define EFR32_AGC_MININDEX_INDEXMINPGA(v)        ((v) << 18)
  #define EFR32_AGC_MININDEX_INDEXMINPGA_SET(x, v) do { (x) = (((x) & ~0xfc0000) | ((v) << 18)); } while(0)
  #define EFR32_AGC_MININDEX_INDEXMINPGA_GET(x)    (((x) >> 18) & 0x3f)

#define EFR32_AGC_LBT_ADDR                           0x00000080
#define EFR32_AGC_LBT_MASK                           0x0000007f
  #define EFR32_AGC_LBT_CCARSSIPERIOD_IDX          0
  #define EFR32_AGC_LBT_CCARSSIPERIOD(v)           ((v) << 0)
  #define EFR32_AGC_LBT_CCARSSIPERIOD_SET(x, v)    do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define EFR32_AGC_LBT_CCARSSIPERIOD_GET(x)       (((x) >> 0) & 0xf)
  #define EFR32_AGC_LBT_ENCCARSSIPERIOD            0x00000010
  #define EFR32_AGC_LBT_ENCCARSSIPERIOD_IDX        4
  #define EFR32_AGC_LBT_ENCCAGAINREDUCED           0x00000020
  #define EFR32_AGC_LBT_ENCCAGAINREDUCED_IDX       5
  #define EFR32_AGC_LBT_ENCCARSSIMAX               0x00000040
  #define EFR32_AGC_LBT_ENCCARSSIMAX_IDX           6

#endif

