/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs cdefs_use_reg_mask=1 cdefs_use_field_setval=1                \
     -i crypto.bf                \
     -O crypto.h
*/

#ifndef _CRYPTO_BFGEN_DEFS_
#define _CRYPTO_BFGEN_DEFS_

#define CRYPTO_CTRL_ADDR                             0x00000000
#define CRYPTO_CTRL_MASK                             0xb333f5b7
  #define CRYPTO_CTRL_AES                          0x00000001
  #define CRYPTO_CTRL_KEYBUFDIS                    0x00000002
  #define CRYPTO_CTRL_SHA                          0x00000004
  #define CRYPTO_CTRL_READBUFSEL(v)                ((v) << 4)
  #define CRYPTO_CTRL_READBUFSEL_SET(x, v)         do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define CRYPTO_CTRL_READBUFSEL_GET(x)            (((x) >> 4) & 0x3)
  #define CRYPTO_CTRL_WRITEBUFSEL(v)               ((v) << 7)
  #define CRYPTO_CTRL_WRITEBUFSEL_SET(x, v)        do { (x) = (((x) & ~0x180) | ((v) << 7)); } while(0)
  #define CRYPTO_CTRL_WRITEBUFSEL_GET(x)           (((x) >> 7) & 0x3)
  #define CRYPTO_CTRL_NOBUSYSTALL                  0x00000400
  #define CRYPTO_CTRL_DATA0TOBUFXOROW              0x00001000
  #define CRYPTO_CTRL_DATA1TOBUFXOROW              0x00002000
  #define CRYPTO_CTRL_INCWIDTH(v)                  ((CRYPTO_CTRL_INCWIDTH_##v) << 14)
  #define CRYPTO_CTRL_INCWIDTH_SET(x, v)           do { (x) = (((x) & ~0xc000) | ((CRYPTO_CTRL_INCWIDTH_##v) << 14)); } while(0)
  #define CRYPTO_CTRL_INCWIDTH_SETVAL(x, v)        do { (x) = (((x) & ~0xc000) | ((v) << 14)); } while(0)
  #define CRYPTO_CTRL_INCWIDTH_GET(x)              (((x) >> 14) & 0x3)
/**  */
    #define CRYPTO_CTRL_INCWIDTH_INCWIDTH1           0x00000000
/**  */
    #define CRYPTO_CTRL_INCWIDTH_INCWIDTH2           0x00000001
/**  */
    #define CRYPTO_CTRL_INCWIDTH_INCWIDTH3           0x00000002
/**  */
    #define CRYPTO_CTRL_INCWIDTH_INCWIDTH4           0x00000003
  #define CRYPTO_CTRL_DMA0MODE(v)                  ((CRYPTO_CTRL_DMA0MODE_##v) << 16)
  #define CRYPTO_CTRL_DMA0MODE_SET(x, v)           do { (x) = (((x) & ~0x30000) | ((CRYPTO_CTRL_DMA0MODE_##v) << 16)); } while(0)
  #define CRYPTO_CTRL_DMA0MODE_SETVAL(x, v)        do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define CRYPTO_CTRL_DMA0MODE_GET(x)              (((x) >> 16) & 0x3)
/**  */
    #define CRYPTO_CTRL_DMA0MODE_FULL                0x00000000
/**  */
    #define CRYPTO_CTRL_DMA0MODE_LENLIMIT            0x00000001
/**  */
    #define CRYPTO_CTRL_DMA0MODE_FULLBYTE            0x00000002
/**  */
    #define CRYPTO_CTRL_DMA0MODE_LENLIMITBYTE        0x00000003
  #define CRYPTO_CTRL_DMA0RSEL(v)                  ((CRYPTO_CTRL_DMA0RSEL_##v) << 20)
  #define CRYPTO_CTRL_DMA0RSEL_SET(x, v)           do { (x) = (((x) & ~0x300000) | ((CRYPTO_CTRL_DMA0RSEL_##v) << 20)); } while(0)
  #define CRYPTO_CTRL_DMA0RSEL_SETVAL(x, v)        do { (x) = (((x) & ~0x300000) | ((v) << 20)); } while(0)
  #define CRYPTO_CTRL_DMA0RSEL_GET(x)              (((x) >> 20) & 0x3)
/**  */
    #define CRYPTO_CTRL_DMA0RSEL_DATA0               0x00000000
/**  */
    #define CRYPTO_CTRL_DMA0RSEL_DDATA0              0x00000001
/**  */
    #define CRYPTO_CTRL_DMA0RSEL_DDATA0BIG           0x00000002
/**  */
    #define CRYPTO_CTRL_DMA0RSEL_QDATA0              0x00000003
  #define CRYPTO_CTRL_DMA1MODE(v)                  ((CRYPTO_CTRL_DMA1MODE_##v) << 24)
  #define CRYPTO_CTRL_DMA1MODE_SET(x, v)           do { (x) = (((x) & ~0x3000000) | ((CRYPTO_CTRL_DMA1MODE_##v) << 24)); } while(0)
  #define CRYPTO_CTRL_DMA1MODE_SETVAL(x, v)        do { (x) = (((x) & ~0x3000000) | ((v) << 24)); } while(0)
  #define CRYPTO_CTRL_DMA1MODE_GET(x)              (((x) >> 24) & 0x3)
/**  */
    #define CRYPTO_CTRL_DMA1MODE_FULL                0x00000000
/**  */
    #define CRYPTO_CTRL_DMA1MODE_LENLIMIT            0x00000001
/**  */
    #define CRYPTO_CTRL_DMA1MODE_FULLBYTE            0x00000002
/**  */
    #define CRYPTO_CTRL_DMA1MODE_LENLIMITBYTE        0x00000003
  #define CRYPTO_CTRL_DMA1RSEL(v)                  ((CRYPTO_CTRL_DMA1RSEL_##v) << 28)
  #define CRYPTO_CTRL_DMA1RSEL_SET(x, v)           do { (x) = (((x) & ~0x30000000) | ((CRYPTO_CTRL_DMA1RSEL_##v) << 28)); } while(0)
  #define CRYPTO_CTRL_DMA1RSEL_SETVAL(x, v)        do { (x) = (((x) & ~0x30000000) | ((v) << 28)); } while(0)
  #define CRYPTO_CTRL_DMA1RSEL_GET(x)              (((x) >> 28) & 0x3)
/**  */
    #define CRYPTO_CTRL_DMA1RSEL_DATA1               0x00000000
/**  */
    #define CRYPTO_CTRL_DMA1RSEL_DDATA1              0x00000001
/**  */
    #define CRYPTO_CTRL_DMA1RSEL_QDATA1              0x00000002
/**  */
    #define CRYPTO_CTRL_DMA1RSEL_QDATA1BIG           0x00000003
  #define CRYPTO_CTRL_COMBDMA0WEREQ                0x80000000

#define CRYPTO_WAC_ADDR                              0x00000004
#define CRYPTO_WAC_MASK                              0x00000f1f
  #define CRYPTO_WAC_MODULUS(v)                    ((CRYPTO_WAC_MODULUS_##v) << 0)
  #define CRYPTO_WAC_MODULUS_SET(x, v)             do { (x) = (((x) & ~0xf) | ((CRYPTO_WAC_MODULUS_##v) << 0)); } while(0)
  #define CRYPTO_WAC_MODULUS_SETVAL(x, v)          do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define CRYPTO_WAC_MODULUS_GET(x)                (((x) >> 0) & 0xf)
/**  */
    #define CRYPTO_WAC_MODULUS_BIN256                0x00000000
/**  */
    #define CRYPTO_WAC_MODULUS_BIN128                0x00000001
/**  */
    #define CRYPTO_WAC_MODULUS_ECCBIN233P            0x00000002
/**  */
    #define CRYPTO_WAC_MODULUS_ECCBIN163P            0x00000003
/**  */
    #define CRYPTO_WAC_MODULUS_GCMBIN128             0x00000004
/**  */
    #define CRYPTO_WAC_MODULUS_ECCPRIME256P          0x00000005
/**  */
    #define CRYPTO_WAC_MODULUS_ECCPRIME224P          0x00000006
/**  */
    #define CRYPTO_WAC_MODULUS_ECCPRIME192P          0x00000007
/**  */
    #define CRYPTO_WAC_MODULUS_ECCBIN233N            0x00000008
/**  */
    #define CRYPTO_WAC_MODULUS_ECCBIN233KN           0x00000009
/**  */
    #define CRYPTO_WAC_MODULUS_ECCBIN163N            0x0000000a
/**  */
    #define CRYPTO_WAC_MODULUS_ECCBIN163KN           0x0000000b
/**  */
    #define CRYPTO_WAC_MODULUS_ECCPRIME256N          0x0000000c
/**  */
    #define CRYPTO_WAC_MODULUS_ECCPRIME224N          0x0000000d
/**  */
    #define CRYPTO_WAC_MODULUS_ECCPRIME192N          0x0000000e
  #define CRYPTO_WAC_MODOP                         0x00000010
  #define CRYPTO_WAC_MULWIDTH(v)                   ((CRYPTO_WAC_MULWIDTH_##v) << 8)
  #define CRYPTO_WAC_MULWIDTH_SET(x, v)            do { (x) = (((x) & ~0x300) | ((CRYPTO_WAC_MULWIDTH_##v) << 8)); } while(0)
  #define CRYPTO_WAC_MULWIDTH_SETVAL(x, v)         do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define CRYPTO_WAC_MULWIDTH_GET(x)               (((x) >> 8) & 0x3)
/**  */
    #define CRYPTO_WAC_MULWIDTH_MUL256               0x00000000
/**  */
    #define CRYPTO_WAC_MULWIDTH_MUL128               0x00000001
/**  */
    #define CRYPTO_WAC_MULWIDTH_MULMOD               0x00000002
  #define CRYPTO_WAC_RESULTWIDTH(v)                ((CRYPTO_WAC_RESULTWIDTH_##v) << 10)
  #define CRYPTO_WAC_RESULTWIDTH_SET(x, v)         do { (x) = (((x) & ~0xc00) | ((CRYPTO_WAC_RESULTWIDTH_##v) << 10)); } while(0)
  #define CRYPTO_WAC_RESULTWIDTH_SETVAL(x, v)      do { (x) = (((x) & ~0xc00) | ((v) << 10)); } while(0)
  #define CRYPTO_WAC_RESULTWIDTH_GET(x)            (((x) >> 10) & 0x3)
/**  */
    #define CRYPTO_WAC_RESULTWIDTH_E256BIT           0x00000000
/**  */
    #define CRYPTO_WAC_RESULTWIDTH_E128BIT           0x00000001
/**  */
    #define CRYPTO_WAC_RESULTWIDTH_E260BIT           0x00000002

#define CRYPTO_CMD_ADDR                              0x00000008
#define CRYPTO_CMD_MASK                              0x00000eff
  #define CRYPTO_CMD_INSTR(v)                      ((CRYPTO_CMD_INSTR_##v) << 0)
  #define CRYPTO_CMD_INSTR_SET(x, v)               do { (x) = (((x) & ~0xff) | ((CRYPTO_CMD_INSTR_##v) << 0)); } while(0)
  #define CRYPTO_CMD_INSTR_SETVAL(x, v)            do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_CMD_INSTR_GET(x)                  (((x) >> 0) & 0xff)
/**  */
    #define CRYPTO_CMD_INSTR_END                     0x00000000
/**  */
    #define CRYPTO_CMD_INSTR_EXEC                    0x00000001
/**  */
    #define CRYPTO_CMD_INSTR_DATA1INC                0x00000003
/**  */
    #define CRYPTO_CMD_INSTR_DATA1INCCLR             0x00000004
/**  */
    #define CRYPTO_CMD_INSTR_AESENC                  0x00000005
/**  */
    #define CRYPTO_CMD_INSTR_AESDEC                  0x00000006
/**  */
    #define CRYPTO_CMD_INSTR_SHA                     0x00000007
/**  */
    #define CRYPTO_CMD_INSTR_ADD                     0x00000008
/**  */
    #define CRYPTO_CMD_INSTR_ADDC                    0x00000009
/**  */
    #define CRYPTO_CMD_INSTR_LADD                    0x0000000a
/**  */
    #define CRYPTO_CMD_INSTR_LADDC                   0x0000000b
/**  */
    #define CRYPTO_CMD_INSTR_MADD                    0x0000000c
/**  */
    #define CRYPTO_CMD_INSTR_MADD32                  0x0000000d
/**  */
    #define CRYPTO_CMD_INSTR_SUB                     0x00000010
/**  */
    #define CRYPTO_CMD_INSTR_SUBC                    0x00000011
/**  */
    #define CRYPTO_CMD_INSTR_LSUB                    0x00000012
/**  */
    #define CRYPTO_CMD_INSTR_LSUBC                   0x00000013
/**  */
    #define CRYPTO_CMD_INSTR_MSUB                    0x00000014
/**  */
    #define CRYPTO_CMD_INSTR_MUL                     0x00000018
/**  */
    #define CRYPTO_CMD_INSTR_MULC                    0x00000019
/**  */
    #define CRYPTO_CMD_INSTR_LMUL                    0x0000001a
/**  */
    #define CRYPTO_CMD_INSTR_LMULC                   0x0000001b
/**  */
    #define CRYPTO_CMD_INSTR_MMUL                    0x0000001c
/**  */
    #define CRYPTO_CMD_INSTR_MULO                    0x0000001d
/**  */
    #define CRYPTO_CMD_INSTR_LMULO                   0x0000001f
/**  */
    #define CRYPTO_CMD_INSTR_SHL                     0x00000020
/**  */
    #define CRYPTO_CMD_INSTR_SHLC                    0x00000021
/**  */
    #define CRYPTO_CMD_INSTR_SHLB                    0x00000022
/**  */
    #define CRYPTO_CMD_INSTR_SHL1                    0x00000023
/**  */
    #define CRYPTO_CMD_INSTR_SHR                     0x00000024
/**  */
    #define CRYPTO_CMD_INSTR_SHRC                    0x00000025
/**  */
    #define CRYPTO_CMD_INSTR_SHRB                    0x00000026
/**  */
    #define CRYPTO_CMD_INSTR_SHR1                    0x00000027
/**  */
    #define CRYPTO_CMD_INSTR_ADDO                    0x00000028
/**  */
    #define CRYPTO_CMD_INSTR_ADDIC                   0x00000029
/**  */
    #define CRYPTO_CMD_INSTR_LADDO                   0x0000002a
/**  */
    #define CRYPTO_CMD_INSTR_LADDIC                  0x0000002b
/**  */
    #define CRYPTO_CMD_INSTR_CLR                     0x00000030
/**  */
    #define CRYPTO_CMD_INSTR_XOR                     0x00000031
/**  */
    #define CRYPTO_CMD_INSTR_INV                     0x00000032
/**  */
    #define CRYPTO_CMD_INSTR_CSET                    0x00000034
/**  */
    #define CRYPTO_CMD_INSTR_CCLR                    0x00000035
/**  */
    #define CRYPTO_CMD_INSTR_BBSWAP128               0x00000036
/**  */
    #define CRYPTO_CMD_INSTR_INC                     0x00000038
/**  */
    #define CRYPTO_CMD_INSTR_DEC                     0x00000039
/**  */
    #define CRYPTO_CMD_INSTR_LINC                    0x0000003a
/**  */
    #define CRYPTO_CMD_INSTR_LDEC                    0x0000003b
/**  */
    #define CRYPTO_CMD_INSTR_SHRA                    0x0000003e
/**  */
    #define CRYPTO_CMD_INSTR_DATA0TODATA0            0x00000040
/**  */
    #define CRYPTO_CMD_INSTR_DATA0TODATA0XOR         0x00000041
/**  */
    #define CRYPTO_CMD_INSTR_DATA0TODATA0XORLEN      0x00000042
/**  */
    #define CRYPTO_CMD_INSTR_DATA0TODATA1            0x00000044
/**  */
    #define CRYPTO_CMD_INSTR_DATA0TODATA2            0x00000045
/**  */
    #define CRYPTO_CMD_INSTR_DATA0TODATA3            0x00000046
/**  */
    #define CRYPTO_CMD_INSTR_DATA1TODATA0            0x00000048
/**  */
    #define CRYPTO_CMD_INSTR_DATA1TODATA0XOR         0x00000049
/**  */
    #define CRYPTO_CMD_INSTR_DATA1TODATA0XORLEN      0x0000004a
/**  */
    #define CRYPTO_CMD_INSTR_DATA1TODATA2            0x0000004d
/**  */
    #define CRYPTO_CMD_INSTR_DATA1TODATA3            0x0000004e
/**  */
    #define CRYPTO_CMD_INSTR_DATA2TODATA0            0x00000050
/**  */
    #define CRYPTO_CMD_INSTR_DATA2TODATA0XOR         0x00000051
/**  */
    #define CRYPTO_CMD_INSTR_DATA2TODATA0XORLEN      0x00000052
/**  */
    #define CRYPTO_CMD_INSTR_DATA2TODATA1            0x00000054
/**  */
    #define CRYPTO_CMD_INSTR_DATA2TODATA3            0x00000056
/**  */
    #define CRYPTO_CMD_INSTR_DATA3TODATA0            0x00000058
/**  */
    #define CRYPTO_CMD_INSTR_DATA3TODATA0XOR         0x00000059
/**  */
    #define CRYPTO_CMD_INSTR_DATA3TODATA0XORLEN      0x0000005a
/**  */
    #define CRYPTO_CMD_INSTR_DATA3TODATA1            0x0000005c
/**  */
    #define CRYPTO_CMD_INSTR_DATA3TODATA2            0x0000005d
/**  */
    #define CRYPTO_CMD_INSTR_DATATODMA0              0x00000063
/**  */
    #define CRYPTO_CMD_INSTR_DATA0TOBUF              0x00000064
/**  */
    #define CRYPTO_CMD_INSTR_DATA0TOBUFXOR           0x00000065
/**  */
    #define CRYPTO_CMD_INSTR_DATATODMA1              0x0000006b
/**  */
    #define CRYPTO_CMD_INSTR_DATA1TOBUF              0x0000006c
/**  */
    #define CRYPTO_CMD_INSTR_DATA1TOBUFXOR           0x0000006d
/**  */
    #define CRYPTO_CMD_INSTR_DMA0TODATA              0x00000070
/**  */
    #define CRYPTO_CMD_INSTR_DMA0TODATAXOR           0x00000071
/**  */
    #define CRYPTO_CMD_INSTR_DMA1TODATA              0x00000072
/**  */
    #define CRYPTO_CMD_INSTR_BUFTODATA0              0x00000078
/**  */
    #define CRYPTO_CMD_INSTR_BUFTODATA0XOR           0x00000079
/**  */
    #define CRYPTO_CMD_INSTR_BUFTODATA1              0x0000007a
/**  */
    #define CRYPTO_CMD_INSTR_DDATA0TODDATA1          0x00000081
/**  */
    #define CRYPTO_CMD_INSTR_DDATA0TODDATA2          0x00000082
/**  */
    #define CRYPTO_CMD_INSTR_DDATA0TODDATA3          0x00000083
/**  */
    #define CRYPTO_CMD_INSTR_DDATA0TODDATA4          0x00000084
/**  */
    #define CRYPTO_CMD_INSTR_DDATA0LTODATA0          0x00000085
/**  */
    #define CRYPTO_CMD_INSTR_DDATA0HTODATA1          0x00000086
/**  */
    #define CRYPTO_CMD_INSTR_DDATA0LTODATA2          0x00000087
/**  */
    #define CRYPTO_CMD_INSTR_DDATA1TODDATA0          0x00000088
/**  */
    #define CRYPTO_CMD_INSTR_DDATA1TODDATA2          0x0000008a
/**  */
    #define CRYPTO_CMD_INSTR_DDATA1TODDATA3          0x0000008b
/**  */
    #define CRYPTO_CMD_INSTR_DDATA1TODDATA4          0x0000008c
/**  */
    #define CRYPTO_CMD_INSTR_DDATA1LTODATA0          0x0000008d
/**  */
    #define CRYPTO_CMD_INSTR_DDATA1HTODATA1          0x0000008e
/**  */
    #define CRYPTO_CMD_INSTR_DDATA1LTODATA2          0x0000008f
/**  */
    #define CRYPTO_CMD_INSTR_DDATA2TODDATA0          0x00000090
/**  */
    #define CRYPTO_CMD_INSTR_DDATA2TODDATA1          0x00000091
/**  */
    #define CRYPTO_CMD_INSTR_DDATA2TODDATA3          0x00000093
/**  */
    #define CRYPTO_CMD_INSTR_DDATA2TODDATA4          0x00000094
/**  */
    #define CRYPTO_CMD_INSTR_DDATA2LTODATA2          0x00000097
/**  */
    #define CRYPTO_CMD_INSTR_DDATA3TODDATA0          0x00000098
/**  */
    #define CRYPTO_CMD_INSTR_DDATA3TODDATA1          0x00000099
/**  */
    #define CRYPTO_CMD_INSTR_DDATA3TODDATA2          0x0000009a
/**  */
    #define CRYPTO_CMD_INSTR_DDATA3TODDATA4          0x0000009c
/**  */
    #define CRYPTO_CMD_INSTR_DDATA3LTODATA0          0x0000009d
/**  */
    #define CRYPTO_CMD_INSTR_DDATA3HTODATA1          0x0000009e
/**  */
    #define CRYPTO_CMD_INSTR_DDATA4TODDATA0          0x000000a0
/**  */
    #define CRYPTO_CMD_INSTR_DDATA4TODDATA1          0x000000a1
/**  */
    #define CRYPTO_CMD_INSTR_DDATA4TODDATA2          0x000000a2
/**  */
    #define CRYPTO_CMD_INSTR_DDATA4TODDATA3          0x000000a3
/**  */
    #define CRYPTO_CMD_INSTR_DDATA4LTODATA0          0x000000a5
/**  */
    #define CRYPTO_CMD_INSTR_DDATA4HTODATA1          0x000000a6
/**  */
    #define CRYPTO_CMD_INSTR_DDATA4LTODATA2          0x000000a7
/**  */
    #define CRYPTO_CMD_INSTR_DATA0TODDATA0           0x000000a8
/**  */
    #define CRYPTO_CMD_INSTR_DATA0TODDATA1           0x000000a9
/**  */
    #define CRYPTO_CMD_INSTR_DATA1TODDATA0           0x000000b0
/**  */
    #define CRYPTO_CMD_INSTR_DATA1TODDATA1           0x000000b1
/**  */
    #define CRYPTO_CMD_INSTR_DATA2TODDATA0           0x000000b8
/**  */
    #define CRYPTO_CMD_INSTR_DATA2TODDATA1           0x000000b9
/**  */
    #define CRYPTO_CMD_INSTR_DATA2TODDATA2           0x000000ba
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA0DDATA0         0x000000c0
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA1DDATA0         0x000000c1
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA2DDATA0         0x000000c2
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA3DDATA0         0x000000c3
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA4DDATA0         0x000000c4
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA0DDATA0          0x000000c5
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA1DDATA0          0x000000c6
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA2DDATA0          0x000000c7
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA0DDATA1         0x000000c8
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA1DDATA1         0x000000c9
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA2DDATA1         0x000000ca
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA3DDATA1         0x000000cb
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA4DDATA1         0x000000cc
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA0DDATA1          0x000000cd
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA1DDATA1          0x000000ce
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA2DDATA1          0x000000cf
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA0DDATA2         0x000000d0
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA1DDATA2         0x000000d1
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA2DDATA2         0x000000d2
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA3DDATA2         0x000000d3
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA4DDATA2         0x000000d4
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA0DDATA2          0x000000d5
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA1DDATA2          0x000000d6
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA2DDATA2          0x000000d7
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA0DDATA3         0x000000d8
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA1DDATA3         0x000000d9
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA2DDATA3         0x000000da
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA3DDATA3         0x000000db
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA4DDATA3         0x000000dc
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA0DDATA3          0x000000dd
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA1DDATA3          0x000000de
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA2DDATA3          0x000000df
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA0DDATA4         0x000000e0
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA1DDATA4         0x000000e1
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA2DDATA4         0x000000e2
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA3DDATA4         0x000000e3
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA4DDATA4         0x000000e4
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA0DDATA4          0x000000e5
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA1DDATA4          0x000000e6
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA2DDATA4          0x000000e7
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA0DATA0          0x000000e8
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA1DATA0          0x000000e9
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA2DATA0          0x000000ea
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA3DATA0          0x000000eb
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA4DATA0          0x000000ec
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA0DATA0           0x000000ed
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA1DATA0           0x000000ee
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA2DATA0           0x000000ef
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA0DATA1          0x000000f0
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA1DATA1          0x000000f1
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA2DATA1          0x000000f2
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA3DATA1          0x000000f3
/**  */
    #define CRYPTO_CMD_INSTR_SELDDATA4DATA1          0x000000f4
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA0DATA1           0x000000f5
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA1DATA1           0x000000f6
/**  */
    #define CRYPTO_CMD_INSTR_SELDATA2DATA1           0x000000f7
/**  */
    #define CRYPTO_CMD_INSTR_EXECIFA                 0x000000f8
/**  */
    #define CRYPTO_CMD_INSTR_EXECIFB                 0x000000f9
/**  */
    #define CRYPTO_CMD_INSTR_EXECIFNLAST             0x000000fa
/**  */
    #define CRYPTO_CMD_INSTR_EXECIFLAST              0x000000fb
/**  */
    #define CRYPTO_CMD_INSTR_EXECIFCARRY             0x000000fc
/**  */
    #define CRYPTO_CMD_INSTR_EXECIFNCARRY            0x000000fd
/**  */
    #define CRYPTO_CMD_INSTR_EXECALWAYS              0x000000fe
  #define CRYPTO_CMD_SEQSTART                      0x00000200
  #define CRYPTO_CMD_SEQSTOP                       0x00000400
  #define CRYPTO_CMD_SEQSTEP                       0x00000800

#define CRYPTO_STATUS_ADDR                           0x00000010
#define CRYPTO_STATUS_MASK                           0x0000000f
  #define CRYPTO_STATUS_SEQRUNNING                 0x00000001
  #define CRYPTO_STATUS_INSTRRUNNING               0x00000002
  #define CRYPTO_STATUS_DMAACTIVE                  0x00000004
  #define CRYPTO_STATUS_BUFACTIVE                  0x00000008

#define CRYPTO_DSTATUS_ADDR                          0x00000014
#define CRYPTO_DSTATUS_MASK                          0x011f0f0f
  #define CRYPTO_DSTATUS_DATA0ZERO(v)              ((CRYPTO_DSTATUS_DATA0ZERO_##v) << 0)
  #define CRYPTO_DSTATUS_DATA0ZERO_SET(x, v)       do { (x) = (((x) & ~0xf) | ((CRYPTO_DSTATUS_DATA0ZERO_##v) << 0)); } while(0)
  #define CRYPTO_DSTATUS_DATA0ZERO_SETVAL(x, v)    do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define CRYPTO_DSTATUS_DATA0ZERO_GET(x)          (((x) >> 0) & 0xf)
/**  */
    #define CRYPTO_DSTATUS_DATA0ZERO_ZERO0TO31       0x00000001
/**  */
    #define CRYPTO_DSTATUS_DATA0ZERO_ZERO32TO63      0x00000002
/**  */
    #define CRYPTO_DSTATUS_DATA0ZERO_ZERO64TO95      0x00000004
/**  */
    #define CRYPTO_DSTATUS_DATA0ZERO_ZERO96TO127     0x00000008
  #define CRYPTO_DSTATUS_DDATA0LSBS(v)             ((v) << 8)
  #define CRYPTO_DSTATUS_DDATA0LSBS_SET(x, v)      do { (x) = (((x) & ~0xf00) | ((v) << 8)); } while(0)
  #define CRYPTO_DSTATUS_DDATA0LSBS_GET(x)         (((x) >> 8) & 0xf)
  #define CRYPTO_DSTATUS_DDATA0MSBS(v)             ((v) << 16)
  #define CRYPTO_DSTATUS_DDATA0MSBS_SET(x, v)      do { (x) = (((x) & ~0xf0000) | ((v) << 16)); } while(0)
  #define CRYPTO_DSTATUS_DDATA0MSBS_GET(x)         (((x) >> 16) & 0xf)
  #define CRYPTO_DSTATUS_DDATA1MSB                 0x00100000
  #define CRYPTO_DSTATUS_CARRY                     0x01000000

#define CRYPTO_CSTATUS_ADDR                          0x00000018
#define CRYPTO_CSTATUS_MASK                          0x01f30707
  #define CRYPTO_CSTATUS_V0(v)                     ((CRYPTO_CSTATUS_V0_##v) << 0)
  #define CRYPTO_CSTATUS_V0_SET(x, v)              do { (x) = (((x) & ~0x7) | ((CRYPTO_CSTATUS_V0_##v) << 0)); } while(0)
  #define CRYPTO_CSTATUS_V0_SETVAL(x, v)           do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define CRYPTO_CSTATUS_V0_GET(x)                 (((x) >> 0) & 0x7)
/**  */
    #define CRYPTO_CSTATUS_V0_DDATA0                 0x00000000
/**  */
    #define CRYPTO_CSTATUS_V0_DDATA1                 0x00000001
/**  */
    #define CRYPTO_CSTATUS_V0_DDATA2                 0x00000002
/**  */
    #define CRYPTO_CSTATUS_V0_DDATA3                 0x00000003
/**  */
    #define CRYPTO_CSTATUS_V0_DDATA4                 0x00000004
/**  */
    #define CRYPTO_CSTATUS_V0_DATA0                  0x00000005
/**  */
    #define CRYPTO_CSTATUS_V0_DATA1                  0x00000006
/**  */
    #define CRYPTO_CSTATUS_V0_DATA2                  0x00000007
  #define CRYPTO_CSTATUS_V1(v)                     ((CRYPTO_CSTATUS_V1_##v) << 8)
  #define CRYPTO_CSTATUS_V1_SET(x, v)              do { (x) = (((x) & ~0x700) | ((CRYPTO_CSTATUS_V1_##v) << 8)); } while(0)
  #define CRYPTO_CSTATUS_V1_SETVAL(x, v)           do { (x) = (((x) & ~0x700) | ((v) << 8)); } while(0)
  #define CRYPTO_CSTATUS_V1_GET(x)                 (((x) >> 8) & 0x7)
/**  */
    #define CRYPTO_CSTATUS_V1_DDATA0                 0x00000000
/**  */
    #define CRYPTO_CSTATUS_V1_DDATA1                 0x00000001
/**  */
    #define CRYPTO_CSTATUS_V1_DDATA2                 0x00000002
/**  */
    #define CRYPTO_CSTATUS_V1_DDATA3                 0x00000003
/**  */
    #define CRYPTO_CSTATUS_V1_DDATA4                 0x00000004
/**  */
    #define CRYPTO_CSTATUS_V1_DATA0                  0x00000005
/**  */
    #define CRYPTO_CSTATUS_V1_DATA1                  0x00000006
/**  */
    #define CRYPTO_CSTATUS_V1_DATA2                  0x00000007
  #define CRYPTO_CSTATUS_SEQPART                   0x00010000
  #define CRYPTO_CSTATUS_SEQSKIP                   0x00020000
  #define CRYPTO_CSTATUS_SEQIP(v)                  ((v) << 20)
  #define CRYPTO_CSTATUS_SEQIP_SET(x, v)           do { (x) = (((x) & ~0x1f00000) | ((v) << 20)); } while(0)
  #define CRYPTO_CSTATUS_SEQIP_GET(x)              (((x) >> 20) & 0x1f)

#define CRYPTO_KEY_ADDR                              0x00000020
#define CRYPTO_KEY_MASK                              0xffffffff
  #define CRYPTO_KEY_KEY(v)                        ((v) << 0)
  #define CRYPTO_KEY_KEY_SET(x, v)                 do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_KEY_KEY_GET(x)                    (((x) >> 0) & 0xffffffff)

#define CRYPTO_KEYBUF_ADDR                           0x00000024
#define CRYPTO_KEYBUF_MASK                           0xffffffff
  #define CRYPTO_KEYBUF_KEYBUF(v)                  ((v) << 0)
  #define CRYPTO_KEYBUF_KEYBUF_SET(x, v)           do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_KEYBUF_KEYBUF_GET(x)              (((x) >> 0) & 0xffffffff)

#define CRYPTO_SEQCTRL_ADDR                          0x00000030
#define CRYPTO_SEQCTRL_MASK                          0xbf303fff
  #define CRYPTO_SEQCTRL_LENGTHA(v)                ((v) << 0)
  #define CRYPTO_SEQCTRL_LENGTHA_SET(x, v)         do { (x) = (((x) & ~0x3fff) | ((v) << 0)); } while(0)
  #define CRYPTO_SEQCTRL_LENGTHA_GET(x)            (((x) >> 0) & 0x3fff)
  #define CRYPTO_SEQCTRL_BLOCKSIZE(v)              ((CRYPTO_SEQCTRL_BLOCKSIZE_##v) << 20)
  #define CRYPTO_SEQCTRL_BLOCKSIZE_SET(x, v)       do { (x) = (((x) & ~0x300000) | ((CRYPTO_SEQCTRL_BLOCKSIZE_##v) << 20)); } while(0)
  #define CRYPTO_SEQCTRL_BLOCKSIZE_SETVAL(x, v)    do { (x) = (((x) & ~0x300000) | ((v) << 20)); } while(0)
  #define CRYPTO_SEQCTRL_BLOCKSIZE_GET(x)          (((x) >> 20) & 0x3)
/**  */
    #define CRYPTO_SEQCTRL_BLOCKSIZE_E16BYTES        0x00000000
/**  */
    #define CRYPTO_SEQCTRL_BLOCKSIZE_E32BYTES        0x00000001
/**  */
    #define CRYPTO_SEQCTRL_BLOCKSIZE_E64BYTES        0x00000002
  #define CRYPTO_SEQCTRL_DMA0SKIP(v)               ((v) << 24)
  #define CRYPTO_SEQCTRL_DMA0SKIP_SET(x, v)        do { (x) = (((x) & ~0x3000000) | ((v) << 24)); } while(0)
  #define CRYPTO_SEQCTRL_DMA0SKIP_GET(x)           (((x) >> 24) & 0x3)
  #define CRYPTO_SEQCTRL_DMA1SKIP(v)               ((v) << 26)
  #define CRYPTO_SEQCTRL_DMA1SKIP_SET(x, v)        do { (x) = (((x) & ~0xc000000) | ((v) << 26)); } while(0)
  #define CRYPTO_SEQCTRL_DMA1SKIP_GET(x)           (((x) >> 26) & 0x3)
  #define CRYPTO_SEQCTRL_DMA0PRESA                 0x10000000
  #define CRYPTO_SEQCTRL_DMA1PRESA                 0x20000000
  #define CRYPTO_SEQCTRL_HALT                      0x80000000

#define CRYPTO_SEQCTRLB_ADDR                         0x00000034
#define CRYPTO_SEQCTRLB_MASK                         0x30003fff
  #define CRYPTO_SEQCTRLB_LENGTHB(v)               ((v) << 0)
  #define CRYPTO_SEQCTRLB_LENGTHB_SET(x, v)        do { (x) = (((x) & ~0x3fff) | ((v) << 0)); } while(0)
  #define CRYPTO_SEQCTRLB_LENGTHB_GET(x)           (((x) >> 0) & 0x3fff)
  #define CRYPTO_SEQCTRLB_DMA0PRESB                0x10000000
  #define CRYPTO_SEQCTRLB_DMA1PRESB                0x20000000

#define CRYPTO_IF_ADDR                               0x00000040
#define CRYPTO_IF_MASK                               0x0000000f
  #define CRYPTO_IF_INSTRDONE                      0x00000001
  #define CRYPTO_IF_SEQDONE                        0x00000002
  #define CRYPTO_IF_BUFOF                          0x00000004
  #define CRYPTO_IF_BUFUF                          0x00000008

#define CRYPTO_IFS_ADDR                              0x00000044
#define CRYPTO_IFS_MASK                              0x0000000f
  #define CRYPTO_IFS_INSTRDONE                     0x00000001
  #define CRYPTO_IFS_SEQDONE                       0x00000002
  #define CRYPTO_IFS_BUFOF                         0x00000004
  #define CRYPTO_IFS_BUFUF                         0x00000008

#define CRYPTO_IFC_ADDR                              0x00000048
#define CRYPTO_IFC_MASK                              0x0000000f
  #define CRYPTO_IFC_INSTRDONE                     0x00000001
  #define CRYPTO_IFC_SEQDONE                       0x00000002
  #define CRYPTO_IFC_BUFOF                         0x00000004
  #define CRYPTO_IFC_BUFUF                         0x00000008

#define CRYPTO_IEN_ADDR                              0x0000004c
#define CRYPTO_IEN_MASK                              0x0000000f
  #define CRYPTO_IEN_INSTRDONE                     0x00000001
  #define CRYPTO_IEN_SEQDONE                       0x00000002
  #define CRYPTO_IEN_BUFOF                         0x00000004
  #define CRYPTO_IEN_BUFUF                         0x00000008

#define CRYPTO_SEQ0_ADDR                             0x00000050
#define CRYPTO_SEQ0_MASK                             0xffffffff
  #define CRYPTO_SEQ0_INSTR0(v)                    ((v) << 0)
  #define CRYPTO_SEQ0_INSTR0_SET(x, v)             do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_SEQ0_INSTR0_GET(x)                (((x) >> 0) & 0xff)
  #define CRYPTO_SEQ0_INSTR1(v)                    ((v) << 8)
  #define CRYPTO_SEQ0_INSTR1_SET(x, v)             do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define CRYPTO_SEQ0_INSTR1_GET(x)                (((x) >> 8) & 0xff)
  #define CRYPTO_SEQ0_INSTR2(v)                    ((v) << 16)
  #define CRYPTO_SEQ0_INSTR2_SET(x, v)             do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define CRYPTO_SEQ0_INSTR2_GET(x)                (((x) >> 16) & 0xff)
  #define CRYPTO_SEQ0_INSTR3(v)                    ((v) << 24)
  #define CRYPTO_SEQ0_INSTR3_SET(x, v)             do { (x) = (((x) & ~0xff000000) | ((v) << 24)); } while(0)
  #define CRYPTO_SEQ0_INSTR3_GET(x)                (((x) >> 24) & 0xff)

#define CRYPTO_SEQ1_ADDR                             0x00000054
#define CRYPTO_SEQ1_MASK                             0xffffffff
  #define CRYPTO_SEQ1_INSTR4(v)                    ((v) << 0)
  #define CRYPTO_SEQ1_INSTR4_SET(x, v)             do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_SEQ1_INSTR4_GET(x)                (((x) >> 0) & 0xff)
  #define CRYPTO_SEQ1_INSTR5(v)                    ((v) << 8)
  #define CRYPTO_SEQ1_INSTR5_SET(x, v)             do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define CRYPTO_SEQ1_INSTR5_GET(x)                (((x) >> 8) & 0xff)
  #define CRYPTO_SEQ1_INSTR6(v)                    ((v) << 16)
  #define CRYPTO_SEQ1_INSTR6_SET(x, v)             do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define CRYPTO_SEQ1_INSTR6_GET(x)                (((x) >> 16) & 0xff)
  #define CRYPTO_SEQ1_INSTR7(v)                    ((v) << 24)
  #define CRYPTO_SEQ1_INSTR7_SET(x, v)             do { (x) = (((x) & ~0xff000000) | ((v) << 24)); } while(0)
  #define CRYPTO_SEQ1_INSTR7_GET(x)                (((x) >> 24) & 0xff)

#define CRYPTO_SEQ2_ADDR                             0x00000058
#define CRYPTO_SEQ2_MASK                             0xffffffff
  #define CRYPTO_SEQ2_INSTR8(v)                    ((v) << 0)
  #define CRYPTO_SEQ2_INSTR8_SET(x, v)             do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_SEQ2_INSTR8_GET(x)                (((x) >> 0) & 0xff)
  #define CRYPTO_SEQ2_INSTR9(v)                    ((v) << 8)
  #define CRYPTO_SEQ2_INSTR9_SET(x, v)             do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define CRYPTO_SEQ2_INSTR9_GET(x)                (((x) >> 8) & 0xff)
  #define CRYPTO_SEQ2_INSTR10(v)                   ((v) << 16)
  #define CRYPTO_SEQ2_INSTR10_SET(x, v)            do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define CRYPTO_SEQ2_INSTR10_GET(x)               (((x) >> 16) & 0xff)
  #define CRYPTO_SEQ2_INSTR11(v)                   ((v) << 24)
  #define CRYPTO_SEQ2_INSTR11_SET(x, v)            do { (x) = (((x) & ~0xff000000) | ((v) << 24)); } while(0)
  #define CRYPTO_SEQ2_INSTR11_GET(x)               (((x) >> 24) & 0xff)

#define CRYPTO_SEQ3_ADDR                             0x0000005c
#define CRYPTO_SEQ3_MASK                             0xffffffff
  #define CRYPTO_SEQ3_INSTR12(v)                   ((v) << 0)
  #define CRYPTO_SEQ3_INSTR12_SET(x, v)            do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_SEQ3_INSTR12_GET(x)               (((x) >> 0) & 0xff)
  #define CRYPTO_SEQ3_INSTR13(v)                   ((v) << 8)
  #define CRYPTO_SEQ3_INSTR13_SET(x, v)            do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define CRYPTO_SEQ3_INSTR13_GET(x)               (((x) >> 8) & 0xff)
  #define CRYPTO_SEQ3_INSTR14(v)                   ((v) << 16)
  #define CRYPTO_SEQ3_INSTR14_SET(x, v)            do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define CRYPTO_SEQ3_INSTR14_GET(x)               (((x) >> 16) & 0xff)
  #define CRYPTO_SEQ3_INSTR15(v)                   ((v) << 24)
  #define CRYPTO_SEQ3_INSTR15_SET(x, v)            do { (x) = (((x) & ~0xff000000) | ((v) << 24)); } while(0)
  #define CRYPTO_SEQ3_INSTR15_GET(x)               (((x) >> 24) & 0xff)

#define CRYPTO_SEQ4_ADDR                             0x00000060
#define CRYPTO_SEQ4_MASK                             0xffffffff
  #define CRYPTO_SEQ4_INSTR16(v)                   ((v) << 0)
  #define CRYPTO_SEQ4_INSTR16_SET(x, v)            do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_SEQ4_INSTR16_GET(x)               (((x) >> 0) & 0xff)
  #define CRYPTO_SEQ4_INSTR17(v)                   ((v) << 8)
  #define CRYPTO_SEQ4_INSTR17_SET(x, v)            do { (x) = (((x) & ~0xff00) | ((v) << 8)); } while(0)
  #define CRYPTO_SEQ4_INSTR17_GET(x)               (((x) >> 8) & 0xff)
  #define CRYPTO_SEQ4_INSTR18(v)                   ((v) << 16)
  #define CRYPTO_SEQ4_INSTR18_SET(x, v)            do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define CRYPTO_SEQ4_INSTR18_GET(x)               (((x) >> 16) & 0xff)
  #define CRYPTO_SEQ4_INSTR19(v)                   ((v) << 24)
  #define CRYPTO_SEQ4_INSTR19_SET(x, v)            do { (x) = (((x) & ~0xff000000) | ((v) << 24)); } while(0)
  #define CRYPTO_SEQ4_INSTR19_GET(x)               (((x) >> 24) & 0xff)

#define CRYPTO_DATA0_ADDR                            0x00000080
#define CRYPTO_DATA0_MASK                            0xffffffff
  #define CRYPTO_DATA0_DATA0(v)                    ((v) << 0)
  #define CRYPTO_DATA0_DATA0_SET(x, v)             do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_DATA0_DATA0_GET(x)                (((x) >> 0) & 0xffffffff)

#define CRYPTO_DATA1_ADDR                            0x00000084
#define CRYPTO_DATA1_MASK                            0xffffffff
  #define CRYPTO_DATA1_DATA1(v)                    ((v) << 0)
  #define CRYPTO_DATA1_DATA1_SET(x, v)             do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_DATA1_DATA1_GET(x)                (((x) >> 0) & 0xffffffff)

#define CRYPTO_DATA2_ADDR                            0x00000088
#define CRYPTO_DATA2_MASK                            0xffffffff
  #define CRYPTO_DATA2_DATA2(v)                    ((v) << 0)
  #define CRYPTO_DATA2_DATA2_SET(x, v)             do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_DATA2_DATA2_GET(x)                (((x) >> 0) & 0xffffffff)

#define CRYPTO_DATA3_ADDR                            0x0000008c
#define CRYPTO_DATA3_MASK                            0xffffffff
  #define CRYPTO_DATA3_DATA3(v)                    ((v) << 0)
  #define CRYPTO_DATA3_DATA3_SET(x, v)             do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_DATA3_DATA3_GET(x)                (((x) >> 0) & 0xffffffff)

#define CRYPTO_DATA0XOR_ADDR                         0x000000a0
#define CRYPTO_DATA0XOR_MASK                         0xffffffff
  #define CRYPTO_DATA0XOR_DATA0XOR(v)              ((v) << 0)
  #define CRYPTO_DATA0XOR_DATA0XOR_SET(x, v)       do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_DATA0XOR_DATA0XOR_GET(x)          (((x) >> 0) & 0xffffffff)

#define CRYPTO_DATA0BYTE_ADDR                        0x000000b0
#define CRYPTO_DATA0BYTE_MASK                        0x000000ff
  #define CRYPTO_DATA0BYTE_DATA0BYTE(v)            ((v) << 0)
  #define CRYPTO_DATA0BYTE_DATA0BYTE_SET(x, v)     do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_DATA0BYTE_DATA0BYTE_GET(x)        (((x) >> 0) & 0xff)

#define CRYPTO_DATA1BYTE_ADDR                        0x000000b4
#define CRYPTO_DATA1BYTE_MASK                        0x000000ff
  #define CRYPTO_DATA1BYTE_DATA1BYTE(v)            ((v) << 0)
  #define CRYPTO_DATA1BYTE_DATA1BYTE_SET(x, v)     do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_DATA1BYTE_DATA1BYTE_GET(x)        (((x) >> 0) & 0xff)

#define CRYPTO_DATA0XORBYTE_ADDR                     0x000000bc
#define CRYPTO_DATA0XORBYTE_MASK                     0x000000ff
  #define CRYPTO_DATA0XORBYTE_DATA0XORBYTE(v)      ((v) << 0)
  #define CRYPTO_DATA0XORBYTE_DATA0XORBYTE_SET(x, v) do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_DATA0XORBYTE_DATA0XORBYTE_GET(x)  (((x) >> 0) & 0xff)

#define CRYPTO_DATA0BYTE12_ADDR                      0x000000c0
#define CRYPTO_DATA0BYTE12_MASK                      0x000000ff
  #define CRYPTO_DATA0BYTE12_DATA0BYTE12(v)        ((v) << 0)
  #define CRYPTO_DATA0BYTE12_DATA0BYTE12_SET(x, v) do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_DATA0BYTE12_DATA0BYTE12_GET(x)    (((x) >> 0) & 0xff)

#define CRYPTO_DATA0BYTE13_ADDR                      0x000000c4
#define CRYPTO_DATA0BYTE13_MASK                      0x000000ff
  #define CRYPTO_DATA0BYTE13_DATA0BYTE13(v)        ((v) << 0)
  #define CRYPTO_DATA0BYTE13_DATA0BYTE13_SET(x, v) do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_DATA0BYTE13_DATA0BYTE13_GET(x)    (((x) >> 0) & 0xff)

#define CRYPTO_DATA0BYTE14_ADDR                      0x000000c8
#define CRYPTO_DATA0BYTE14_MASK                      0x000000ff
  #define CRYPTO_DATA0BYTE14_DATA0BYTE14(v)        ((v) << 0)
  #define CRYPTO_DATA0BYTE14_DATA0BYTE14_SET(x, v) do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_DATA0BYTE14_DATA0BYTE14_GET(x)    (((x) >> 0) & 0xff)

#define CRYPTO_DATA0BYTE15_ADDR                      0x000000cc
#define CRYPTO_DATA0BYTE15_MASK                      0x000000ff
  #define CRYPTO_DATA0BYTE15_DATA0BYTE15(v)        ((v) << 0)
  #define CRYPTO_DATA0BYTE15_DATA0BYTE15_SET(x, v) do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_DATA0BYTE15_DATA0BYTE15_GET(x)    (((x) >> 0) & 0xff)

#define CRYPTO_DDATA0_ADDR                           0x00000100
#define CRYPTO_DDATA0_MASK                           0xffffffff
  #define CRYPTO_DDATA0_DDATA0(v)                  ((v) << 0)
  #define CRYPTO_DDATA0_DDATA0_SET(x, v)           do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_DDATA0_DDATA0_GET(x)              (((x) >> 0) & 0xffffffff)

#define CRYPTO_DDATA1_ADDR                           0x00000104
#define CRYPTO_DDATA1_MASK                           0xffffffff
  #define CRYPTO_DDATA1_DDATA1(v)                  ((v) << 0)
  #define CRYPTO_DDATA1_DDATA1_SET(x, v)           do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_DDATA1_DDATA1_GET(x)              (((x) >> 0) & 0xffffffff)

#define CRYPTO_DDATA2_ADDR                           0x00000108
#define CRYPTO_DDATA2_MASK                           0xffffffff
  #define CRYPTO_DDATA2_DDATA2(v)                  ((v) << 0)
  #define CRYPTO_DDATA2_DDATA2_SET(x, v)           do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_DDATA2_DDATA2_GET(x)              (((x) >> 0) & 0xffffffff)

#define CRYPTO_DDATA3_ADDR                           0x0000010c
#define CRYPTO_DDATA3_MASK                           0xffffffff
  #define CRYPTO_DDATA3_DDATA3(v)                  ((v) << 0)
  #define CRYPTO_DDATA3_DDATA3_SET(x, v)           do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_DDATA3_DDATA3_GET(x)              (((x) >> 0) & 0xffffffff)

#define CRYPTO_DDATA4_ADDR                           0x00000110
#define CRYPTO_DDATA4_MASK                           0xffffffff
  #define CRYPTO_DDATA4_DDATA4(v)                  ((v) << 0)
  #define CRYPTO_DDATA4_DDATA4_SET(x, v)           do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_DDATA4_DDATA4_GET(x)              (((x) >> 0) & 0xffffffff)

#define CRYPTO_DDATA0BIG_ADDR                        0x00000130
#define CRYPTO_DDATA0BIG_MASK                        0xffffffff
  #define CRYPTO_DDATA0BIG_DDATA0BIG(v)            ((v) << 0)
  #define CRYPTO_DDATA0BIG_DDATA0BIG_SET(x, v)     do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_DDATA0BIG_DDATA0BIG_GET(x)        (((x) >> 0) & 0xffffffff)

#define CRYPTO_DDATA0BYTE_ADDR                       0x00000140
#define CRYPTO_DDATA0BYTE_MASK                       0x000000ff
  #define CRYPTO_DDATA0BYTE_DDATA0BYTE(v)          ((v) << 0)
  #define CRYPTO_DDATA0BYTE_DDATA0BYTE_SET(x, v)   do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_DDATA0BYTE_DDATA0BYTE_GET(x)      (((x) >> 0) & 0xff)

#define CRYPTO_DDATA1BYTE_ADDR                       0x00000144
#define CRYPTO_DDATA1BYTE_MASK                       0x000000ff
  #define CRYPTO_DDATA1BYTE_DDATA1BYTE(v)          ((v) << 0)
  #define CRYPTO_DDATA1BYTE_DDATA1BYTE_SET(x, v)   do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_DDATA1BYTE_DDATA1BYTE_GET(x)      (((x) >> 0) & 0xff)

#define CRYPTO_DDATA0BYTE32_ADDR                     0x00000148
#define CRYPTO_DDATA0BYTE32_MASK                     0x0000000f
  #define CRYPTO_DDATA0BYTE32_DDATA0BYTE32(v)      ((v) << 0)
  #define CRYPTO_DDATA0BYTE32_DDATA0BYTE32_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define CRYPTO_DDATA0BYTE32_DDATA0BYTE32_GET(x)  (((x) >> 0) & 0xf)

#define CRYPTO_QDATA0_ADDR                           0x00000180
#define CRYPTO_QDATA0_MASK                           0xffffffff
  #define CRYPTO_QDATA0_QDATA0(v)                  ((v) << 0)
  #define CRYPTO_QDATA0_QDATA0_SET(x, v)           do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_QDATA0_QDATA0_GET(x)              (((x) >> 0) & 0xffffffff)

#define CRYPTO_QDATA1_ADDR                           0x00000184
#define CRYPTO_QDATA1_MASK                           0xffffffff
  #define CRYPTO_QDATA1_QDATA1(v)                  ((v) << 0)
  #define CRYPTO_QDATA1_QDATA1_SET(x, v)           do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_QDATA1_QDATA1_GET(x)              (((x) >> 0) & 0xffffffff)

#define CRYPTO_QDATA1BIG_ADDR                        0x000001a4
#define CRYPTO_QDATA1BIG_MASK                        0xffffffff
  #define CRYPTO_QDATA1BIG_QDATA1BIG(v)            ((v) << 0)
  #define CRYPTO_QDATA1BIG_QDATA1BIG_SET(x, v)     do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define CRYPTO_QDATA1BIG_QDATA1BIG_GET(x)        (((x) >> 0) & 0xffffffff)

#define CRYPTO_QDATA0BYTE_ADDR                       0x000001c0
#define CRYPTO_QDATA0BYTE_MASK                       0x000000ff
  #define CRYPTO_QDATA0BYTE_QDATA0BYTE(v)          ((v) << 0)
  #define CRYPTO_QDATA0BYTE_QDATA0BYTE_SET(x, v)   do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_QDATA0BYTE_QDATA0BYTE_GET(x)      (((x) >> 0) & 0xff)

#define CRYPTO_QDATA1BYTE_ADDR                       0x000001c4
#define CRYPTO_QDATA1BYTE_MASK                       0x000000ff
  #define CRYPTO_QDATA1BYTE_QDATA1BYTE(v)          ((v) << 0)
  #define CRYPTO_QDATA1BYTE_QDATA1BYTE_SET(x, v)   do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define CRYPTO_QDATA1BYTE_QDATA1BYTE_GET(x)      (((x) >> 0) & 0xff)

#define CRYPTO_FEATURE_ADDR                          0x000001f0
#define CRYPTO_FEATURE_MASK                          0x0000ff07
  #define CRYPTO_FEATURE_AES256DIS                 0x00000001
  #define CRYPTO_FEATURE_SHADIS                    0x00000002
  #define CRYPTO_FEATURE_MODOPDIS                  0x00000004
  #define CRYPTO_FEATURE_ECCBIN233DIS              0x00000100
  #define CRYPTO_FEATURE_ECCBIN233KDIS             0x00000200
  #define CRYPTO_FEATURE_ECCBIN163DIS              0x00000400
  #define CRYPTO_FEATURE_ECCBIN163KDIS             0x00000800
  #define CRYPTO_FEATURE_GCMBIN128DIS              0x00001000
  #define CRYPTO_FEATURE_ECCPRIME256DIS            0x00002000
  #define CRYPTO_FEATURE_ECCPRIME224DIS            0x00004000
  #define CRYPTO_FEATURE_ECCPRIME192DIS            0x00008000

#endif

