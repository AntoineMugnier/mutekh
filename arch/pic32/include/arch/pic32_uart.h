/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs -O arch/pic32/include/arch/pic32_uart.h cdefs_use_reg_mask=1 \
     cdefs_use_field_setval=1 -I /opt/bfgen/defs/pic32/pic32_uart.bf
*/

#ifndef _PIC32_UART_BFGEN_DEFS_
#define _PIC32_UART_BFGEN_DEFS_

#define PIC32_UART_MODE_ADDR                         0x00000000
#define PIC32_UART_MODE_MASK                         0x0000bbff
  #define PIC32_UART_MODE_STSEL(v)                 ((PIC32_UART_MODE_STSEL_##v) << 0)
  #define PIC32_UART_MODE_STSEL_SET(x, v)          do { (x) = (((x) & ~0x1) | ((PIC32_UART_MODE_STSEL_##v) << 0)); } while(0)
  #define PIC32_UART_MODE_STSEL_SETVAL(x, v)       do { (x) = (((x) & ~0x1) | ((v) << 0)); } while(0)
  #define PIC32_UART_MODE_STSEL_GET(x)             (((x) >> 0) & 0x1)
    #define PIC32_UART_MODE_STSEL_1STOPBIT           0x00000000
    #define PIC32_UART_MODE_STSEL_2STOPBIT           0x00000001
  #define PIC32_UART_MODE_PDSEL(v)                 ((PIC32_UART_MODE_PDSEL_##v) << 1)
  #define PIC32_UART_MODE_PDSEL_SET(x, v)          do { (x) = (((x) & ~0x6) | ((PIC32_UART_MODE_PDSEL_##v) << 1)); } while(0)
  #define PIC32_UART_MODE_PDSEL_SETVAL(x, v)       do { (x) = (((x) & ~0x6) | ((v) << 1)); } while(0)
  #define PIC32_UART_MODE_PDSEL_GET(x)             (((x) >> 1) & 0x3)
    #define PIC32_UART_MODE_PDSEL_8BITNOPARITY       0x00000000
    #define PIC32_UART_MODE_PDSEL_8BITEVENPARITY     0x00000001
    #define PIC32_UART_MODE_PDSEL_8BITODDPARITY      0x00000002
    #define PIC32_UART_MODE_PDSEL_9BITNOPARITY       0x00000003
  #define PIC32_UART_MODE_BRGH(v)                  ((PIC32_UART_MODE_BRGH_##v) << 3)
  #define PIC32_UART_MODE_BRGH_SET(x, v)           do { (x) = (((x) & ~0x8) | ((PIC32_UART_MODE_BRGH_##v) << 3)); } while(0)
  #define PIC32_UART_MODE_BRGH_SETVAL(x, v)        do { (x) = (((x) & ~0x8) | ((v) << 3)); } while(0)
  #define PIC32_UART_MODE_BRGH_GET(x)              (((x) >> 3) & 0x1)
    #define PIC32_UART_MODE_BRGH_STANDART            0x00000000
    #define PIC32_UART_MODE_BRGH_HIGH                0x00000001
  #define PIC32_UART_MODE_RXINV(v)                 ((PIC32_UART_MODE_RXINV_##v) << 4)
  #define PIC32_UART_MODE_RXINV_SET(x, v)          do { (x) = (((x) & ~0x10) | ((PIC32_UART_MODE_RXINV_##v) << 4)); } while(0)
  #define PIC32_UART_MODE_RXINV_SETVAL(x, v)       do { (x) = (((x) & ~0x10) | ((v) << 4)); } while(0)
  #define PIC32_UART_MODE_RXINV_GET(x)             (((x) >> 4) & 0x1)
    #define PIC32_UART_MODE_RXINV_IDLESTATE1         0x00000000
    #define PIC32_UART_MODE_RXINV_IDLESTATE0         0x00000001
  #define PIC32_UART_MODE_ABAUD                    0x00000020
  #define PIC32_UART_MODE_LPBACK                   0x00000040
  #define PIC32_UART_MODE_WAKE                     0x00000080
  #define PIC32_UART_MODE_UEN(v)                   ((v) << 8)
  #define PIC32_UART_MODE_UEN_SET(x, v)            do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define PIC32_UART_MODE_UEN_GET(x)               (((x) >> 8) & 0x3)
  #define PIC32_UART_MODE_RTSMD                    0x00000800
  #define PIC32_UART_MODE_IREB                     0x00001000
  #define PIC32_UART_MODE_SIDL                     0x00002000
  #define PIC32_UART_MODE_ON                       0x00008000

#define PIC32_UART_STATUS_ADDR                       0x00000010
#define PIC32_UART_STATUS_MASK                       0x01ffffff
  #define PIC32_UART_STATUS_URXDA                  0x00000001
  #define PIC32_UART_STATUS_OERR                   0x00000002
  #define PIC32_UART_STATUS_FERR                   0x00000004
  #define PIC32_UART_STATUS_PERR                   0x00000008
  #define PIC32_UART_STATUS_RIDLE                  0x00000010
  #define PIC32_UART_STATUS_ADDEN                  0x00000020
  #define PIC32_UART_STATUS_URXISEL(v)             ((v) << 6)
  #define PIC32_UART_STATUS_URXISEL_SET(x, v)      do { (x) = (((x) & ~0xc0) | ((v) << 6)); } while(0)
  #define PIC32_UART_STATUS_URXISEL_GET(x)         (((x) >> 6) & 0x3)
  #define PIC32_UART_STATUS_TRMT                   0x00000100
  #define PIC32_UART_STATUS_UTXBF                  0x00000200
  #define PIC32_UART_STATUS_UTXEN                  0x00000400
  #define PIC32_UART_STATUS_UTXBRK                 0x00000800
  #define PIC32_UART_STATUS_URXEN                  0x00001000
  #define PIC32_UART_STATUS_UTXINV                 0x00002000
  #define PIC32_UART_STATUS_UTXISEL(v)             ((v) << 14)
  #define PIC32_UART_STATUS_UTXISEL_SET(x, v)      do { (x) = (((x) & ~0xc000) | ((v) << 14)); } while(0)
  #define PIC32_UART_STATUS_UTXISEL_GET(x)         (((x) >> 14) & 0x3)
  #define PIC32_UART_STATUS_ADDRM(v)               ((v) << 16)
  #define PIC32_UART_STATUS_ADDRM_SET(x, v)        do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define PIC32_UART_STATUS_ADDRM_GET(x)           (((x) >> 16) & 0xff)
  #define PIC32_UART_STATUS_ADMEN                  0x01000000

#define PIC32_UART_STATUS_CLR_ADDR                   0x00000014
#define PIC32_UART_STATUS_CLR_MASK                   0x01ffffff
  #define PIC32_UART_STATUS_CLR_URXDA              0x00000001
  #define PIC32_UART_STATUS_CLR_OERR               0x00000002
  #define PIC32_UART_STATUS_CLR_FERR               0x00000004
  #define PIC32_UART_STATUS_CLR_PERR               0x00000008
  #define PIC32_UART_STATUS_CLR_RIDLE              0x00000010
  #define PIC32_UART_STATUS_CLR_ADDEN              0x00000020
  #define PIC32_UART_STATUS_CLR_URXISEL(v)         ((v) << 6)
  #define PIC32_UART_STATUS_CLR_URXISEL_SET(x, v)  do { (x) = (((x) & ~0xc0) | ((v) << 6)); } while(0)
  #define PIC32_UART_STATUS_CLR_URXISEL_GET(x)     (((x) >> 6) & 0x3)
  #define PIC32_UART_STATUS_CLR_TRMT               0x00000100
  #define PIC32_UART_STATUS_CLR_UTXBF              0x00000200
  #define PIC32_UART_STATUS_CLR_UTXEN              0x00000400
  #define PIC32_UART_STATUS_CLR_UTXBRK             0x00000800
  #define PIC32_UART_STATUS_CLR_URXEN              0x00001000
  #define PIC32_UART_STATUS_CLR_UTXINV             0x00002000
  #define PIC32_UART_STATUS_CLR_UTXISEL(v)         ((v) << 14)
  #define PIC32_UART_STATUS_CLR_UTXISEL_SET(x, v)  do { (x) = (((x) & ~0xc000) | ((v) << 14)); } while(0)
  #define PIC32_UART_STATUS_CLR_UTXISEL_GET(x)     (((x) >> 14) & 0x3)
  #define PIC32_UART_STATUS_CLR_ADDRM(v)           ((v) << 16)
  #define PIC32_UART_STATUS_CLR_ADDRM_SET(x, v)    do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define PIC32_UART_STATUS_CLR_ADDRM_GET(x)       (((x) >> 16) & 0xff)
  #define PIC32_UART_STATUS_CLR_ADMEN              0x01000000

#define PIC32_UART_STATUS_SET_ADDR                   0x00000018
#define PIC32_UART_STATUS_SET_MASK                   0x01ffffff
  #define PIC32_UART_STATUS_SET_URXDA              0x00000001
  #define PIC32_UART_STATUS_SET_OERR               0x00000002
  #define PIC32_UART_STATUS_SET_FERR               0x00000004
  #define PIC32_UART_STATUS_SET_PERR               0x00000008
  #define PIC32_UART_STATUS_SET_RIDLE              0x00000010
  #define PIC32_UART_STATUS_SET_ADDEN              0x00000020
  #define PIC32_UART_STATUS_SET_URXISEL(v)         ((v) << 6)
  #define PIC32_UART_STATUS_SET_URXISEL_SET(x, v)  do { (x) = (((x) & ~0xc0) | ((v) << 6)); } while(0)
  #define PIC32_UART_STATUS_SET_URXISEL_GET(x)     (((x) >> 6) & 0x3)
  #define PIC32_UART_STATUS_SET_TRMT               0x00000100
  #define PIC32_UART_STATUS_SET_UTXBF              0x00000200
  #define PIC32_UART_STATUS_SET_UTXEN              0x00000400
  #define PIC32_UART_STATUS_SET_UTXBRK             0x00000800
  #define PIC32_UART_STATUS_SET_URXEN              0x00001000
  #define PIC32_UART_STATUS_SET_UTXINV             0x00002000
  #define PIC32_UART_STATUS_SET_UTXISEL(v)         ((v) << 14)
  #define PIC32_UART_STATUS_SET_UTXISEL_SET(x, v)  do { (x) = (((x) & ~0xc000) | ((v) << 14)); } while(0)
  #define PIC32_UART_STATUS_SET_UTXISEL_GET(x)     (((x) >> 14) & 0x3)
  #define PIC32_UART_STATUS_SET_ADDRM(v)           ((v) << 16)
  #define PIC32_UART_STATUS_SET_ADDRM_SET(x, v)    do { (x) = (((x) & ~0xff0000) | ((v) << 16)); } while(0)
  #define PIC32_UART_STATUS_SET_ADDRM_GET(x)       (((x) >> 16) & 0xff)
  #define PIC32_UART_STATUS_SET_ADMEN              0x01000000

#define PIC32_UART_TX_ADDR                           0x00000020
#define PIC32_UART_TX_MASK                           0x000001ff
  #define PIC32_UART_TX_VAL(v)                     ((v) << 0)
  #define PIC32_UART_TX_VAL_SET(x, v)              do { (x) = (((x) & ~0x1ff) | ((v) << 0)); } while(0)
  #define PIC32_UART_TX_VAL_GET(x)                 (((x) >> 0) & 0x1ff)

#define PIC32_UART_RX_ADDR                           0x00000030
#define PIC32_UART_RX_MASK                           0x000001ff
  #define PIC32_UART_RX_VAL(v)                     ((v) << 0)
  #define PIC32_UART_RX_VAL_SET(x, v)              do { (x) = (((x) & ~0x1ff) | ((v) << 0)); } while(0)
  #define PIC32_UART_RX_VAL_GET(x)                 (((x) >> 0) & 0x1ff)

#define PIC32_UART_BAUD_ADDR                         0x00000040
#define PIC32_UART_BAUD_MASK                         0x0000ffff
  #define PIC32_UART_BAUD_VAL(v)                   ((v) << 0)
  #define PIC32_UART_BAUD_VAL_SET(x, v)            do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define PIC32_UART_BAUD_VAL_GET(x)               (((x) >> 0) & 0xffff)

#endif

