/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs cdefs_use_reg_mask=1 cdefs_use_field_setval=1
*/

#ifndef _PIC32_CONFIG_BFGEN_DEFS_
#define _PIC32_CONFIG_BFGEN_DEFS_

#define PIC32_CONFIG_DEVCFG0_ADDR                    0x00000000
#define PIC32_CONFIG_DEVCFG0_MASK                    0x403ff77f
  #define PIC32_CONFIG_DEVCFG0_BACKGROUND_DEBUG(v) ((PIC32_CONFIG_DEVCFG0_BACKGROUND_DEBUG_##v) << 0)
  #define PIC32_CONFIG_DEVCFG0_BACKGROUND_DEBUG_SET(x, v) do { (x) = (((x) & ~0x3) | ((PIC32_CONFIG_DEVCFG0_BACKGROUND_DEBUG_##v) << 0)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_BACKGROUND_DEBUG_SETVAL(x, v) do { (x) = (((x) & ~0x3) | ((v) << 0)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_BACKGROUND_DEBUG_GET(x) (((x) >> 0) & 0x3)
    #define PIC32_CONFIG_DEVCFG0_BACKGROUND_DEBUG_ENABLED 0x00000001
    #define PIC32_CONFIG_DEVCFG0_BACKGROUND_DEBUG_DISABLED 0x00000003
  #define PIC32_CONFIG_DEVCFG0_JTAG(v)             ((PIC32_CONFIG_DEVCFG0_JTAG_##v) << 2)
  #define PIC32_CONFIG_DEVCFG0_JTAG_SET(x, v)      do { (x) = (((x) & ~0x4) | ((PIC32_CONFIG_DEVCFG0_JTAG_##v) << 2)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_JTAG_SETVAL(x, v)   do { (x) = (((x) & ~0x4) | ((v) << 2)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_JTAG_GET(x)         (((x) >> 2) & 0x1)
    #define PIC32_CONFIG_DEVCFG0_JTAG_DISABLED       0x00000000
    #define PIC32_CONFIG_DEVCFG0_JTAG_ENABLED        0x00000001
  #define PIC32_CONFIG_DEVCFG0_ICESEL(v)           ((PIC32_CONFIG_DEVCFG0_ICESEL_##v) << 3)
  #define PIC32_CONFIG_DEVCFG0_ICESEL_SET(x, v)    do { (x) = (((x) & ~0x18) | ((PIC32_CONFIG_DEVCFG0_ICESEL_##v) << 3)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_ICESEL_SETVAL(x, v) do { (x) = (((x) & ~0x18) | ((v) << 3)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_ICESEL_GET(x)       (((x) >> 3) & 0x3)
/** PGEC2/PGED2 pair */
    #define PIC32_CONFIG_DEVCFG0_ICESEL_PGEX2        0x00000002
/** PGEC1/PGED1 pair */
    #define PIC32_CONFIG_DEVCFG0_ICESEL_PGEX1        0x00000003
  #define PIC32_CONFIG_DEVCFG0_TRACE(v)            ((PIC32_CONFIG_DEVCFG0_TRACE_##v) << 5)
  #define PIC32_CONFIG_DEVCFG0_TRACE_SET(x, v)     do { (x) = (((x) & ~0x20) | ((PIC32_CONFIG_DEVCFG0_TRACE_##v) << 5)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_TRACE_SETVAL(x, v)  do { (x) = (((x) & ~0x20) | ((v) << 5)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_TRACE_GET(x)        (((x) >> 5) & 0x1)
    #define PIC32_CONFIG_DEVCFG0_TRACE_DISABLED      0x00000000
    #define PIC32_CONFIG_DEVCFG0_TRACE_ENABLED       0x00000001
  #define PIC32_CONFIG_DEVCFG0_BOOT_ISA(v)         ((PIC32_CONFIG_DEVCFG0_BOOT_ISA_##v) << 6)
  #define PIC32_CONFIG_DEVCFG0_BOOT_ISA_SET(x, v)  do { (x) = (((x) & ~0x40) | ((PIC32_CONFIG_DEVCFG0_BOOT_ISA_##v) << 6)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_BOOT_ISA_SETVAL(x, v) do { (x) = (((x) & ~0x40) | ((v) << 6)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_BOOT_ISA_GET(x)     (((x) >> 6) & 0x1)
    #define PIC32_CONFIG_DEVCFG0_BOOT_ISA_MICROMIPS  0x00000000
    #define PIC32_CONFIG_DEVCFG0_BOOT_ISA_MIPS32     0x00000001
  #define PIC32_CONFIG_DEVCFG0_FLASH_ECC(v)        ((PIC32_CONFIG_DEVCFG0_FLASH_ECC_##v) << 8)
  #define PIC32_CONFIG_DEVCFG0_FLASH_ECC_SET(x, v) do { (x) = (((x) & ~0x300) | ((PIC32_CONFIG_DEVCFG0_FLASH_ECC_##v) << 8)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_FLASH_ECC_SETVAL(x, v) do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_FLASH_ECC_GET(x)    (((x) >> 8) & 0x3)
/** Flash ECC is enabled */
    #define PIC32_CONFIG_DEVCFG0_FLASH_ECC_ENABLED   0x00000000
/** Dynamic Flash ECC is enabled */
    #define PIC32_CONFIG_DEVCFG0_FLASH_ECC_DYNAMIC   0x00000001
/** ECC and dynamic ECC are disabled */
    #define PIC32_CONFIG_DEVCFG0_FLASH_ECC_DISABLED_LOCKED 0x00000002
/** ECC and dynamic ECC are disabled */
    #define PIC32_CONFIG_DEVCFG0_FLASH_ECC_DISABLED_WRITABLE 0x00000003
  #define PIC32_CONFIG_DEVCFG0_FLASH_SLEEP(v)      ((PIC32_CONFIG_DEVCFG0_FLASH_SLEEP_##v) << 10)
  #define PIC32_CONFIG_DEVCFG0_FLASH_SLEEP_SET(x, v) do { (x) = (((x) & ~0x400) | ((PIC32_CONFIG_DEVCFG0_FLASH_SLEEP_##v) << 10)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_FLASH_SLEEP_SETVAL(x, v) do { (x) = (((x) & ~0x400) | ((v) << 10)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_FLASH_SLEEP_GET(x)  (((x) >> 10) & 0x1)
/** Flash remains powered when the device is in Sleep mode */
    #define PIC32_CONFIG_DEVCFG0_FLASH_SLEEP_ON      0x00000000
/** Flash is powered down when the device is in Sleep mode */
    #define PIC32_CONFIG_DEVCFG0_FLASH_SLEEP_OFF     0x00000001
  #define PIC32_CONFIG_DEVCFG0_DBG_PERM(v)         ((v) << 12)
  #define PIC32_CONFIG_DEVCFG0_DBG_PERM_SET(x, v)  do { (x) = (((x) & ~0x7000) | ((v) << 12)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_DBG_PERM_GET(x)     (((x) >> 12) & 0x7)
  #define PIC32_CONFIG_DEVCFG0_MCLR(v)             ((PIC32_CONFIG_DEVCFG0_MCLR_##v) << 15)
  #define PIC32_CONFIG_DEVCFG0_MCLR_SET(x, v)      do { (x) = (((x) & ~0x8000) | ((PIC32_CONFIG_DEVCFG0_MCLR_##v) << 15)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_MCLR_SETVAL(x, v)   do { (x) = (((x) & ~0x8000) | ((v) << 15)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_MCLR_GET(x)         (((x) >> 15) & 0x1)
/** MCLR generates a POR */
    #define PIC32_CONFIG_DEVCFG0_MCLR_POR            0x00000000
/** MCLR generates a system reset */
    #define PIC32_CONFIG_DEVCFG0_MCLR_NORMAL         0x00000001
  #define PIC32_CONFIG_DEVCFG0_SOSC_GAIN(v)        ((v) << 16)
  #define PIC32_CONFIG_DEVCFG0_SOSC_GAIN_SET(x, v) do { (x) = (((x) & ~0x30000) | ((v) << 16)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_SOSC_GAIN_GET(x)    (((x) >> 16) & 0x3)
  #define PIC32_CONFIG_DEVCFG0_SOSC_BOOST(v)       ((PIC32_CONFIG_DEVCFG0_SOSC_BOOST_##v) << 18)
  #define PIC32_CONFIG_DEVCFG0_SOSC_BOOST_SET(x, v) do { (x) = (((x) & ~0x40000) | ((PIC32_CONFIG_DEVCFG0_SOSC_BOOST_##v) << 18)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_SOSC_BOOST_SETVAL(x, v) do { (x) = (((x) & ~0x40000) | ((v) << 18)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_SOSC_BOOST_GET(x)   (((x) >> 18) & 0x1)
/** Normal start of the oscillator */
    #define PIC32_CONFIG_DEVCFG0_SOSC_BOOST_NORMAL   0x00000000
/** Boost the kick start of the oscillator */
    #define PIC32_CONFIG_DEVCFG0_SOSC_BOOST_BOOST    0x00000001
  #define PIC32_CONFIG_DEVCFG0_POSC_GAIN(v)        ((v) << 19)
  #define PIC32_CONFIG_DEVCFG0_POSC_GAIN_SET(x, v) do { (x) = (((x) & ~0x180000) | ((v) << 19)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_POSC_GAIN_GET(x)    (((x) >> 19) & 0x3)
  #define PIC32_CONFIG_DEVCFG0_POSC_BOOST(v)       ((PIC32_CONFIG_DEVCFG0_POSC_BOOST_##v) << 21)
  #define PIC32_CONFIG_DEVCFG0_POSC_BOOST_SET(x, v) do { (x) = (((x) & ~0x200000) | ((PIC32_CONFIG_DEVCFG0_POSC_BOOST_##v) << 21)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_POSC_BOOST_SETVAL(x, v) do { (x) = (((x) & ~0x200000) | ((v) << 21)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_POSC_BOOST_GET(x)   (((x) >> 21) & 0x1)
/** Normal start of the oscillator */
    #define PIC32_CONFIG_DEVCFG0_POSC_BOOST_NORMAL   0x00000000
/** Boost the kick start of the oscillator */
    #define PIC32_CONFIG_DEVCFG0_POSC_BOOST_BOOST    0x00000001
  #define PIC32_CONFIG_DEVCFG0_EJTAG_BOOT(v)       ((PIC32_CONFIG_DEVCFG0_EJTAG_BOOT_##v) << 30)
  #define PIC32_CONFIG_DEVCFG0_EJTAG_BOOT_SET(x, v) do { (x) = (((x) & ~0x40000000) | ((PIC32_CONFIG_DEVCFG0_EJTAG_BOOT_##v) << 30)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_EJTAG_BOOT_SETVAL(x, v) do { (x) = (((x) & ~0x40000000) | ((v) << 30)); } while(0)
  #define PIC32_CONFIG_DEVCFG0_EJTAG_BOOT_GET(x)   (((x) >> 30) & 0x1)
    #define PIC32_CONFIG_DEVCFG0_EJTAG_BOOT_DISABLED 0x00000000
    #define PIC32_CONFIG_DEVCFG0_EJTAG_BOOT_ENABLED  0x00000001

#define PIC32_CONFIG_DEVCFG1_ADDR                    0x00000004
#define PIC32_CONFIG_DEVCFG1_MASK                    0xffffc7ff
  #define PIC32_CONFIG_DEVCFG1_OSC_SEL(v)          ((PIC32_CONFIG_DEVCFG1_OSC_SEL_##v) << 0)
  #define PIC32_CONFIG_DEVCFG1_OSC_SEL_SET(x, v)   do { (x) = (((x) & ~0x7) | ((PIC32_CONFIG_DEVCFG1_OSC_SEL_##v) << 0)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_OSC_SEL_SETVAL(x, v) do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_OSC_SEL_GET(x)      (((x) >> 0) & 0x7)
/** same as 7 */
    #define PIC32_CONFIG_DEVCFG1_OSC_SEL_FRC0        0x00000000
/** SPLL */
    #define PIC32_CONFIG_DEVCFG1_OSC_SEL_SPLL        0x00000001
/** POSC (HS, XT, EC) */
    #define PIC32_CONFIG_DEVCFG1_OSC_SEL_POSC        0x00000002
/** SOSC */
    #define PIC32_CONFIG_DEVCFG1_OSC_SEL_SOSC        0x00000004
/** LPRC */
    #define PIC32_CONFIG_DEVCFG1_OSC_SEL_LPRC        0x00000005
/** FRC divided by FRCDIV */
    #define PIC32_CONFIG_DEVCFG1_OSC_SEL_FRC         0x00000007
  #define PIC32_CONFIG_DEVCFG1_DMT_INTV(v)         ((v) << 3)
  #define PIC32_CONFIG_DEVCFG1_DMT_INTV_SET(x, v)  do { (x) = (((x) & ~0x38) | ((v) << 3)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_DMT_INTV_GET(x)     (((x) >> 3) & 0x7)
  #define PIC32_CONFIG_DEVCFG1_SOSC(v)             ((PIC32_CONFIG_DEVCFG1_SOSC_##v) << 6)
  #define PIC32_CONFIG_DEVCFG1_SOSC_SET(x, v)      do { (x) = (((x) & ~0x40) | ((PIC32_CONFIG_DEVCFG1_SOSC_##v) << 6)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_SOSC_SETVAL(x, v)   do { (x) = (((x) & ~0x40) | ((v) << 6)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_SOSC_GET(x)         (((x) >> 6) & 0x1)
    #define PIC32_CONFIG_DEVCFG1_SOSC_DISABLED       0x00000000
    #define PIC32_CONFIG_DEVCFG1_SOSC_ENABLED        0x00000001
  #define PIC32_CONFIG_DEVCFG1_IESO(v)             ((PIC32_CONFIG_DEVCFG1_IESO_##v) << 7)
  #define PIC32_CONFIG_DEVCFG1_IESO_SET(x, v)      do { (x) = (((x) & ~0x80) | ((PIC32_CONFIG_DEVCFG1_IESO_##v) << 7)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_IESO_SETVAL(x, v)   do { (x) = (((x) & ~0x80) | ((v) << 7)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_IESO_GET(x)         (((x) >> 7) & 0x1)
    #define PIC32_CONFIG_DEVCFG1_IESO_DISABLED       0x00000000
    #define PIC32_CONFIG_DEVCFG1_IESO_ENABLED        0x00000001
  #define PIC32_CONFIG_DEVCFG1_POSC(v)             ((PIC32_CONFIG_DEVCFG1_POSC_##v) << 8)
  #define PIC32_CONFIG_DEVCFG1_POSC_SET(x, v)      do { (x) = (((x) & ~0x300) | ((PIC32_CONFIG_DEVCFG1_POSC_##v) << 8)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_POSC_SETVAL(x, v)   do { (x) = (((x) & ~0x300) | ((v) << 8)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_POSC_GET(x)         (((x) >> 8) & 0x3)
/** External clock */
    #define PIC32_CONFIG_DEVCFG1_POSC_EC             0x00000000
/** High speed crystal */
    #define PIC32_CONFIG_DEVCFG1_POSC_HS             0x00000002
/** Disabled */
    #define PIC32_CONFIG_DEVCFG1_POSC_DISABLED       0x00000003
  #define PIC32_CONFIG_DEVCFG1_CLKO(v)             ((PIC32_CONFIG_DEVCFG1_CLKO_##v) << 10)
  #define PIC32_CONFIG_DEVCFG1_CLKO_SET(x, v)      do { (x) = (((x) & ~0x400) | ((PIC32_CONFIG_DEVCFG1_CLKO_##v) << 10)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_CLKO_SETVAL(x, v)   do { (x) = (((x) & ~0x400) | ((v) << 10)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_CLKO_GET(x)         (((x) >> 10) & 0x1)
    #define PIC32_CONFIG_DEVCFG1_CLKO_ENABLED        0x00000000
    #define PIC32_CONFIG_DEVCFG1_CLKO_DISABLED       0x00000001
  #define PIC32_CONFIG_DEVCFG1_CLOCK_SWITCH(v)     ((PIC32_CONFIG_DEVCFG1_CLOCK_SWITCH_##v) << 14)
  #define PIC32_CONFIG_DEVCFG1_CLOCK_SWITCH_SET(x, v) do { (x) = (((x) & ~0x4000) | ((PIC32_CONFIG_DEVCFG1_CLOCK_SWITCH_##v) << 14)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_CLOCK_SWITCH_SETVAL(x, v) do { (x) = (((x) & ~0x4000) | ((v) << 14)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_CLOCK_SWITCH_GET(x) (((x) >> 14) & 0x1)
    #define PIC32_CONFIG_DEVCFG1_CLOCK_SWITCH_DISABLED 0x00000000
    #define PIC32_CONFIG_DEVCFG1_CLOCK_SWITCH_ENABLED 0x00000001
  #define PIC32_CONFIG_DEVCFG1_CLOCK_MON(v)        ((PIC32_CONFIG_DEVCFG1_CLOCK_MON_##v) << 15)
  #define PIC32_CONFIG_DEVCFG1_CLOCK_MON_SET(x, v) do { (x) = (((x) & ~0x8000) | ((PIC32_CONFIG_DEVCFG1_CLOCK_MON_##v) << 15)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_CLOCK_MON_SETVAL(x, v) do { (x) = (((x) & ~0x8000) | ((v) << 15)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_CLOCK_MON_GET(x)    (((x) >> 15) & 0x1)
    #define PIC32_CONFIG_DEVCFG1_CLOCK_MON_DISABLED  0x00000000
    #define PIC32_CONFIG_DEVCFG1_CLOCK_MON_ENABLED   0x00000001
  #define PIC32_CONFIG_DEVCFG1_WDT_PS(v)           ((v) << 16)
  #define PIC32_CONFIG_DEVCFG1_WDT_PS_SET(x, v)    do { (x) = (((x) & ~0x1f0000) | ((v) << 16)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_WDT_PS_GET(x)       (((x) >> 16) & 0x1f)
  #define PIC32_CONFIG_DEVCFG1_WDT_FLASH(v)        ((PIC32_CONFIG_DEVCFG1_WDT_FLASH_##v) << 21)
  #define PIC32_CONFIG_DEVCFG1_WDT_FLASH_SET(x, v) do { (x) = (((x) & ~0x200000) | ((PIC32_CONFIG_DEVCFG1_WDT_FLASH_##v) << 21)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_WDT_FLASH_SETVAL(x, v) do { (x) = (((x) & ~0x200000) | ((v) << 21)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_WDT_FLASH_GET(x)    (((x) >> 21) & 0x1)
/** Watchdog Timer runs during Flash programming */
    #define PIC32_CONFIG_DEVCFG1_WDT_FLASH_RUNNING   0x00000000
/** Watchdog Timer stops during Flash programming */
    #define PIC32_CONFIG_DEVCFG1_WDT_FLASH_STOPPED   0x00000001
  #define PIC32_CONFIG_DEVCFG1_WDT_WINDOW(v)       ((PIC32_CONFIG_DEVCFG1_WDT_WINDOW_##v) << 22)
  #define PIC32_CONFIG_DEVCFG1_WDT_WINDOW_SET(x, v) do { (x) = (((x) & ~0x400000) | ((PIC32_CONFIG_DEVCFG1_WDT_WINDOW_##v) << 22)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_WDT_WINDOW_SETVAL(x, v) do { (x) = (((x) & ~0x400000) | ((v) << 22)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_WDT_WINDOW_GET(x)   (((x) >> 22) & 0x1)
    #define PIC32_CONFIG_DEVCFG1_WDT_WINDOW_ENABLED  0x00000000
    #define PIC32_CONFIG_DEVCFG1_WDT_WINDOW_DISABLED 0x00000001
  #define PIC32_CONFIG_DEVCFG1_WDT(v)              ((PIC32_CONFIG_DEVCFG1_WDT_##v) << 23)
  #define PIC32_CONFIG_DEVCFG1_WDT_SET(x, v)       do { (x) = (((x) & ~0x800000) | ((PIC32_CONFIG_DEVCFG1_WDT_##v) << 23)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_WDT_SETVAL(x, v)    do { (x) = (((x) & ~0x800000) | ((v) << 23)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_WDT_GET(x)          (((x) >> 23) & 0x1)
    #define PIC32_CONFIG_DEVCFG1_WDT_DISABLED        0x00000000
    #define PIC32_CONFIG_DEVCFG1_WDT_ENABLED         0x00000001
  #define PIC32_CONFIG_DEVCFG1_WDT_WINSZ(v)        ((PIC32_CONFIG_DEVCFG1_WDT_WINSZ_##v) << 24)
  #define PIC32_CONFIG_DEVCFG1_WDT_WINSZ_SET(x, v) do { (x) = (((x) & ~0x3000000) | ((PIC32_CONFIG_DEVCFG1_WDT_WINSZ_##v) << 24)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_WDT_WINSZ_SETVAL(x, v) do { (x) = (((x) & ~0x3000000) | ((v) << 24)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_WDT_WINSZ_GET(x)    (((x) >> 24) & 0x3)
/** 75% */
    #define PIC32_CONFIG_DEVCFG1_WDT_WINSZ_75        0x00000000
/** 50% */
    #define PIC32_CONFIG_DEVCFG1_WDT_WINSZ_50        0x00000001
/** 37.5% */
    #define PIC32_CONFIG_DEVCFG1_WDT_WINSZ_37_5      0x00000002
/** 25% */
    #define PIC32_CONFIG_DEVCFG1_WDT_WINSZ_25        0x00000003
  #define PIC32_CONFIG_DEVCFG1_DMT_CNT(v)          ((v) << 26)
  #define PIC32_CONFIG_DEVCFG1_DMT_CNT_SET(x, v)   do { (x) = (((x) & ~0x7c000000) | ((v) << 26)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_DMT_CNT_GET(x)      (((x) >> 26) & 0x1f)
  #define PIC32_CONFIG_DEVCFG1_DMT(v)              ((PIC32_CONFIG_DEVCFG1_DMT_##v) << 31)
  #define PIC32_CONFIG_DEVCFG1_DMT_SET(x, v)       do { (x) = (((x) & ~0x80000000) | ((PIC32_CONFIG_DEVCFG1_DMT_##v) << 31)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_DMT_SETVAL(x, v)    do { (x) = (((x) & ~0x80000000) | ((v) << 31)); } while(0)
  #define PIC32_CONFIG_DEVCFG1_DMT_GET(x)          (((x) >> 31) & 0x1)
    #define PIC32_CONFIG_DEVCFG1_DMT_DISABLED        0x00000000
    #define PIC32_CONFIG_DEVCFG1_DMT_ENABLED         0x00000001

#define PIC32_CONFIG_DEVCFG2_ADDR                    0x00000008
#define PIC32_CONFIG_DEVCFG2_MASK                    0xc0077ff7
  #define PIC32_CONFIG_DEVCFG2_SPLL_I(v)           ((PIC32_CONFIG_DEVCFG2_SPLL_I_##v) << 0)
  #define PIC32_CONFIG_DEVCFG2_SPLL_I_SET(x, v)    do { (x) = (((x) & ~0x7) | ((PIC32_CONFIG_DEVCFG2_SPLL_I_##v) << 0)); } while(0)
  #define PIC32_CONFIG_DEVCFG2_SPLL_I_SETVAL(x, v) do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define PIC32_CONFIG_DEVCFG2_SPLL_I_GET(x)       (((x) >> 0) & 0x7)
    #define PIC32_CONFIG_DEVCFG2_SPLL_I_DIV1         0x00000000
    #define PIC32_CONFIG_DEVCFG2_SPLL_I_DIV2         0x00000001
    #define PIC32_CONFIG_DEVCFG2_SPLL_I_DIV3         0x00000002
    #define PIC32_CONFIG_DEVCFG2_SPLL_I_DIV4         0x00000003
    #define PIC32_CONFIG_DEVCFG2_SPLL_I_DIV5         0x00000004
    #define PIC32_CONFIG_DEVCFG2_SPLL_I_DIV6         0x00000005
    #define PIC32_CONFIG_DEVCFG2_SPLL_I_DIV7         0x00000006
    #define PIC32_CONFIG_DEVCFG2_SPLL_I_DIV8         0x00000007
  #define PIC32_CONFIG_DEVCFG2_SPLL_RANGE(v)       ((PIC32_CONFIG_DEVCFG2_SPLL_RANGE_##v) << 4)
  #define PIC32_CONFIG_DEVCFG2_SPLL_RANGE_SET(x, v) do { (x) = (((x) & ~0x70) | ((PIC32_CONFIG_DEVCFG2_SPLL_RANGE_##v) << 4)); } while(0)
  #define PIC32_CONFIG_DEVCFG2_SPLL_RANGE_SETVAL(x, v) do { (x) = (((x) & ~0x70) | ((v) << 4)); } while(0)
  #define PIC32_CONFIG_DEVCFG2_SPLL_RANGE_GET(x)   (((x) >> 4) & 0x7)
    #define PIC32_CONFIG_DEVCFG2_SPLL_RANGE_BYPASS   0x00000000
    #define PIC32_CONFIG_DEVCFG2_SPLL_RANGE_5_10_MHZ 0x00000001
    #define PIC32_CONFIG_DEVCFG2_SPLL_RANGE_8_16_MHZ 0x00000002
    #define PIC32_CONFIG_DEVCFG2_SPLL_RANGE_13_26_MHZ 0x00000003
    #define PIC32_CONFIG_DEVCFG2_SPLL_RANGE_21_42_MHZ 0x00000004
    #define PIC32_CONFIG_DEVCFG2_SPLL_RANGE_34_64_MHZ 0x00000005
  #define PIC32_CONFIG_DEVCFG2_SPLL_ICLK(v)        ((PIC32_CONFIG_DEVCFG2_SPLL_ICLK_##v) << 7)
  #define PIC32_CONFIG_DEVCFG2_SPLL_ICLK_SET(x, v) do { (x) = (((x) & ~0x80) | ((PIC32_CONFIG_DEVCFG2_SPLL_ICLK_##v) << 7)); } while(0)
  #define PIC32_CONFIG_DEVCFG2_SPLL_ICLK_SETVAL(x, v) do { (x) = (((x) & ~0x80) | ((v) << 7)); } while(0)
  #define PIC32_CONFIG_DEVCFG2_SPLL_ICLK_GET(x)    (((x) >> 7) & 0x1)
    #define PIC32_CONFIG_DEVCFG2_SPLL_ICLK_POSC      0x00000000
    #define PIC32_CONFIG_DEVCFG2_SPLL_ICLK_FRC       0x00000001
  #define PIC32_CONFIG_DEVCFG2_SPLL_MULT(v)        ((v) << 8)
  #define PIC32_CONFIG_DEVCFG2_SPLL_MULT_SET(x, v) do { (x) = (((x) & ~0x7f00) | ((v) << 8)); } while(0)
  #define PIC32_CONFIG_DEVCFG2_SPLL_MULT_GET(x)    (((x) >> 8) & 0x7f)
  #define PIC32_CONFIG_DEVCFG2_SPLL_O(v)           ((PIC32_CONFIG_DEVCFG2_SPLL_O_##v) << 16)
  #define PIC32_CONFIG_DEVCFG2_SPLL_O_SET(x, v)    do { (x) = (((x) & ~0x70000) | ((PIC32_CONFIG_DEVCFG2_SPLL_O_##v) << 16)); } while(0)
  #define PIC32_CONFIG_DEVCFG2_SPLL_O_SETVAL(x, v) do { (x) = (((x) & ~0x70000) | ((v) << 16)); } while(0)
  #define PIC32_CONFIG_DEVCFG2_SPLL_O_GET(x)       (((x) >> 16) & 0x7)
    #define PIC32_CONFIG_DEVCFG2_SPLL_O_DIV2         0x00000001
    #define PIC32_CONFIG_DEVCFG2_SPLL_O_DIV4         0x00000002
    #define PIC32_CONFIG_DEVCFG2_SPLL_O_DIV8         0x00000003
    #define PIC32_CONFIG_DEVCFG2_SPLL_O_DIV16        0x00000004
    #define PIC32_CONFIG_DEVCFG2_SPLL_O_DIV32        0x00000007
  #define PIC32_CONFIG_DEVCFG2_USB_PLL_INPUT(v)    ((PIC32_CONFIG_DEVCFG2_USB_PLL_INPUT_##v) << 30)
  #define PIC32_CONFIG_DEVCFG2_USB_PLL_INPUT_SET(x, v) do { (x) = (((x) & ~0x40000000) | ((PIC32_CONFIG_DEVCFG2_USB_PLL_INPUT_##v) << 30)); } while(0)
  #define PIC32_CONFIG_DEVCFG2_USB_PLL_INPUT_SETVAL(x, v) do { (x) = (((x) & ~0x40000000) | ((v) << 30)); } while(0)
  #define PIC32_CONFIG_DEVCFG2_USB_PLL_INPUT_GET(x) (((x) >> 30) & 0x1)
/** 12 MHz */
    #define PIC32_CONFIG_DEVCFG2_USB_PLL_INPUT_12M   0x00000000
/** 24 MHz */
    #define PIC32_CONFIG_DEVCFG2_USB_PLL_INPUT_24M   0x00000001
  #define PIC32_CONFIG_DEVCFG2_USB_PLL(v)          ((PIC32_CONFIG_DEVCFG2_USB_PLL_##v) << 31)
  #define PIC32_CONFIG_DEVCFG2_USB_PLL_SET(x, v)   do { (x) = (((x) & ~0x80000000) | ((PIC32_CONFIG_DEVCFG2_USB_PLL_##v) << 31)); } while(0)
  #define PIC32_CONFIG_DEVCFG2_USB_PLL_SETVAL(x, v) do { (x) = (((x) & ~0x80000000) | ((v) << 31)); } while(0)
  #define PIC32_CONFIG_DEVCFG2_USB_PLL_GET(x)      (((x) >> 31) & 0x1)
    #define PIC32_CONFIG_DEVCFG2_USB_PLL_DISABLED    0x00000000
    #define PIC32_CONFIG_DEVCFG2_USB_PLL_ENABLED     0x00000001

#define PIC32_CONFIG_DEVCFG3_ADDR                    0x0000000c
#define PIC32_CONFIG_DEVCFG3_MASK                    0x7b00ffff
  #define PIC32_CONFIG_DEVCFG3_USER_ID(v)          ((v) << 0)
  #define PIC32_CONFIG_DEVCFG3_USER_ID_SET(x, v)   do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define PIC32_CONFIG_DEVCFG3_USER_ID_GET(x)      (((x) >> 0) & 0xffff)
  #define PIC32_CONFIG_DEVCFG3_ETH_MII(v)          ((PIC32_CONFIG_DEVCFG3_ETH_MII_##v) << 24)
  #define PIC32_CONFIG_DEVCFG3_ETH_MII_SET(x, v)   do { (x) = (((x) & ~0x1000000) | ((PIC32_CONFIG_DEVCFG3_ETH_MII_##v) << 24)); } while(0)
  #define PIC32_CONFIG_DEVCFG3_ETH_MII_SETVAL(x, v) do { (x) = (((x) & ~0x1000000) | ((v) << 24)); } while(0)
  #define PIC32_CONFIG_DEVCFG3_ETH_MII_GET(x)      (((x) >> 24) & 0x1)
    #define PIC32_CONFIG_DEVCFG3_ETH_MII_RMII        0x00000000
    #define PIC32_CONFIG_DEVCFG3_ETH_MII_MII         0x00000001
  #define PIC32_CONFIG_DEVCFG3_ETH_POS(v)          ((PIC32_CONFIG_DEVCFG3_ETH_POS_##v) << 25)
  #define PIC32_CONFIG_DEVCFG3_ETH_POS_SET(x, v)   do { (x) = (((x) & ~0x2000000) | ((PIC32_CONFIG_DEVCFG3_ETH_POS_##v) << 25)); } while(0)
  #define PIC32_CONFIG_DEVCFG3_ETH_POS_SETVAL(x, v) do { (x) = (((x) & ~0x2000000) | ((v) << 25)); } while(0)
  #define PIC32_CONFIG_DEVCFG3_ETH_POS_GET(x)      (((x) >> 25) & 0x1)
    #define PIC32_CONFIG_DEVCFG3_ETH_POS_ALTERNATE   0x00000000
    #define PIC32_CONFIG_DEVCFG3_ETH_POS_DEFAULT     0x00000001
  #define PIC32_CONFIG_DEVCFG3_PG(v)               ((PIC32_CONFIG_DEVCFG3_PG_##v) << 27)
  #define PIC32_CONFIG_DEVCFG3_PG_SET(x, v)        do { (x) = (((x) & ~0x8000000) | ((PIC32_CONFIG_DEVCFG3_PG_##v) << 27)); } while(0)
  #define PIC32_CONFIG_DEVCFG3_PG_SETVAL(x, v)     do { (x) = (((x) & ~0x8000000) | ((v) << 27)); } while(0)
  #define PIC32_CONFIG_DEVCFG3_PG_GET(x)           (((x) >> 27) & 0x1)
/** Allow multiple reconfigurations */
    #define PIC32_CONFIG_DEVCFG3_PG_MULTIPLE         0x00000000
/** Allow only one reconfiguration */
    #define PIC32_CONFIG_DEVCFG3_PG_ONCE             0x00000001
  #define PIC32_CONFIG_DEVCFG3_PMD(v)              ((PIC32_CONFIG_DEVCFG3_PMD_##v) << 28)
  #define PIC32_CONFIG_DEVCFG3_PMD_SET(x, v)       do { (x) = (((x) & ~0x10000000) | ((PIC32_CONFIG_DEVCFG3_PMD_##v) << 28)); } while(0)
  #define PIC32_CONFIG_DEVCFG3_PMD_SETVAL(x, v)    do { (x) = (((x) & ~0x10000000) | ((v) << 28)); } while(0)
  #define PIC32_CONFIG_DEVCFG3_PMD_GET(x)          (((x) >> 28) & 0x1)
/** Allow multiple reconfigurations */
    #define PIC32_CONFIG_DEVCFG3_PMD_MULTIPLE        0x00000000
/** Allow only one reconfiguration */
    #define PIC32_CONFIG_DEVCFG3_PMD_ONCE            0x00000001
  #define PIC32_CONFIG_DEVCFG3_IO(v)               ((PIC32_CONFIG_DEVCFG3_IO_##v) << 29)
  #define PIC32_CONFIG_DEVCFG3_IO_SET(x, v)        do { (x) = (((x) & ~0x20000000) | ((PIC32_CONFIG_DEVCFG3_IO_##v) << 29)); } while(0)
  #define PIC32_CONFIG_DEVCFG3_IO_SETVAL(x, v)     do { (x) = (((x) & ~0x20000000) | ((v) << 29)); } while(0)
  #define PIC32_CONFIG_DEVCFG3_IO_GET(x)           (((x) >> 29) & 0x1)
/** Allow multiple reconfigurations */
    #define PIC32_CONFIG_DEVCFG3_IO_MULTIPLE         0x00000000
/** Allow only one reconfiguration */
    #define PIC32_CONFIG_DEVCFG3_IO_ONCE             0x00000001
  #define PIC32_CONFIG_DEVCFG3_USBID_IO(v)         ((PIC32_CONFIG_DEVCFG3_USBID_IO_##v) << 30)
  #define PIC32_CONFIG_DEVCFG3_USBID_IO_SET(x, v)  do { (x) = (((x) & ~0x40000000) | ((PIC32_CONFIG_DEVCFG3_USBID_IO_##v) << 30)); } while(0)
  #define PIC32_CONFIG_DEVCFG3_USBID_IO_SETVAL(x, v) do { (x) = (((x) & ~0x40000000) | ((v) << 30)); } while(0)
  #define PIC32_CONFIG_DEVCFG3_USBID_IO_GET(x)     (((x) >> 30) & 0x1)
    #define PIC32_CONFIG_DEVCFG3_USBID_IO_DISABLED   0x00000000
    #define PIC32_CONFIG_DEVCFG3_USBID_IO_ENABLED    0x00000001

#endif

