/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs cdefs_use_reg_mask=1 cdefs_use_field_setval=1
*/

#ifndef _PIC32_GPIO_BFGEN_DEFS_
#define _PIC32_GPIO_BFGEN_DEFS_

#define PIC32_GPIO_INT_ADDR(ridx)                    (0x00001404 + (ridx) * 4)
#define PIC32_GPIO_INT_COUNT                         4
#define PIC32_GPIO_INT_MASK                          0x0000000f
  #define PIC32_GPIO_INT_VAL(v)                    ((v) << 0)
  #define PIC32_GPIO_INT_VAL_SET(x, v)             do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define PIC32_GPIO_INT_VAL_GET(x)                (((x) >> 0) & 0xf)

#define PIC32_GPIO_TCK_ADDR(ridx)                    (0x00001414 + (ridx) * 4)
#define PIC32_GPIO_TCK_COUNT                         9
#define PIC32_GPIO_TCK_MASK                          0x0000000f
  #define PIC32_GPIO_TCK_VAL(v)                    ((v) << 0)
  #define PIC32_GPIO_TCK_VAL_SET(x, v)             do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define PIC32_GPIO_TCK_VAL_GET(x)                (((x) >> 0) & 0xf)

#define PIC32_GPIO_IC_ADDR(ridx)                     (0x00001438 + (ridx) * 4)
#define PIC32_GPIO_IC_COUNT                          9
#define PIC32_GPIO_IC_MASK                           0x0000000f
  #define PIC32_GPIO_IC_VAL(v)                     ((v) << 0)
  #define PIC32_GPIO_IC_VAL_SET(x, v)              do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define PIC32_GPIO_IC_VAL_GET(x)                 (((x) >> 0) & 0xf)

#define PIC32_GPIO_OFCAR_ADDR                        0x00001460
#define PIC32_GPIO_OFCAR_MASK                        0x0000000f
  #define PIC32_GPIO_OFCAR_VAL(v)                  ((v) << 0)
  #define PIC32_GPIO_OFCAR_VAL_SET(x, v)           do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define PIC32_GPIO_OFCAR_VAL_GET(x)              (((x) >> 0) & 0xf)

#define PIC32_GPIO_URX_ADDR(ridx)                    (0x00001468 + (ridx) * 8)
#define PIC32_GPIO_URX_COUNT                         6
#define PIC32_GPIO_URX_MASK                          0x0000000f
  #define PIC32_GPIO_URX_VAL(v)                    ((v) << 0)
  #define PIC32_GPIO_URX_VAL_SET(x, v)             do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define PIC32_GPIO_URX_VAL_GET(x)                (((x) >> 0) & 0xf)

#define PIC32_GPIO_UCTS_ADDR(ridx)                   (0x0000146c + (ridx) * 8)
#define PIC32_GPIO_UCTS_COUNT                        6
#define PIC32_GPIO_UCTS_MASK                         0x0000000f
  #define PIC32_GPIO_UCTS_VAL(v)                   ((v) << 0)
  #define PIC32_GPIO_UCTS_VAL_SET(x, v)            do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define PIC32_GPIO_UCTS_VAL_GET(x)               (((x) >> 0) & 0xf)

#define PIC32_GPIO_SDI_ADDR(ridx)                    (0x0000149c + (ridx) * 8)
#define PIC32_GPIO_SDI_COUNT                         6
#define PIC32_GPIO_SDI_MASK                          0x0000000f
  #define PIC32_GPIO_SDI_VAL(v)                    ((v) << 0)
  #define PIC32_GPIO_SDI_VAL_SET(x, v)             do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define PIC32_GPIO_SDI_VAL_GET(x)                (((x) >> 0) & 0xf)

#define PIC32_GPIO_SS_ADDR(ridx)                     (0x000014a0 + (ridx) * 8)
#define PIC32_GPIO_SS_COUNT                          6
#define PIC32_GPIO_SS_MASK                           0x0000000f
  #define PIC32_GPIO_SS_VAL(v)                     ((v) << 0)
  #define PIC32_GPIO_SS_VAL_SET(x, v)              do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define PIC32_GPIO_SS_VAL_GET(x)                 (((x) >> 0) & 0xf)

#define PIC32_GPIO_CRX_ADDR(ridx)                    (0x000014e0 + (ridx) * 4)
#define PIC32_GPIO_CRX_COUNT                         2
#define PIC32_GPIO_CRX_MASK                          0x0000000f
  #define PIC32_GPIO_CRX_VAL(v)                    ((v) << 0)
  #define PIC32_GPIO_CRX_VAL_SET(x, v)             do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define PIC32_GPIO_CRX_VAL_GET(x)                (((x) >> 0) & 0xf)

#define PIC32_GPIO_REFCLKI_ADDR(ridx)                (0x000014e8 + (ridx) * 4)
#define PIC32_GPIO_REFCLKI_COUNT                     4
#define PIC32_GPIO_REFCLKI_MASK                      0x0000000f
  #define PIC32_GPIO_REFCLKI_VAL(v)                ((v) << 0)
  #define PIC32_GPIO_REFCLKI_VAL_SET(x, v)         do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define PIC32_GPIO_REFCLKI_VAL_GET(x)            (((x) >> 0) & 0xf)

#define PIC32_GPIO_RP_ADDR(ridx)                     (0x00001500 + (ridx) * 4)
#define PIC32_GPIO_RP_COUNT                          16
#define PIC32_GPIO_RP_MASK                           0x0000000f
  #define PIC32_GPIO_RP_VAL(v)                     ((v) << 0)
  #define PIC32_GPIO_RP_VAL_SET(x, v)              do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define PIC32_GPIO_RP_VAL_GET(x)                 (((x) >> 0) & 0xf)

#define PIC32_GPIO_ANSEL_ADDR(ridx)                  (0x00060000 + (ridx) * 256)
#define PIC32_GPIO_ANSEL_COUNT                       10
#define PIC32_GPIO_ANSEL_MASK                        0x0000ffff
  #define PIC32_GPIO_ANSEL_DIR_COUNT               16
  #define PIC32_GPIO_ANSEL_DIR(fidx, v)            ((PIC32_GPIO_ANSEL_DIR_##v) << ((fidx) + 0))
  #define PIC32_GPIO_ANSEL_DIR_SET(fidx, x, v)     do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((PIC32_GPIO_ANSEL_DIR_##v) << ((fidx) + 0))); } while(0)
  #define PIC32_GPIO_ANSEL_DIR_SETVAL(fidx, x, v)  do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define PIC32_GPIO_ANSEL_DIR_GET(fidx, x)        (((x) >> ((fidx) + 0)) & 0x1)
  #define PIC32_GPIO_ANSEL_DIR_DIGITAL             0x00000000
  #define PIC32_GPIO_ANSEL_DIR_ANALOG              0x00000001

#define PIC32_GPIO_TRIS_ADDR(ridx)                   (0x00060010 + (ridx) * 256)
#define PIC32_GPIO_TRIS_COUNT                        10
#define PIC32_GPIO_TRIS_MASK                         0x0000ffff
  #define PIC32_GPIO_TRIS_DIR_COUNT                16
  #define PIC32_GPIO_TRIS_DIR(fidx, v)             ((PIC32_GPIO_TRIS_DIR_##v) << ((fidx) + 0))
  #define PIC32_GPIO_TRIS_DIR_SET(fidx, x, v)      do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((PIC32_GPIO_TRIS_DIR_##v) << ((fidx) + 0))); } while(0)
  #define PIC32_GPIO_TRIS_DIR_SETVAL(fidx, x, v)   do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define PIC32_GPIO_TRIS_DIR_GET(fidx, x)         (((x) >> ((fidx) + 0)) & 0x1)
  #define PIC32_GPIO_TRIS_DIR_OUTPUT               0x00000000
  #define PIC32_GPIO_TRIS_DIR_INPUT                0x00000001

#define PIC32_GPIO_PORT_ADDR(ridx)                   (0x00060020 + (ridx) * 256)
#define PIC32_GPIO_PORT_COUNT                        10
#define PIC32_GPIO_PORT_MASK                         0x0000ffff
  #define PIC32_GPIO_PORT_VAL_COUNT                16
  #define PIC32_GPIO_PORT_VAL(fidx)                (0x00000001 << ((fidx)))

#define PIC32_GPIO_LAT_ADDR(ridx)                    (0x00060030 + (ridx) * 256)
#define PIC32_GPIO_LAT_COUNT                         10
#define PIC32_GPIO_LAT_MASK                          0x0000ffff
  #define PIC32_GPIO_LAT_VAL_COUNT                 16
  #define PIC32_GPIO_LAT_VAL(fidx)                 (0x00000001 << ((fidx)))

#define PIC32_GPIO_ODC_ADDR(ridx)                    (0x00060040 + (ridx) * 256)
#define PIC32_GPIO_ODC_COUNT                         10
#define PIC32_GPIO_ODC_MASK                          0x0000ffff
  #define PIC32_GPIO_ODC_VAL_COUNT                 16
  #define PIC32_GPIO_ODC_VAL(fidx, v)              ((PIC32_GPIO_ODC_VAL_##v) << ((fidx) + 0))
  #define PIC32_GPIO_ODC_VAL_SET(fidx, x, v)       do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((PIC32_GPIO_ODC_VAL_##v) << ((fidx) + 0))); } while(0)
  #define PIC32_GPIO_ODC_VAL_SETVAL(fidx, x, v)    do { (x) = (((x) & ~(0x1 << ((fidx)))) | ((v) << ((fidx) + 0))); } while(0)
  #define PIC32_GPIO_ODC_VAL_GET(fidx, x)          (((x) >> ((fidx) + 0)) & 0x1)
  #define PIC32_GPIO_ODC_VAL_NORMAL                0x00000000
  #define PIC32_GPIO_ODC_VAL_OPENDRAIN             0x00000001

#define PIC32_GPIO_CNPU_ADDR(ridx)                   (0x00060050 + (ridx) * 256)
#define PIC32_GPIO_CNPU_COUNT                        10
#define PIC32_GPIO_CNPU_MASK                         0x0000ffff
  #define PIC32_GPIO_CNPU_VAL_COUNT                16
  #define PIC32_GPIO_CNPU_VAL(fidx)                (0x00000001 << ((fidx)))

#define PIC32_GPIO_CNPD_ADDR(ridx)                   (0x00060060 + (ridx) * 256)
#define PIC32_GPIO_CNPD_COUNT                        10
#define PIC32_GPIO_CNPD_MASK                         0x0000ffff
  #define PIC32_GPIO_CNPD_VAL_COUNT                16
  #define PIC32_GPIO_CNPD_VAL(fidx)                (0x00000001 << ((fidx)))

#define PIC32_GPIO_CNCON_ADDR(ridx)                  (0x00060070 + (ridx) * 256)
#define PIC32_GPIO_CNCON_COUNT                       10
#define PIC32_GPIO_CNCON_MASK                        0x0000a000
/** CPU Idle Mode halts CN operation when 1 else CPU Idle does not affect CN
   operation when 0. @multiple */
  #define PIC32_GPIO_CNCON_SIDL                    0x00002000
/** CN is enabled when 1 and disabled when 0. @multiple */
  #define PIC32_GPIO_CNCON_ON                      0x00008000

#define PIC32_GPIO_CNEN_ADDR(ridx)                   (0x00060080 + (ridx) * 256)
#define PIC32_GPIO_CNEN_COUNT                        10
#define PIC32_GPIO_CNEN_MASK                         0x0000ffff
  #define PIC32_GPIO_CNEN_VAL_COUNT                16
  #define PIC32_GPIO_CNEN_VAL(fidx)                (0x00000001 << ((fidx)))

#define PIC32_GPIO_CNSTAT_ADDR(ridx)                 (0x00060090 + (ridx) * 256)
#define PIC32_GPIO_CNSTAT_COUNT                      10
#define PIC32_GPIO_CNSTAT_MASK                       0x0000ffff
  #define PIC32_GPIO_CNSTAT_VAL_COUNT              16
  #define PIC32_GPIO_CNSTAT_VAL(fidx)              (0x00000001 << ((fidx)))

#endif

