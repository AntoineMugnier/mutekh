
#ifndef _GAISLER_DEVICE_IDS_
#define _GAISLER_DEVICE_IDS_

enum gaisler_vendor_ids_e
{
  GAISLER_VENDOR_GAISLER    = 0x01,
  GAISLER_VENDOR_PENDER     = 0x02,
  GAISLER_VENDOR_ESA        = 0x04,
  GAISLER_VENDOR_ASTRIUM    = 0x06,
  GAISLER_VENDOR_OPENCHIP   = 0x07,
  GAISLER_VENDOR_OPENCORES  = 0x08,
  GAISLER_VENDOR_CONTRIB    = 0x09,
  GAISLER_VENDOR_EONIC      = 0x0b,
  GAISLER_VENDOR_RADIONOR   = 0x0f,
  GAISLER_VENDOR_GLEICHMANN = 0x10,
  GAISLER_VENDOR_MENTA      = 0x11,
  GAISLER_VENDOR_SUN        = 0x13,
  GAISLER_VENDOR_EMBEDDIT   = 0xea,
  GAISLER_VENDOR_CAL        = 0xca,

  GAISLER_VENDOR_count      = 0xeb,
};

#ifdef CONFIG_GAISLER_DEVICE_IDS
extern const char *const gaisler_vendors_longnames[GAISLER_VENDOR_count];
#endif

enum gaisler_device_ids_e
{
  GAISLER_DEVICE_LEON2DSU  = 0x002,
  GAISLER_DEVICE_LEON3     = 0x003,
  GAISLER_DEVICE_LEON3DSU  = 0x004,
  GAISLER_DEVICE_ETHAHB    = 0x005,
  GAISLER_DEVICE_APBMST    = 0x006,
  GAISLER_DEVICE_AHBUART   = 0x007,
  GAISLER_DEVICE_SRCTRL    = 0x008,
  GAISLER_DEVICE_SDCTRL    = 0x009,
  GAISLER_DEVICE_SSRCTRL   = 0x00A,
  GAISLER_DEVICE_APBUART   = 0x00C,
  GAISLER_DEVICE_IRQMP     = 0x00D,
  GAISLER_DEVICE_AHBRAM    = 0x00E,
  GAISLER_DEVICE_GPTIMER   = 0x011,
  GAISLER_DEVICE_PCITRG    = 0x012,
  GAISLER_DEVICE_PCISBRG   = 0x013,
  GAISLER_DEVICE_PCIFBRG   = 0x014,
  GAISLER_DEVICE_PCITRACE  = 0x015,
  GAISLER_DEVICE_DMACTRL   = 0x016,
  GAISLER_DEVICE_AHBTRACE  = 0x017,
  GAISLER_DEVICE_DSUCTRL   = 0x018,
  GAISLER_DEVICE_CANAHB    = 0x019,
  GAISLER_DEVICE_GPIO      = 0x01A,
  GAISLER_DEVICE_AHBROM    = 0x01B,
  GAISLER_DEVICE_AHBJTAG   = 0x01C,
  GAISLER_DEVICE_ETHMAC    = 0x01D,
  GAISLER_DEVICE_SWNODE    = 0x01E,
  GAISLER_DEVICE_SPW       = 0x01F,
  GAISLER_DEVICE_AHB2AHB   = 0x020,
  GAISLER_DEVICE_USBCTRL   = 0x021,
  GAISLER_DEVICE_USBDCL    = 0x022,
  GAISLER_DEVICE_DDRMP     = 0x023,
  GAISLER_DEVICE_ATACTRL   = 0x024,
  GAISLER_DEVICE_DDRSP     = 0x025,
  GAISLER_DEVICE_EHCI      = 0x026,
  GAISLER_DEVICE_UHCI      = 0x027,
  GAISLER_DEVICE_AHBDMA    = 0x02A,
  GAISLER_DEVICE_NUHOSP3   = 0x02B,
  GAISLER_DEVICE_GRTM      = 0x030,
  GAISLER_DEVICE_GRTC      = 0x031,
  GAISLER_DEVICE_GRPW      = 0x032,
  GAISLER_DEVICE_GRCTM     = 0x033,
  GAISLER_DEVICE_GRHCAN    = 0x034,
  GAISLER_DEVICE_GRFIFO    = 0x035,
  GAISLER_DEVICE_GRADCDAC  = 0x036,
  GAISLER_DEVICE_GRPULSE   = 0x037,
  GAISLER_DEVICE_GRTIMER   = 0x038,
  GAISLER_DEVICE_AHB2PP    = 0x039,
  GAISLER_DEVICE_GRVERSION = 0x03A,
  GAISLER_DEVICE_APB2PW    = 0x03B,
  GAISLER_DEVICE_PW2APB    = 0x03C,
  GAISLER_DEVICE_AHBMST_EM = 0x040,
  GAISLER_DEVICE_AHBSLV_EM = 0x041,
  GAISLER_DEVICE_GRTESTMOD = 0x042,
  GAISLER_DEVICE_LEON4     = 0x048,
  GAISLER_DEVICE_FTAHBRAM  = 0x050,
  GAISLER_DEVICE_FTSRCTRL  = 0x051,
  GAISLER_DEVICE_AHBSTAT   = 0x052,
  GAISLER_DEVICE_LEON3FT   = 0x053,
  GAISLER_DEVICE_FTMCTRL   = 0x054,
  GAISLER_DEVICE_FTSDCTRL  = 0x055,
  GAISLER_DEVICE_FTSRCTRL8 = 0x056,
  GAISLER_DEVICE_APBPS2    = 0x060,
  GAISLER_DEVICE_VGACTRL   = 0x061,
  GAISLER_DEVICE_LOGAN     = 0x062,
  GAISLER_DEVICE_SVGACTRL  = 0x063,
  GAISLER_DEVICE_B1553BC   = 0x070,
  GAISLER_DEVICE_B1553RT   = 0x071,
  GAISLER_DEVICE_B1553BRM  = 0x072,
  GAISLER_DEVICE_AES       = 0x073,
  GAISLER_DEVICE_ECC       = 0x074,
  GAISLER_DEVICE_PCIF      = 0x075,

  GAISLER_DEVICE_count     = 0x076,
};

extern const char *const gaisler_devices_names[GAISLER_DEVICE_count];

#ifdef CONFIG_GAISLER_DEVICE_IDS
extern const char *const gaisler_devices_longnames[GAISLER_DEVICE_count];
#endif

#endif

