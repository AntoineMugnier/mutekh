/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -I romtable.bf -O romtable.h -o cdefs cdefs_use_reg_mask=1            \
     cdefs_use_field_setval=1
*/

#ifndef _ROMTABLE_BFGEN_DEFS_
#define _ROMTABLE_BFGEN_DEFS_

/** Link to Cortex M0 ROM Table. @multiple */
#define ROMTABLE_ROMTABLE_ADDR_ADDR                  0x00000000
#define ROMTABLE_ROMTABLE_ADDR_MASK                  0xfffff003
/** Entry present @multiple */
  #define ROMTABLE_ROMTABLE_ADDR_PRESENT           0x00000001
/** ROM Table format: @multiple */
  #define ROMTABLE_ROMTABLE_ADDR_FORMAT_32BIT(v)   ((ROMTABLE_ROMTABLE_ADDR_FORMAT_32BIT_##v) << 1)
  #define ROMTABLE_ROMTABLE_ADDR_FORMAT_32BIT_SET(x, v) do { (x) = (((x) & ~0x2) | ((ROMTABLE_ROMTABLE_ADDR_FORMAT_32BIT_##v) << 1)); } while(0)
  #define ROMTABLE_ROMTABLE_ADDR_FORMAT_32BIT_SETVAL(x, v) do { (x) = (((x) & ~0x2) | ((v) << 1)); } while(0)
  #define ROMTABLE_ROMTABLE_ADDR_FORMAT_32BIT_GET(x) (((x) >> 1) & 0x1)
    #define ROMTABLE_ROMTABLE_ADDR_FORMAT_32BIT_8_BIT_FORMAT 0x00000000
    #define ROMTABLE_ROMTABLE_ADDR_FORMAT_32BIT_32_BIT_FORMAT 0x00000001
/** Address offset of the Cortex-M0 ROM Table base address (0xe00ff000) wrt.
   Cypress chip specific ROM Table base address (0xf0000000). ADDR_OFFSET[19:0] =
   0xe00f000f - 0xf0000000 = 0xf00f000f. @multiple */
  #define ROMTABLE_ROMTABLE_ADDR_ADDR_OFFSET(v)    ((v) << 12)
  #define ROMTABLE_ROMTABLE_ADDR_ADDR_OFFSET_SET(x, v) do { (x) = (((x) & ~0xfffff000) | ((v) << 12)); } while(0)
  #define ROMTABLE_ROMTABLE_ADDR_ADDR_OFFSET_GET(x) (((x) >> 12) & 0xfffff)

#define ROMTABLE_ROMTABLE_DID_ADDR                   0x00000fcc
#define ROMTABLE_ROMTABLE_DID_MASK                   0x00000000

#define ROMTABLE_ROMTABLE_PID4_ADDR                  0x00000fd0
#define ROMTABLE_ROMTABLE_PID4_MASK                  0x000000ff
/** JEP106 continuation code. This value is product specific and specified as
   part of the product definition in the CPUSS.JEPCONTINUATION parameter.
   @multiple */
  #define ROMTABLE_ROMTABLE_PID4_JEP_CONTINUATION(v) ((v) << 0)
  #define ROMTABLE_ROMTABLE_PID4_JEP_CONTINUATION_SET(x, v) do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define ROMTABLE_ROMTABLE_PID4_JEP_CONTINUATION_GET(x) (((x) >> 0) & 0xf)
/** Size of ROM Table is 2^COUNT * 4 KByte. @multiple */
  #define ROMTABLE_ROMTABLE_PID4_COUNT(v)          ((v) << 4)
  #define ROMTABLE_ROMTABLE_PID4_COUNT_SET(x, v)   do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define ROMTABLE_ROMTABLE_PID4_COUNT_GET(x)      (((x) >> 4) & 0xf)

#define ROMTABLE_ROMTABLE_PID5_ADDR                  0x00000fd4
#define ROMTABLE_ROMTABLE_PID5_MASK                  0x00000000

#define ROMTABLE_ROMTABLE_PID6_ADDR                  0x00000fd8
#define ROMTABLE_ROMTABLE_PID6_MASK                  0x00000000

#define ROMTABLE_ROMTABLE_PID7_ADDR                  0x00000fdc
#define ROMTABLE_ROMTABLE_PID7_MASK                  0x00000000

#define ROMTABLE_ROMTABLE_PID0_ADDR                  0x00000fe0
#define ROMTABLE_ROMTABLE_PID0_MASK                  0x000000ff
/** JEP106 part number. 4 lsbs of CPUSS.PARTNUMBER parameter. These part numbers
   are maintained in spec 40-9500. @multiple */
  #define ROMTABLE_ROMTABLE_PID0_PN_MIN(v)         ((v) << 0)
  #define ROMTABLE_ROMTABLE_PID0_PN_MIN_SET(x, v)  do { (x) = (((x) & ~0xff) | ((v) << 0)); } while(0)
  #define ROMTABLE_ROMTABLE_PID0_PN_MIN_GET(x)     (((x) >> 0) & 0xff)

#define ROMTABLE_ROMTABLE_PID1_ADDR                  0x00000fe4
#define ROMTABLE_ROMTABLE_PID1_MASK                  0x000000ff
/** JEP106 part number. 4 msbs of CPUSS.PARTNUMBER parameter. These part numbers
   are maintained in spec 40-9500. @multiple */
  #define ROMTABLE_ROMTABLE_PID1_PN_MAJ(v)         ((v) << 0)
  #define ROMTABLE_ROMTABLE_PID1_PN_MAJ_SET(x, v)  do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define ROMTABLE_ROMTABLE_PID1_PN_MAJ_GET(x)     (((x) >> 0) & 0xf)
/** JEP106 vendor id. 4 lsbs of CPUSS.JEPID parameter. This number is maintained
   in spec 40- 9500. @multiple */
  #define ROMTABLE_ROMTABLE_PID1_JEPID_MIN(v)      ((v) << 4)
  #define ROMTABLE_ROMTABLE_PID1_JEPID_MIN_SET(x, v) do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define ROMTABLE_ROMTABLE_PID1_JEPID_MIN_GET(x)  (((x) >> 4) & 0xf)

#define ROMTABLE_ROMTABLE_PID2_ADDR                  0x00000fe8
#define ROMTABLE_ROMTABLE_PID2_MASK                  0x000000f7
/** JEP106 vendor id. 4 msbs of CPUSS.JEPID parameter. This number is maintained
   in spec 40- 9500. @multiple */
  #define ROMTABLE_ROMTABLE_PID2_JEPID_MAJ(v)      ((v) << 0)
  #define ROMTABLE_ROMTABLE_PID2_JEPID_MAJ_SET(x, v) do { (x) = (((x) & ~0x7) | ((v) << 0)); } while(0)
  #define ROMTABLE_ROMTABLE_PID2_JEPID_MAJ_GET(x)  (((x) >> 0) & 0x7)
/** Major REVision number (chip specific). Identifies the design iteration of the
   component. For first tape out: 0x1. This field is implemented in RTL by an
   ECO-able tie-off structure and is increment- ed on subsequent tape outs.
   @multiple */
  #define ROMTABLE_ROMTABLE_PID2_REV(v)            ((v) << 4)
  #define ROMTABLE_ROMTABLE_PID2_REV_SET(x, v)     do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define ROMTABLE_ROMTABLE_PID2_REV_GET(x)        (((x) >> 4) & 0xf)

#define ROMTABLE_ROMTABLE_PID3_ADDR                  0x00000fec
#define ROMTABLE_ROMTABLE_PID3_MASK                  0x000000ff
/** Customer modified field. This field is used to track modifications to the
   original component design as a result of componenet IP reuse. @multiple */
  #define ROMTABLE_ROMTABLE_PID3_CM(v)             ((v) << 0)
  #define ROMTABLE_ROMTABLE_PID3_CM_SET(x, v)      do { (x) = (((x) & ~0xf) | ((v) << 0)); } while(0)
  #define ROMTABLE_ROMTABLE_PID3_CM_GET(x)         (((x) >> 0) & 0xf)
/** Minor REVision number (chip specific). For first tape out: 0x1. This field is
   implemented in RTL by an ECO-able tie-off structure and is incremented on
   subsequent tape outs. @multiple */
  #define ROMTABLE_ROMTABLE_PID3_REV_AND(v)        ((v) << 4)
  #define ROMTABLE_ROMTABLE_PID3_REV_AND_SET(x, v) do { (x) = (((x) & ~0xf0) | ((v) << 4)); } while(0)
  #define ROMTABLE_ROMTABLE_PID3_REV_AND_GET(x)    (((x) >> 4) & 0xf)

#define ROMTABLE_ROMTABLE_CID0_ADDR                  0x00000ff0
#define ROMTABLE_ROMTABLE_CID0_MASK                  0xffffffff
/** Component identification byte 0 of 4-byte component identification
   0xB105100D. @multiple */
  #define ROMTABLE_ROMTABLE_CID0_VALUE(v)          ((v) << 0)
  #define ROMTABLE_ROMTABLE_CID0_VALUE_SET(x, v)   do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define ROMTABLE_ROMTABLE_CID0_VALUE_GET(x)      (((x) >> 0) & 0xffffffff)

#define ROMTABLE_ROMTABLE_CID1_ADDR                  0x00000ff4
#define ROMTABLE_ROMTABLE_CID1_MASK                  0xffffffff
/** Component identification byte 1 of 4-byte component identification
   0xB105100D. Component class: "ROM Table". @multiple */
  #define ROMTABLE_ROMTABLE_CID1_VALUE(v)          ((v) << 0)
  #define ROMTABLE_ROMTABLE_CID1_VALUE_SET(x, v)   do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define ROMTABLE_ROMTABLE_CID1_VALUE_GET(x)      (((x) >> 0) & 0xffffffff)

#define ROMTABLE_ROMTABLE_CID2_ADDR                  0x00000ff8
#define ROMTABLE_ROMTABLE_CID2_MASK                  0xffffffff
/** Component identification byte 2 of 4-byte component identification
   0xB105100D. @multiple */
  #define ROMTABLE_ROMTABLE_CID2_VALUE(v)          ((v) << 0)
  #define ROMTABLE_ROMTABLE_CID2_VALUE_SET(x, v)   do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define ROMTABLE_ROMTABLE_CID2_VALUE_GET(x)      (((x) >> 0) & 0xffffffff)

#define ROMTABLE_ROMTABLE_CID3_ADDR                  0x00000ffc
#define ROMTABLE_ROMTABLE_CID3_MASK                  0xffffffff
/** Component identification byte 3 of 4-byte component identification
   0xB105100D. @multiple */
  #define ROMTABLE_ROMTABLE_CID3_VALUE(v)          ((v) << 0)
  #define ROMTABLE_ROMTABLE_CID3_VALUE_SET(x, v)   do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define ROMTABLE_ROMTABLE_CID3_VALUE_GET(x)      (((x) >> 0) & 0xffffffff)

#endif

