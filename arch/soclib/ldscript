
dsx_segment_icu_start = 0x20200000;
dsx_segment_icu_end = 0x20200020;
dsx_segment_tty_start = 0x00200000;
dsx_segment_tty_end = 0x00200010;
dsx_segment_data_uncached_start = 0xe0100000;
dsx_segment_data_uncached_end = 0xe0200000;
dsx_segment_data_cached_start = 0xc0100000;
dsx_segment_data_cached_end = 0xc0200000;
dsx_segment_code_start = 0x60100000;
dsx_segment_code_end = 0x60200000;
dsx_segment_reset_start = 0xbfc00000;
dsx_segment_reset_end = 0xbfd00000;
dsx_segment_excep_start = 0x80000080;
dsx_segment_excep_end = 0x80100000;
dsx_segment_sem_start = 0x40200000;
dsx_segment_sem_end = 0x40300000;

/*
PHDRS
{
  boot PT_LOAD ;
  excep PT_LOAD ;
  mem PT_LOAD ;
}
*/

SECTIONS
   {
	. = dsx_segment_reset_start;
	.boot : { *(.boot*) }/* : boot*/

	. = dsx_segment_excep_start;
	.excep : { *(.excep*) }/* : excep*/

	. = dsx_segment_code_start;
	.text : { *(.text*) }/* : mem*/

	. = dsx_segment_data_uncached_start;

	. = ALIGN(16);
	_gp = . + 0x7ff0;	/* global data register pointer */

	.sdata : { *(.sdata*) }
	.sbss :	 { *(.sbss*) }

	.bss :	 { *(.bss*) }

	.data :
		{
			/* global variables and const data section */
			*(.data*)
			*(.rodata*)

			/* data depending on cpu architecture (fonction pointer variables, ...) */
			*(.cpuarchdata*)
		}

	/* CPU local data section */
	.cpudata  0x0 : AT( LOADADDR(.data) + SIZEOF(.data) )
		{
			*(.cpudata*)
		}

	__cpu_data_start = LOADADDR(.cpudata);
	__cpu_data_end = LOADADDR(.cpudata) + SIZEOF(.cpudata);

	/* Task local data section */
 	.contextdata 0x0 : AT( __cpu_data_end )
		{
			*(.contextdata*)
		}

	__context_data_start = LOADADDR(.contextdata);
	__context_data_end = LOADADDR(.contextdata) + SIZEOF(.contextdata);

	__system_uncached_heap_start = __context_data_end;
	__system_uncached_heap_end = dsx_segment_data_uncached_end;

	__system_cached_heap_start = dsx_segment_data_cached_start;
	__system_cached_heap_end = dsx_segment_data_cached_end;

	__ramlock_base_start = dsx_segment_sem_start;
   }

ENTRY(cpu_boot)

