/*
    This file is part of MutekH.

    MutekH is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation; version 2.1 of the
    License.

    MutekH is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this program.  If not, see
    <http://www.gnu.org/licenses/>.

    Copyright Vincent DEFILIPPI <vincentdefilippi@gmail.com> (c) 2016
    Copyright (c) 2017, Nicolas Pouillon <nipo@ssji.net>
*/

.custom i2c
.name hts221_i2c

#include <device/class/i2c.h>
#include "hts221.h"

.global %7 conv_time
.global %8 buffer

#define REG_SET(tmp, reg, value) \
    cst16       tmp,   ((value) << 8) | (reg), 0 ;\
    pack16le    tmp,   1,  2 ;\
    i2c_wrr     tmp,   2,  STOP

#define REG_RDM(dst, tmp, reg, count) \
    cst8        tmp,   (reg) | HTS221_AUTO_INC_ADDR ;\
    pack8       tmp,   1 ;\
    i2c_wrr     tmp,   1,  RESTART ;\
    i2c_rdr     dst,   count, STOP

#define REG_GET(dst, reg) \
    cst8        dst,   (reg) ;\
    pack8       dst,   1 ;\
    i2c_wrr     dst,   1,  RESTART ;\
    i2c_rdr     dst,   1, STOP ;\
    unpack8     dst,   1

.func hts221_bc_initialize
    .export hts221_bc_initialize
    .clobber %0, %1, %9, %10, %11

    REG_GET(%0, HTS221_REG_WHO_AM_I)
    cst8 %1, 0xbc
    neq %0, %1
     abort

    REG_SET(%0, HTS221_REG_CTRL_REG1, 0x84)
    REG_RDM(%buffer, %0, HTS221_REG_CALIB, HTS221_REG_CALIB_COUNT)
    REG_SET(%0, HTS221_REG_CTRL_REG1, 0x04)

    end
.endfunc

.func hts221_bc_read
    .export hts221_bc_read
    .clobber %0

    REG_SET(%0, HTS221_REG_CTRL_REG1, 0x87)
    REG_SET(%0, HTS221_REG_AV_CONF,   0x1b)
    REG_SET(%0, HTS221_REG_CTRL_REG3, 0x00)
    REG_SET(%0, HTS221_REG_CTRL_REG2, 0x01)

wait_conv:
    i2c_yield_delay %conv_time
    REG_GET(%0, HTS221_REG_STATUS_REG)

    tst32c      %0,   0
     jmp8        wait_conv

    tst32c      %0,   1
     jmp8        wait_conv

    REG_RDM(%buffer, %0, HTS221_REG_HUMIDITY_OUT_L, HTS221_REG_CONV_COUNT)
    REG_SET(%0, HTS221_REG_CTRL_REG1, 0x00)

    end

.endfunc
