/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs -I dwc_eth_10_100_mac.bf                                     \
     -O /Users/nipo/projects/mutekh/drivers/net/dwc10100/dwc10100_mac.h
*/

#ifndef _DWC_MAC_BFGEN_DEFS_
#define _DWC_MAC_BFGEN_DEFS_

/** Ethernet MAC configuration register (ETH_MACCR) @multiple */
#define DWC_MAC_CR_ADDR                              0x00000000
/** Receiver enable @multiple */
  #define DWC_MAC_CR_RE                            0x00000004
/** Transmitter enable @multiple */
  #define DWC_MAC_CR_TE                            0x00000008
/** Deferral check @multiple */
  #define DWC_MAC_CR_DC                            0x00000010
/** Back-off limit @multiple */
  #define DWC_MAC_CR_BL(v)                         ((v) << 5)
  #define DWC_MAC_CR_BL_SET(x, v)                  do { (x) = (((x) & ~0x60) | ((v) << 5)); } while(0)
  #define DWC_MAC_CR_BL_GET(x)                     (((x) >> 5) & 0x3)
/** Automatic pad/CRC stripping @multiple */
  #define DWC_MAC_CR_APCS                          0x00000080
/** Retry disable @multiple */
  #define DWC_MAC_CR_RD                            0x00000200
/** IPv4 checksum offload @multiple */
  #define DWC_MAC_CR_IPCO                          0x00000400
/** Duplex mode @multiple */
  #define DWC_MAC_CR_DM                            0x00000800
/** Loopback mode @multiple */
  #define DWC_MAC_CR_LM                            0x00001000
/** Receive own disable @multiple */
  #define DWC_MAC_CR_ROD                           0x00002000
/** Fast Ethernet speed @multiple */
  #define DWC_MAC_CR_FES                           0x00004000
/** Carrier sense disable @multiple */
  #define DWC_MAC_CR_CSD                           0x00010000
/** Interframe gap @multiple */
  #define DWC_MAC_CR_IFG(v)                        ((v) << 17)
  #define DWC_MAC_CR_IFG_SET(x, v)                 do { (x) = (((x) & ~0xe0000) | ((v) << 17)); } while(0)
  #define DWC_MAC_CR_IFG_GET(x)                    (((x) >> 17) & 0x7)
/** Jabber disable @multiple */
  #define DWC_MAC_CR_JD                            0x00400000
/** Watchdog disable @multiple */
  #define DWC_MAC_CR_WD                            0x00800000

/** Ethernet MAC frame filter register (ETH_MACCFFR) @multiple */
#define DWC_MAC_FFR_ADDR                             0x00000004
/** Promiscuous mode @multiple */
  #define DWC_MAC_FFR_PM                           0x00000001
/** Hash unicast @multiple */
  #define DWC_MAC_FFR_HU                           0x00000002
/** Hash multicast @multiple */
  #define DWC_MAC_FFR_HM                           0x00000004
/** Destination address inverse filtering @multiple */
  #define DWC_MAC_FFR_DAIF                         0x00000008
/** Pass all multicast @multiple */
  #define DWC_MAC_FFR_PAM                          0x00000010
/** Broadcast frames disable @multiple */
  #define DWC_MAC_FFR_BFD                          0x00000020
/** Pass control frames @multiple */
  #define DWC_MAC_FFR_PCF(v)                       ((v) << 6)
  #define DWC_MAC_FFR_PCF_SET(x, v)                do { (x) = (((x) & ~0xc0) | ((v) << 6)); } while(0)
  #define DWC_MAC_FFR_PCF_GET(x)                   (((x) >> 6) & 0x3)
/** Source address inverse filtering @multiple */
  #define DWC_MAC_FFR_SAIF                         0x00000100
/** Source address filter @multiple */
  #define DWC_MAC_FFR_SAF                          0x00000200
/** Hash or perfect filter @multiple */
  #define DWC_MAC_FFR_HPF                          0x00000400
/** Receive all @multiple */
  #define DWC_MAC_FFR_RA                           0x80000000

/** Ethernet MAC hash table high register @multiple */
#define DWC_MAC_HTHR_ADDR                            0x00000008
/** Hash table high @multiple */
  #define DWC_MAC_HTHR_HTH(v)                      ((v) << 0)
  #define DWC_MAC_HTHR_HTH_SET(x, v)               do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define DWC_MAC_HTHR_HTH_GET(x)                  (((x) >> 0) & 0xffffffff)

/** Ethernet MAC hash table low register @multiple */
#define DWC_MAC_HTLR_ADDR                            0x0000000c
/** Hash table low @multiple */
  #define DWC_MAC_HTLR_HTL(v)                      ((v) << 0)
  #define DWC_MAC_HTLR_HTL_SET(x, v)               do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define DWC_MAC_HTLR_HTL_GET(x)                  (((x) >> 0) & 0xffffffff)

/** Ethernet MAC MII address register (ETH_MACMIIAR) @multiple */
#define DWC_MAC_MIIAR_ADDR                           0x00000010
/** MII busy @multiple */
  #define DWC_MAC_MIIAR_MB                         0x00000001
/** MII write @multiple */
  #define DWC_MAC_MIIAR_MW                         0x00000002
/** Clock range @multiple */
  #define DWC_MAC_MIIAR_CR(v)                      ((v) << 2)
  #define DWC_MAC_MIIAR_CR_SET(x, v)               do { (x) = (((x) & ~0x1c) | ((v) << 2)); } while(0)
  #define DWC_MAC_MIIAR_CR_GET(x)                  (((x) >> 2) & 0x7)
/** MII register @multiple */
  #define DWC_MAC_MIIAR_MR(v)                      ((v) << 6)
  #define DWC_MAC_MIIAR_MR_SET(x, v)               do { (x) = (((x) & ~0x7c0) | ((v) << 6)); } while(0)
  #define DWC_MAC_MIIAR_MR_GET(x)                  (((x) >> 6) & 0x1f)
/** PHY address @multiple */
  #define DWC_MAC_MIIAR_PA(v)                      ((v) << 11)
  #define DWC_MAC_MIIAR_PA_SET(x, v)               do { (x) = (((x) & ~0xf800) | ((v) << 11)); } while(0)
  #define DWC_MAC_MIIAR_PA_GET(x)                  (((x) >> 11) & 0x1f)

/** Ethernet MAC MII data register (ETH_MACMIIDR) @multiple */
#define DWC_MAC_MIIDR_ADDR                           0x00000014
/** MII data @multiple */
  #define DWC_MAC_MIIDR_MD(v)                      ((v) << 0)
  #define DWC_MAC_MIIDR_MD_SET(x, v)               do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define DWC_MAC_MIIDR_MD_GET(x)                  (((x) >> 0) & 0xffff)

/** Ethernet MAC flow control register (ETH_MACFCR) @multiple */
#define DWC_MAC_FCR_ADDR                             0x00000018
/** Flow control busy/back pressure activate @multiple */
  #define DWC_MAC_FCR_FCB_BPA                      0x00000001
/** Transmit flow control enable @multiple */
  #define DWC_MAC_FCR_TFCE                         0x00000002
/** Receive flow control enable @multiple */
  #define DWC_MAC_FCR_RFCE                         0x00000004
/** Unicast pause frame detect @multiple */
  #define DWC_MAC_FCR_UPFD                         0x00000008
/** Pause low threshold @multiple */
  #define DWC_MAC_FCR_PLT(v)                       ((v) << 4)
  #define DWC_MAC_FCR_PLT_SET(x, v)                do { (x) = (((x) & ~0x30) | ((v) << 4)); } while(0)
  #define DWC_MAC_FCR_PLT_GET(x)                   (((x) >> 4) & 0x3)
/** Zero-quanta pause disable @multiple */
  #define DWC_MAC_FCR_ZQPD                         0x00000080
/** Pass control frames @multiple */
  #define DWC_MAC_FCR_PT(v)                        ((v) << 16)
  #define DWC_MAC_FCR_PT_SET(x, v)                 do { (x) = (((x) & ~0xffff0000) | ((v) << 16)); } while(0)
  #define DWC_MAC_FCR_PT_GET(x)                    (((x) >> 16) & 0xffff)

/** Ethernet MAC VLAN tag register (ETH_MACVLANTR) @multiple */
#define DWC_MAC_VLANTR_ADDR                          0x0000001c
/** VLAN tag identifier (for receive frames) @multiple */
  #define DWC_MAC_VLANTR_VLANTI(v)                 ((v) << 0)
  #define DWC_MAC_VLANTR_VLANTI_SET(x, v)          do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define DWC_MAC_VLANTR_VLANTI_GET(x)             (((x) >> 0) & 0xffff)
/** 12-bit VLAN tag comparison @multiple */
  #define DWC_MAC_VLANTR_VLANTC                    0x00010000

/** Ethernet MAC remote wakeup frame filter register (ETH_MACRWUFFR) @multiple */
#define DWC_MAC_RWUFFR_ADDR                          0x00000028

/** Ethernet MAC PMT control and status register (ETH_MACPMTCSR) @multiple */
#define DWC_MAC_PMTCSR_ADDR                          0x0000002c
/** Power down @multiple */
  #define DWC_MAC_PMTCSR_PD                        0x00000001
/** Magic Packet enable @multiple */
  #define DWC_MAC_PMTCSR_MPE                       0x00000002
/** Wakeup frame enable @multiple */
  #define DWC_MAC_PMTCSR_WFE                       0x00000004
/** Magic packet received @multiple */
  #define DWC_MAC_PMTCSR_MPR                       0x00000020
/** Wakeup frame received @multiple */
  #define DWC_MAC_PMTCSR_WFR                       0x00000040
/** Global unicast @multiple */
  #define DWC_MAC_PMTCSR_GU                        0x00000200
/** Wakeup frame filter register pointer reset @multiple */
  #define DWC_MAC_PMTCSR_WFFRPR                    0x80000000

/** Ethernet MAC interrupt status register (ETH_MACSR) @multiple */
#define DWC_MAC_SR_ADDR                              0x00000038
/** PMT status @multiple */
  #define DWC_MAC_SR_PMTS                          0x00000008
/** MMC status @multiple */
  #define DWC_MAC_SR_MMCS                          0x00000010
/** MMC receive status @multiple */
  #define DWC_MAC_SR_MMCRS                         0x00000020
/** MMC transmit status @multiple */
  #define DWC_MAC_SR_MMCTS                         0x00000040
/** Time stamp trigger status @multiple */
  #define DWC_MAC_SR_TSTS                          0x00000200

/** Ethernet MAC interrupt mask register (ETH_MACIMR) @multiple */
#define DWC_MAC_IMR_ADDR                             0x0000003c
/** PMT interrupt mask @multiple */
  #define DWC_MAC_IMR_PMTIM                        0x00000008
/** Time stamp trigger interrupt mask @multiple */
  #define DWC_MAC_IMR_TSTIM                        0x00000200

/** Ethernet MAC address 0 high register (ETH_MACA0HR) @multiple */
#define DWC_MAC_A0HR_ADDR                            0x00000040
/** MAC address0 high @multiple */
  #define DWC_MAC_A0HR_MACA0H(v)                   ((v) << 0)
  #define DWC_MAC_A0HR_MACA0H_SET(x, v)            do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define DWC_MAC_A0HR_MACA0H_GET(x)               (((x) >> 0) & 0xffff)
/** Always 1 @multiple */
  #define DWC_MAC_A0HR_MO                          0x80000000

/** Ethernet MAC address 0 low register @multiple */
#define DWC_MAC_A0LR_ADDR                            0x00000044
/** MAC address0 low @multiple */
  #define DWC_MAC_A0LR_MACA0L(v)                   ((v) << 0)
  #define DWC_MAC_A0LR_MACA0L_SET(x, v)            do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define DWC_MAC_A0LR_MACA0L_GET(x)               (((x) >> 0) & 0xffffffff)

/** Ethernet MAC address 1 high register (ETH_MACA1HR) @multiple */
#define DWC_MAC_A1HR_ADDR                            0x00000048
/** MAC address1 high @multiple */
  #define DWC_MAC_A1HR_MACA1H(v)                   ((v) << 0)
  #define DWC_MAC_A1HR_MACA1H_SET(x, v)            do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define DWC_MAC_A1HR_MACA1H_GET(x)               (((x) >> 0) & 0xffff)
/** Mask byte control @multiple */
  #define DWC_MAC_A1HR_MBC(v)                      ((v) << 24)
  #define DWC_MAC_A1HR_MBC_SET(x, v)               do { (x) = (((x) & ~0x3f000000) | ((v) << 24)); } while(0)
  #define DWC_MAC_A1HR_MBC_GET(x)                  (((x) >> 24) & 0x3f)
/** Source address @multiple */
  #define DWC_MAC_A1HR_SA                          0x40000000
/** Address enable @multiple */
  #define DWC_MAC_A1HR_AE                          0x80000000

/** Ethernet MAC address1 low register @multiple */
#define DWC_MAC_A1LR_ADDR                            0x0000004c
/** MAC address1 low @multiple */
  #define DWC_MAC_A1LR_MACA1L(v)                   ((v) << 0)
  #define DWC_MAC_A1LR_MACA1L_SET(x, v)            do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define DWC_MAC_A1LR_MACA1L_GET(x)               (((x) >> 0) & 0xffffffff)

/** Ethernet MAC address 2 high register (ETH_MACA2HR) @multiple */
#define DWC_MAC_A2HR_ADDR                            0x00000050
/** Ethernet MAC address 2 high register @multiple */
  #define DWC_MAC_A2HR_ETH_MACA2HR(v)              ((v) << 0)
  #define DWC_MAC_A2HR_ETH_MACA2HR_SET(x, v)       do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define DWC_MAC_A2HR_ETH_MACA2HR_GET(x)          (((x) >> 0) & 0xffff)
/** Mask byte control @multiple */
  #define DWC_MAC_A2HR_MBC(v)                      ((v) << 24)
  #define DWC_MAC_A2HR_MBC_SET(x, v)               do { (x) = (((x) & ~0x3f000000) | ((v) << 24)); } while(0)
  #define DWC_MAC_A2HR_MBC_GET(x)                  (((x) >> 24) & 0x3f)
/** Source address @multiple */
  #define DWC_MAC_A2HR_SA                          0x40000000
/** Address enable @multiple */
  #define DWC_MAC_A2HR_AE                          0x80000000

/** Ethernet MAC address 2 low register @multiple */
#define DWC_MAC_A2LR_ADDR                            0x00000054
/** MAC address2 low @multiple */
  #define DWC_MAC_A2LR_MACA2L(v)                   ((v) << 0)
  #define DWC_MAC_A2LR_MACA2L_SET(x, v)            do { (x) = (((x) & ~0x7fffffff) | ((v) << 0)); } while(0)
  #define DWC_MAC_A2LR_MACA2L_GET(x)               (((x) >> 0) & 0x7fffffff)

/** Ethernet MAC address 3 high register (ETH_MACA3HR) @multiple */
#define DWC_MAC_A3HR_ADDR                            0x00000058
/** MAC address3 high @multiple */
  #define DWC_MAC_A3HR_MACA3H(v)                   ((v) << 0)
  #define DWC_MAC_A3HR_MACA3H_SET(x, v)            do { (x) = (((x) & ~0xffff) | ((v) << 0)); } while(0)
  #define DWC_MAC_A3HR_MACA3H_GET(x)               (((x) >> 0) & 0xffff)
/** Mask byte control @multiple */
  #define DWC_MAC_A3HR_MBC(v)                      ((v) << 24)
  #define DWC_MAC_A3HR_MBC_SET(x, v)               do { (x) = (((x) & ~0x3f000000) | ((v) << 24)); } while(0)
  #define DWC_MAC_A3HR_MBC_GET(x)                  (((x) >> 24) & 0x3f)
/** Source address @multiple */
  #define DWC_MAC_A3HR_SA                          0x40000000
/** Address enable @multiple */
  #define DWC_MAC_A3HR_AE                          0x80000000

/** Ethernet MAC address 3 low register @multiple */
#define DWC_MAC_A3LR_ADDR                            0x0000005c
/** MAC address3 low @multiple */
  #define DWC_MAC_A3LR_MBCA3L(v)                   ((v) << 0)
  #define DWC_MAC_A3LR_MBCA3L_SET(x, v)            do { (x) = (((x) & ~0xffffffff) | ((v) << 0)); } while(0)
  #define DWC_MAC_A3LR_MBCA3L_GET(x)               (((x) >> 0) & 0xffffffff)

#endif

