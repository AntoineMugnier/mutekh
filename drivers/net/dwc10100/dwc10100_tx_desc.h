/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs                                                              \
     -I /Users/nipo/projects/bfgen/defs/dwc/ethernet_mac_10_100/dwc_eth_10_100_tx_desc.bf \
     -O /Users/nipo/projects/mutekh/drivers/net/dwc10100/dwc10100_tx_desc.h
*/

#ifndef _DWC_TX_DESC_BFGEN_DEFS_
#define _DWC_TX_DESC_BFGEN_DEFS_

#define DWC_TX_DESC_TDES0_ADDR                       0x00000000
/** When set, this bit indicates that the MAC defers before transmission because
   of the presence of the carrier. This bit is valid only in Half-duplex mode.
   @multiple */
  #define DWC_TX_DESC_TDES0_DB                     0x00000001
/** When set, this bit indicates that the MAC aborted the frame because data
   arrived late from the RAM memory. Underflow error indicates that the DMA
   encountered an empty transmit buffer while transmitting the frame. The
   transmission process enters the Suspended state and sets both Transmit
   underflow (Register 5[5]) and Transmit interrupt (Register 5[0]). @multiple */
  #define DWC_TX_DESC_TDES0_UF                     0x00000002
/** When set, this bit indicates that the transmission has ended because of
   excessive deferral of over 24 288 bit times if the Deferral check (DC) bit in
   the MAC Control register is set high. @multiple */
  #define DWC_TX_DESC_TDES0_ED                     0x00000004
/** This 4-bit counter value indicates the number of collisions occurring before
   the frame was transmitted. The count is not valid when the Excessive
   collisions bit (TDES0[8]) is set. @multiple */
  #define DWC_TX_DESC_TDES0_CC(v)                  ((v) << 3)
  #define DWC_TX_DESC_TDES0_CC_SET(x, v)           do { (x) = (((x) & ~0x78) | ((v) << 3)); } while(0)
  #define DWC_TX_DESC_TDES0_CC_GET(x)              (((x) >> 3) & 0xf)
/** When set, this bit indicates that the transmitted frame was a VLAN-type
   frame. @multiple */
  #define DWC_TX_DESC_TDES0_VF                     0x00000080
/** When set, this bit indicates that the transmission was aborted after 16
   successive collisions while attempting to transmit the current frame. If the
   RD (Disable retry) bit in the MAC Configuration register is set, this bit is
   set after the first collision, and the transmission of the frame is aborted.
   @multiple */
  #define DWC_TX_DESC_TDES0_EC                     0x00000100
/** When set, this bit indicates that frame transmission was aborted due to a
   collision occurring after the collision window (64 byte times, including
   preamble, in MII mode). This bit is not valid if the Underflow Error bit is
   set. @multiple */
  #define DWC_TX_DESC_TDES0_LCO                    0x00000200
/** When set, this bit indicates that the Carrier Sense signal form the PHY was
   not asserted during transmission. @multiple */
  #define DWC_TX_DESC_TDES0_NC                     0x00000400
/** When set, this bit indicates that a loss of carrier occurred during frame
   transmission (that is, the MII_CRS signal was inactive for one or more
   transmit clock periods during frame transmission). This is valid only for the
   frames transmitted without collision when the MAC operates in Half-duplex
   mode. @multiple */
  #define DWC_TX_DESC_TDES0_LCA                    0x00000800
/** When set, this bit indicates that MAC transmitter detected an error in the
   TCP, UDP, or ICMP IP datagram payload. The transmitter checks the payload
   length received in the IPv4 or IPv6 header against the actual number of TCP,
   UDP or ICMP packet bytes received from the application and issues an error
   status in case of a mismatch. @multiple */
  #define DWC_TX_DESC_TDES0_IPE                    0x00001000
/** When set, this bit indicates that the DMA/MTL flushed the frame due to a
   software Flush command given by the CPU. @multiple */
  #define DWC_TX_DESC_TDES0_FF                     0x00002000
/** When set, this bit indicates the MAC transmitter has experienced a jabber
   timeout. This bit is only set when the MAC configuration registerâ€™s JD bit
   is not set. @multiple */
  #define DWC_TX_DESC_TDES0_JT                     0x00004000
/** Indicates the logical OR of the following bits: 14, 13, 11, 10, 9, 8, 2, 1,
   16, 12 @multiple */
  #define DWC_TX_DESC_TDES0_ES                     0x00008000
/** When set, this bit indicates that the MAC transmitter detected an error in
   the IP datagram header. The transmitter checks the header length in the IPv4
   packet against the number of header bytes received from the application and
   indicates an error status if there is a mismatch. For IPv6 frames, a header
   error is reported if the main header length is not 40 bytes. Furthermore, the
   Ethernet length/type field value for an IPv4 or IPv6 frame must match the IP
   header version received with the packet. For IPv4 frames, an error status is
   also indicated if the Header Length field has a value less than 0x5. @multiple
   */
  #define DWC_TX_DESC_TDES0_IHE                    0x00010000
/** This field is used as a status bit to indicate that a time stamp was captured
   for the described transmit frame. When this bit is set, TDES2 and TDES3 have a
   time stamp value captured for the transmit frame. @multiple */
  #define DWC_TX_DESC_TDES0_TTSS                   0x00020000
/** When set, this bit indicates that the second address in the descriptor is the
   next descriptor address rather than the second buffer address. @multiple */
  #define DWC_TX_DESC_TDES0_TCH                    0x00100000
/** When set, this bit indicates that the descriptor list reached its final
   descriptor. The DMA returns to the base address of the list, creating a
   descriptor ring. @multiple */
  #define DWC_TX_DESC_TDES0_TER                    0x00200000
/** These bits control the checksum calculation and insertion. @multiple */
  #define DWC_TX_DESC_TDES0_CIC(v)                 ((DWC_TX_DESC_TDES0_CIC_##v) << 22)
  #define DWC_TX_DESC_TDES0_CIC_SET(x, v)          do { (x) = (((x) & ~0xc00000) | ((DWC_TX_DESC_TDES0_CIC_##v) << 22)); } while(0)
  #define DWC_TX_DESC_TDES0_CIC_GET(x)             (((x) >> 22) & 0x3)
    #define DWC_TX_DESC_TDES0_CIC_DISABLED           0x00000000
/** Only IP header checksum calculation and insertion are enabled */
    #define DWC_TX_DESC_TDES0_CIC_IP                 0x00000001
/** IP header checksum and payload checksum calculation and insertion are enabled, but pseudo-header checksum is not calculated in hardware */
    #define DWC_TX_DESC_TDES0_CIC_PAYLOAD            0x00000002
/** IP Header checksum and payload checksum calculation and insertion are enabled, and pseudo-header checksum is calculated in hardware. */
    #define DWC_TX_DESC_TDES0_CIC_ALL                0x00000003
/** When TTSE is set and when TSE is set, IEEE1588 hardware time stamping is
   activated for the transmit frame @multiple */
  #define DWC_TX_DESC_TDES0_TTSE                   0x02000000
/** When set, the MAC does not automatically add padding to a frame shorter than
   64 bytes. @multiple */
  #define DWC_TX_DESC_TDES0_DP                     0x04000000
/** When this bit is set, the MAC does not append a cyclic redundancy check.
   @multiple */
  #define DWC_TX_DESC_TDES0_DC                     0x08000000
/** When set, this bit indicates that the buffer contains the first segment of a
   frame. @multiple */
  #define DWC_TX_DESC_TDES0_FS                     0x10000000
/** When set, this bit indicates that the buffer contains the last segment of the
   frame. @multiple */
  #define DWC_TX_DESC_TDES0_LS                     0x20000000
/** When set, DMA sets the Transmit Interrupt after the present frame has been
   transmitted. @multiple */
  #define DWC_TX_DESC_TDES0_IC                     0x40000000
/** When set, this bit indicates that the descriptor is owned by the DMA.
   @multiple */
  #define DWC_TX_DESC_TDES0_OWN                    0x80000000

#define DWC_TX_DESC_TDES1_ADDR                       0x00000004
/** These bits indicate the second data buffer size in bytes. @multiple */
  #define DWC_TX_DESC_TDES1_TBS_COUNT              2
  #define DWC_TX_DESC_TDES1_TBS(fidx, v)           ((v) << ((fidx) * 16 + 0))
  #define DWC_TX_DESC_TDES1_TBS_SET(fidx, x, v)    do { (x) = (((x) & ~(0x1fff << ((fidx) * 16))) | ((v) << ((fidx) * 16 + 0))); } while(0)
  #define DWC_TX_DESC_TDES1_TBS_GET(fidx, x)       (((x) >> ((fidx) * 16 + 0)) & 0x1fff)

#define DWC_TX_DESC_TBAP_ADDR(ridx)                  (0x00000008 + (ridx) * 4)
#define DWC_TX_DESC_TBAP_COUNT                       2

#endif

