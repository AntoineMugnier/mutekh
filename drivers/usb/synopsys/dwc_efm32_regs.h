/***************************************
* Auto generated by BFGen, do not edit *
***************************************/

/*
   bfgen -o cdefs -O dwc_efm32_regs.h cdefs_use_reg_mask=1                     \
     cdefs_use_field_setval=1 -I efm32_usb.bf                                  \
     cdefs_use_field_shift=1 cdefs_use_field_shifted_mask=1                    \
     cdefs_sfx_field_shifter=_SHIFT_VAL
*/

#ifndef _EFM32_USB_BFGEN_DEFS_
#define _EFM32_USB_BFGEN_DEFS_

#define EFM32_USB_CTRL_ADDR                          0x00000000
#define EFM32_USB_CTRL_MASK                          0x03330003
/** Use this bit to select the active polarity of the USB_VBUSEN pin. @multiple
   */
  #define EFM32_USB_CTRL_VBUSENAP                  0x00000001
  #define EFM32_USB_CTRL_VBUSENAP_SHIFT            0
  #define EFM32_USB_CTRL_VBUSENAP_SHIFT_VAL(v)     ((EFM32_USB_CTRL_VBUSENAP_##v) << 0)
  #define EFM32_USB_CTRL_VBUSENAP_SET(x, v)        do { (x) = (((x) & ~0x1) | ((EFM32_USB_CTRL_VBUSENAP_##v) << 0)); } while(0)
  #define EFM32_USB_CTRL_VBUSENAP_SETVAL(x, v)     do { (x) = (((x) & ~0x1) | ((v) << 0)); } while(0)
  #define EFM32_USB_CTRL_VBUSENAP_GET(x)           (((x) >> 0) & 0x1)
    #define EFM32_USB_CTRL_VBUSENAP_LOW              0x00000000
    #define EFM32_USB_CTRL_VBUSENAP_HIGH             0x00000001
/** Use this bit to select the active polarity of the USB_DMPU pin. @multiple */
  #define EFM32_USB_CTRL_DMPUAP                    0x00000002
  #define EFM32_USB_CTRL_DMPUAP_SHIFT              1
  #define EFM32_USB_CTRL_DMPUAP_SHIFT_VAL(v)       ((EFM32_USB_CTRL_DMPUAP_##v) << 1)
  #define EFM32_USB_CTRL_DMPUAP_SET(x, v)          do { (x) = (((x) & ~0x2) | ((EFM32_USB_CTRL_DMPUAP_##v) << 1)); } while(0)
  #define EFM32_USB_CTRL_DMPUAP_SETVAL(x, v)       do { (x) = (((x) & ~0x2) | ((v) << 1)); } while(0)
  #define EFM32_USB_CTRL_DMPUAP_GET(x)             (((x) >> 1) & 0x1)
    #define EFM32_USB_CTRL_DMPUAP_LOW                0x00000000
    #define EFM32_USB_CTRL_DMPUAP_HIGH               0x00000001
/** Set this bit to disable the voltage regulator. @multiple */
  #define EFM32_USB_CTRL_VREGDIS                   0x00010000
  #define EFM32_USB_CTRL_VREGDIS_SHIFT             16
/** Set this bit to enable USB_VREGO voltage level sensing. @multiple */
  #define EFM32_USB_CTRL_VREGOSEN                  0x00020000
  #define EFM32_USB_CTRL_VREGOSEN_SHIFT            17
/** Regulator bias current setting in EM0/1 (i.e. while USB active). @multiple */
  #define EFM32_USB_CTRL_BIASPROGEM01              0x00300000
  #define EFM32_USB_CTRL_BIASPROGEM01_SHIFT        20
  #define EFM32_USB_CTRL_BIASPROGEM01_SHIFT_VAL(v) ((v) << 20)
  #define EFM32_USB_CTRL_BIASPROGEM01_SET(x, v)    do { (x) = (((x) & ~0x300000) | ((v) << 20)); } while(0)
  #define EFM32_USB_CTRL_BIASPROGEM01_GET(x)       (((x) >> 20) & 0x3)
/** Regulator bias current setting in EM2/3 (i.e. while USB in suspend).
   @multiple */
  #define EFM32_USB_CTRL_BIASPROGEM23              0x03000000
  #define EFM32_USB_CTRL_BIASPROGEM23_SHIFT        24
  #define EFM32_USB_CTRL_BIASPROGEM23_SHIFT_VAL(v) ((v) << 24)
  #define EFM32_USB_CTRL_BIASPROGEM23_SET(x, v)    do { (x) = (((x) & ~0x3000000) | ((v) << 24)); } while(0)
  #define EFM32_USB_CTRL_BIASPROGEM23_GET(x)       (((x) >> 24) & 0x3)

#define EFM32_USB_STATUS_ADDR                        0x00000004
#define EFM32_USB_STATUS_MASK                        0x00000001
/** USB_VREGO Voltage Sense output. 0 when no USB_VREGO voltage, 1 when USB_VREGO
   above approximately 1.8 V. Always 0 when VREGOSEN in USB_CTRL is 0. @multiple
   */
  #define EFM32_USB_STATUS_VREGOS                  0x00000001
  #define EFM32_USB_STATUS_VREGOS_SHIFT            0

#define EFM32_USB_IF_ADDR                            0x00000008
#define EFM32_USB_IF_MASK                            0x00000003
/** set when usb_vrego goes above approximately 1.8 v. @multiple */
  #define EFM32_USB_IF_VREGOSH                     0x00000001
  #define EFM32_USB_IF_VREGOSH_SHIFT               0
/** set when usb_vrego drops below approximately 1.8 v. @multiple */
  #define EFM32_USB_IF_VREGOSL                     0x00000002
  #define EFM32_USB_IF_VREGOSL_SHIFT               1

#define EFM32_USB_IFS_ADDR                           0x0000000c
#define EFM32_USB_IFS_MASK                           0x00000003
/** Write to 1 to set the VREGO Sense High Interrupt Flag. @multiple */
  #define EFM32_USB_IFS_VREGOSH                    0x00000001
  #define EFM32_USB_IFS_VREGOSH_SHIFT              0
/** Write to 1 to set the VREGO Sense Low Interrupt Flag. @multiple */
  #define EFM32_USB_IFS_VREGOSL                    0x00000002
  #define EFM32_USB_IFS_VREGOSL_SHIFT              1

#define EFM32_USB_IFC_ADDR                           0x00000010
#define EFM32_USB_IFC_MASK                           0x00000003
/** Write to 1 to clear the VREGO Sense High Interrupt Flag. @multiple */
  #define EFM32_USB_IFC_VREGOSH                    0x00000001
  #define EFM32_USB_IFC_VREGOSH_SHIFT              0
/** Write to 1 to clear the VREGO Sense Low Interrupt Flag. @multiple */
  #define EFM32_USB_IFC_VREGOSL                    0x00000002
  #define EFM32_USB_IFC_VREGOSL_SHIFT              1

#define EFM32_USB_IEN_ADDR                           0x00000014
#define EFM32_USB_IEN_MASK                           0x00000003
/** Enable interrupt on VREGO Sense High. @multiple */
  #define EFM32_USB_IEN_VREGOSH                    0x00000001
  #define EFM32_USB_IEN_VREGOSH_SHIFT              0
/** Enable interrupt on VREGO Sense Low. @multiple */
  #define EFM32_USB_IEN_VREGOSL                    0x00000002
  #define EFM32_USB_IEN_VREGOSL_SHIFT              1

#define EFM32_USB_ROUTE_ADDR                         0x00000018
#define EFM32_USB_ROUTE_MASK                         0x00000007
/** When set, the USB PHY and USB pins are enabled. The USB_DP and USB_DM are
   changed from regular GPIO pins to USB pins. @multiple */
  #define EFM32_USB_ROUTE_PHYPEN                   0x0000001
  #define EFM32_USB_ROUTE_PHYPEN_SHIFT             0
/** When set, the USB_VBUSEN pin is enabled. @multiple */
  #define EFM32_USB_ROUTE_VBUSENPEN                0x0000002
  #define EFM32_USB_ROUTE_VBUSENPEN_SHIFT          1
/** When set, the USB_DMPU pin is enabled. @multiple */
  #define EFM32_USB_ROUTE_DMPUPEN                  0x0000004
  #define EFM32_USB_ROUTE_DMPUPEN_SHIFT            2

#define EFM32_USB_SYNOPSYS_ADDR                      0x0003c000
#define EFM32_USB_SYNOPSYS_MASK                      0x00000000

#endif

