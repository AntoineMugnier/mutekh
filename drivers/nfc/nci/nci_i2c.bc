/*
    -*- asm -*-

    This file is part of MutekH.

    MutekH is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation; version 2.1 of the
    License.

    MutekH is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this program.  If not, see
    <http://www.gnu.org/licenses/>.

    Copyright (c) Nicolas Pouillon <nipo@ssji.net>, 2016
*/

#include <device/class/i2c.h>
#include "nci_regs.h"

.custom i2c
.name nci_i2c

.func nci_reg_write
    .export nci_reg_write
    .input %0 reg, %1 value
    .clobber %0

    pack8    %reg, 2
    i2c_wrr  %reg, 2, STOP

    end
.endfunc

.func nci_reg_read
    .export nci_reg_read
    .input %0 reg
    .output %0 value

    pack8    %reg,   1
    i2c_wrr  %reg,   1, RESTART
    i2c_rdr  %value, 1, STOP
    unpack8  %value, 1

    end
.endfunc

.func nci_reg_or
    .export nci_reg_or
    .input %0 wreg, %1 wvalue
    .clobber %0, %1, %2 rreg, %3 rvalue

    mov      %rreg,   %wreg
    pack8    %rreg,   1
    i2c_wrr  %rreg,   1, RESTART
    i2c_rdr  %rvalue, 1, STOP
    unpack8  %rvalue, 1
    or32     %wvalue, %rvalue
    pack8    %wreg,   2
    i2c_wrr  %wreg,   2, STOP

    end
.endfunc

.func nci_reg_andn
    .export nci_reg_andn
    .input %0 wreg, %1 wvalue
    .clobber %0, %1, %2 rreg, %3 rvalue

    mov      %rreg,   %wreg
    pack8    %rreg,   1
    i2c_wrr  %rreg,   1, RESTART
    i2c_rdr  %rvalue, 1, STOP
    unpack8  %rvalue, 1
    andn32   %rvalue, %wvalue
    mov      %wvalue, %rvalue
    pack8    %wreg,   2
    i2c_wrr  %wreg,   2, STOP

    end
.endfunc

.func nci_fifo_read
    .export nci_fifo_read
    .input %0 buffer, %1 count
    .clobber %2 reg

    eq0        %count
    die

    cst8       %reg, NCI_FIFODATA_ADDR
    pack8      %reg, 1
    i2c_wrr    %reg, 1, RESTART
    i2c_rdm    %buffer, %count, STOP

    end
.endfunc

.func nci_fifo_write
    .export nci_fifo_write
    .input %0 buffer, %1 count
    .clobber %2 reg

    eq0 %count
    die

    cst8       %reg, NCI_FIFODATA_ADDR
    pack8      %reg, 1
    i2c_wrr    %reg, 1, CONTINUOUS
    i2c_wrm    %buffer, %count, STOP

    end
.endfunc
