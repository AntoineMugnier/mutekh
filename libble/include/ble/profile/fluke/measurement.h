#ifndef BLE_PROFILE_FLUKE_MEASUREMENT_H_
#define BLE_PROFILE_FLUKE_MEASUREMENT_H_

#include <enums.h>
#include <hexo/enum.h>
#include <hexo/types.h>

ENUM_DESCRIPTOR(fluke_reading_state_e, strip:FLUKE_READING_STATE_, cap);

enum fluke_reading_state_e
{
  FLUKE_READING_STATE_NORMAL,
  FLUKE_READING_STATE_BLANK,
  FLUKE_READING_STATE_INACTIVE,
  FLUKE_READING_STATE_INVALID,
  FLUKE_READING_STATE_OL_RANGE,
  FLUKE_READING_STATE_OL_A2D,
  FLUKE_READING_STATE_OPEN_TC,
  FLUKE_READING_STATE_DISCHARGE,
  FLUKE_READING_STATE_LEADS,
  FLUKE_READING_STATE_GREATER_THAN,
  FLUKE_READING_STATE_MISSING_PHASE,
  FLUKE_READING_STATE_ERROR,
  FLUKE_READING_STATE_LESS_THAN,
  FLUKE_READING_STATE_EMPTY,
};

ENUM_DESCRIPTOR(fluke_reading_magnitude_e, strip:FLUKE_READING_MAGNITUDE_, cap);

enum fluke_reading_magnitude_e
{
  FLUKE_READING_MAGNITUDE_NONE,
  FLUKE_READING_MAGNITUDE_GIGA,
  FLUKE_READING_MAGNITUDE_MEGA,
  FLUKE_READING_MAGNITUDE_KILO,
  FLUKE_READING_MAGNITUDE_MILLI,
  FLUKE_READING_MAGNITUDE_MICRO,
  FLUKE_READING_MAGNITUDE_NANO,
  FLUKE_READING_MAGNITUDE_PICO,
  FLUKE_READING_MAGNITUDE_TERA,
  FLUKE_READING_MAGNITUDE_PETA,
  FLUKE_READING_MAGNITUDE_EXA,
  FLUKE_READING_MAGNITUDE_ATTO,
  FLUKE_READING_MAGNITUDE_FEMTO,
};

ENUM_DESCRIPTOR(fluke_reading_unit_e, strip:FLUKE_READING_UNIT_, cap);

enum fluke_reading_unit_e
{
  FLUKE_READING_UNIT_NONE,
  FLUKE_READING_UNIT_VAC,
  FLUKE_READING_UNIT_VDC,
  FLUKE_READING_UNIT_AAC,
  FLUKE_READING_UNIT_ADC,
  FLUKE_READING_UNIT_HZ,
  FLUKE_READING_UNIT_RH_PCT,
  FLUKE_READING_UNIT_DEGC,
  FLUKE_READING_UNIT_DEGF,
  FLUKE_READING_UNIT_DEG_RANKINE,
  FLUKE_READING_UNIT_KELVIN,
  FLUKE_READING_UNIT_OHMS,
  FLUKE_READING_UNIT_SIEMENS,
  FLUKE_READING_UNIT_DUTY_PCT,
  FLUKE_READING_UNIT_SECONDS,
  FLUKE_READING_UNIT_FARADS,
  FLUKE_READING_UNIT_DB,
  FLUKE_READING_UNIT_DBM,
  FLUKE_READING_UNIT_WATTS,
  FLUKE_READING_UNIT_JOULE,
  FLUKE_READING_UNIT_HENRY,
  FLUKE_READING_UNIT_PSI,
  FLUKE_READING_UNIT_HG_METERS,
  FLUKE_READING_UNIT_HG_INCHES,
  FLUKE_READING_UNIT_H2O_FEET,
  FLUKE_READING_UNIT_H2O_METERS,
  FLUKE_READING_UNIT_H2O_INCHES,
  FLUKE_READING_UNIT_H2O_60F_INCHES,
  FLUKE_READING_UNIT_BAR,
  FLUKE_READING_UNIT_PASCALS,
  FLUKE_READING_UNIT_G_PER_CM_SQUARED,
  FLUKE_READING_UNIT_DBV,
  FLUKE_READING_UNIT_CREST_FACTOR,
  FLUKE_READING_UNIT_VAC_PLUS_DC,
  FLUKE_READING_UNIT_AAC_PLUS_DC,
  FLUKE_READING_UNIT_PERCENT,
  FLUKE_READING_UNIT_VAC_OVER_HZ,
  FLUKE_READING_UNIT_ACCELERATION_G,
  FLUKE_READING_UNIT_ACCELERATION_MPS2,
  FLUKE_READING_UNIT_VELOCITY_IPS,
  FLUKE_READING_UNIT_VELOCITY_MMPS,
  FLUKE_READING_UNIT_DISPLACEMENT_MILS,
  FLUKE_READING_UNIT_DISPLACEMENT_MICRON,
  FLUKE_READING_UNIT_UNKNOWN,
  FLUKE_READING_UNIT_TERA_OHMS,
};

ENUM_DESCRIPTOR(fluke_reading_func_e, strip:FLUKE_READING_FUNC_, cap);

enum fluke_reading_func_e
{
  FLUKE_READING_FUNC_NONE,
  FLUKE_READING_FUNC_MVAC,
  FLUKE_READING_FUNC_VAC,
  FLUKE_READING_FUNC_VAC_PLUS_DC,
  FLUKE_READING_FUNC_MVAC_AVG,
  FLUKE_READING_FUNC_VAC_AVG,
  FLUKE_READING_FUNC_VAC_AVG_PLUS_DC,
  FLUKE_READING_FUNC_VAC_LOZ,
  FLUKE_READING_FUNC_MVAC_LOPASS,
  FLUKE_READING_FUNC_VAC_LOPASS,
  FLUKE_READING_FUNC_UVDC,
  FLUKE_READING_FUNC_MVDC,
  FLUKE_READING_FUNC_VDC,
  FLUKE_READING_FUNC_MAAC,
  FLUKE_READING_FUNC_AAC,
  FLUKE_READING_FUNC_AAC_PLUS_DC,
  FLUKE_READING_FUNC_MAAC_AVG,
  FLUKE_READING_FUNC_AAC_AVG,
  FLUKE_READING_FUNC_AAC_AVG_PLUS_DC,
  FLUKE_READING_FUNC_UADC,
  FLUKE_READING_FUNC_MADC,
  FLUKE_READING_FUNC_ADC,
  FLUKE_READING_FUNC_HZ_MVAC,
  FLUKE_READING_FUNC_HZ_VAC,
  FLUKE_READING_FUNC_HZ_MVAC_LOPASS,
  FLUKE_READING_FUNC_HZ_VAC_LOPASS,
  FLUKE_READING_FUNC_HZ_MVDC,
  FLUKE_READING_FUNC_HZ_VDC,
  FLUKE_READING_FUNC_HZ_UAAC,
  FLUKE_READING_FUNC_HZ_MAAC,
  FLUKE_READING_FUNC_HZ_AAC,
  FLUKE_READING_FUNC_HZ_UADC,
  FLUKE_READING_FUNC_HZ_MADC,
  FLUKE_READING_FUNC_HZ_ADC,
  FLUKE_READING_FUNC_TEMP,
  FLUKE_READING_FUNC_DEGF,
  FLUKE_READING_FUNC_DEGC,
  FLUKE_READING_FUNC_DEG_RANKINE,
  FLUKE_READING_FUNC_KELVIN,
  FLUKE_READING_FUNC_CONTINUITY,
  FLUKE_READING_FUNC_RESISTANCE,
  FLUKE_READING_FUNC_CONDUCTANCE,
  FLUKE_READING_FUNC_LOW_OHMS,
  FLUKE_READING_FUNC_DEGREES_PHASE,
  FLUKE_READING_FUNC_AAC_INRUSH,
  FLUKE_READING_FUNC_CAPS,
  FLUKE_READING_FUNC_DIODE,
  FLUKE_READING_FUNC_VAC_OVER_HZ,
  FLUKE_READING_FUNC_MVAC_DC,
  FLUKE_READING_FUNC_MAAC_DC,
  FLUKE_READING_FUNC_UAAC,
  FLUKE_READING_FUNC_UAAC_DC,
  FLUKE_READING_FUNC_TEST_VDC,
  FLUKE_READING_FUNC_FAULT_VAC,
  FLUKE_READING_FUNC_TOUCH_VAC_LIMIT,
  FLUKE_READING_FUNC_INSULATION,
  FLUKE_READING_FUNC_CONTINUITY_POSITIVE,
  FLUKE_READING_FUNC_CONTINUITY_NEGATIVE,
  FLUKE_READING_FUNC_CONTINUITY_AVERAGE,
  FLUKE_READING_FUNC_LOOP_TRIP,
  FLUKE_READING_FUNC_LOOP_NO_TRIP,
  FLUKE_READING_FUNC_LOOP_IMPEDANCE,
  FLUKE_READING_FUNC_LOOP_IMPEDANCE_MAX,
  FLUKE_READING_FUNC_LINE_IMPEDANCE,
  FLUKE_READING_FUNC_LINE_IMPEDANCE_MAX,
  FLUKE_READING_FUNC_RCD_TIME,
  FLUKE_READING_FUNC_RCD_TIME_AUTO,
  FLUKE_READING_FUNC_RCD_RAMP,
  FLUKE_READING_FUNC_PHASE_ROTATION,
  FLUKE_READING_FUNC_EARTH_RESISTANCE,
  FLUKE_READING_FUNC_EARTH_FAULT_CURRENT,
  FLUKE_READING_FUNC_SHORT_CIRCUIT_CURRENT,
  FLUKE_READING_FUNC_MFT_AUTO_TEST,
  FLUKE_READING_FUNC_INSULATION_SPOT_VOLTS_DETECT,
  FLUKE_READING_FUNC_INSULATION_SPOT_TEST,
  FLUKE_READING_FUNC_INSULATION_PI_VOLTS_DETECT,
  FLUKE_READING_FUNC_INSULATION_PI_TEST,
  FLUKE_READING_FUNC_INSULATION_PI_RESULT,
  FLUKE_READING_FUNC_INSULATION_DAR_VOLTS_DETECT,
  FLUKE_READING_FUNC_INSULATION_DAR_TEST,
  FLUKE_READING_FUNC_INSULATION_DAR_RESULT,
  FLUKE_READING_FUNC_1555_RAMP_VOLTS_DETECT,
  FLUKE_READING_FUNC_1555_RAMP_VOLTS_TEST,
  FLUKE_READING_FUNC_1555_DAR_CHINA_VOLTS_DETECT,
  FLUKE_READING_FUNC_1555_DAR_CHINA_VOLTS_TEST,
  FLUKE_READING_FUNC_1555_DAR_CHINA_RESULT,
  FLUKE_READING_FUNC_PRESSURE,
  FLUKE_READING_FUNC_37X_FIELD_SENSE,
};

ENUM_DESCRIPTOR(fluke_reading_attrib_rng_decade_e, strip:FLUKE_READING_ATTRIB_RNG_DECADE_, cap);

enum fluke_reading_attrib_rng_decade_e
{
  FLUKE_READING_ATTRIB_RNG_DECADE_NONE,
  FLUKE_READING_ATTRIB_RNG_DECADE_TENS,
  FLUKE_READING_ATTRIB_RNG_DECADE_HUNDREDS,
  FLUKE_READING_ATTRIB_RNG_DECADE_THOUSANDS,
  FLUKE_READING_ATTRIB_RNG_DECADE_MILLI,
  FLUKE_READING_ATTRIB_RNG_DECADE_CENTI,
  FLUKE_READING_ATTRIB_RNG_DECADE_DECI,
};

ENUM_DESCRIPTOR(fluke_reading_attrib_e, strip:FLUKE_READING_ATTRIB_, cap);

enum fluke_reading_attrib_e
{
  FLUKE_READING_ATTRIB_NONE,
  FLUKE_READING_ATTRIB_OPEN_CIRCUIT,
  FLUKE_READING_ATTRIB_SHORT_CIRCUIT,
  FLUKE_READING_ATTRIB_GLITCH_CIRCUIT,
  FLUKE_READING_ATTRIB_GOOD_DIODE,
  FLUKE_READING_ATTRIB_NEGATIVE_EDGE,
  FLUKE_READING_ATTRIB_POSITIVE_EDGE,
  FLUKE_READING_ATTRIB_HIGH_CURRENT,
  FLUKE_READING_ATTRIB_HAZARDOUS_VOLTAGE_INDICATOR,
  FLUKE_READING_ATTRIB_LOW_OHMS,
  FLUKE_READING_ATTRIB_OPEN_GLITCH_CIRCUIT,
  FLUKE_READING_ATTRIB_SHORT_GLITCH_CIRCUIT,
  FLUKE_READING_ATTRIB_PEAK,
  FLUKE_READING_ATTRIB_SOURCED,
  FLUKE_READING_ATTRIB_SIMULATED,
  FLUKE_READING_ATTRIB_NOISE,
  FLUKE_READING_BREAK_DOWN,
};

struct fluke_measurement_s
{
  enum fluke_reading_state_e reading_state;
  enum fluke_reading_magnitude_e magnitude;
  enum fluke_reading_unit_e unit;
  enum fluke_reading_func_e function;
  enum fluke_reading_attrib_rng_decade_e decade;
  enum fluke_reading_attrib_e attrib;
  int32_t value;
  uint8_t decimal_places;
  uint8_t value_range;
  bool_t capture_flag;
};

void fluke_measurement_from_blob(struct fluke_measurement_s *m,
                                 const uint8_t blob[static 8]);

void fluke_measurement_value_to_string(const struct fluke_measurement_s *m,
                                       char buffer[static 32]);

#endif
