
%config CONFIG_COMPILE_SAVETEMPS
  flags root
  desc Keep all intermediate files generated during compilation.
  desc Preprocesseced (.i) and assembler (.s) files may be usefull to solve compilation issues.
%config end

%config CONFIG_COMPILE_PIC
  flags root
  desc Generate position independant code
  default defined
%config end

%config CONFIG_COMPILE_SOFTFLOAT
  flags root
  desc Use software only floating point
  when CONFIG_HEXO_FPU!
%config end

%config CONFIG_COMPILE_COLLECT
  flags root
  desc Enable symbols garbage collection to reduce binary size
%config end

%config CONFIG_COMPILE_DEBUG
  flags root
  desc Enable compiler debug switch
%config end

%config CONFIG_COMPILE_OPTIMIZE
  desc Set compiler optimize switch value (0, 1, 2, 3, s)
  default 2
  range 0 1 2 3 s
  flags value root
%config end

%config CONFIG_COMPILE_FRAMEPTR
  flags root
  when CONFIG_COMPILE_DEBUG
  desc Compile with frame pointer register
%config end

%config CONFIG_COMPILE_INSTRUMENT
  flags root
  desc Add instrumentation calls for entry and exit to functions
%config end

%config CONFIG_COMPILE_MCPU
  flags value root
  desc Specify gcc -mcpu value to use
%config end

%config CONFIG_COMPILE_MARCH
  flags value root
  desc Specify gcc -march value to use
%config end

%config CONFIG_DEBUG
  flags root
  desc Enable debug features globaly
  suggest CONFIG_COMPILE_OPTIMIZE=0
%config end

%config CONFIG_RELEASE
  flags root
  desc Enable release build, disable all debug features
  suggest CONFIG_COMPILE_OPTIMIZE=2
  exclude CONFIG_DEBUG
  exclude CONFIG_COMPILE_DEBUG
  exclude CONFIG_LIBC_ASSERT
%config end

%config CONFIG_HET_BUILD
  flags root
  desc Heterogeneous build: The currently build kernel is part of an heterogeneous platform
  require CONFIG_HETROM_ADDR
  require CONFIG_HETROM_SIZE
%config end

%init INIT_MUTEKH_STARTUP
  desc Os startup
  flags calls
%init end

%init INIT_BOOTSTRAP
  desc Root init token for all startup operations which must be performed on the bootstrap cpu only
  during INIT_MUTEKH_STARTUP
%init end

%init INIT_START_CPUS
  desc Start non-bootstrap processors, must be provided in arch/ code.
  parent CONFIG_ARCH_SMP
  during INIT_BOOTSTRAP
  after INIT_SMP_STARTUP_BARRIER
  before INIT_SMP
  flags notempty
%init end

%init INIT_MEMORY
  desc Initialization of memory
  during INIT_BOOTSTRAP
%init end

%init INIT_MEMORY_SECTIONS
  desc Initialization of memory sections (zero .bss and initialize .data) if needed
  during INIT_MEMORY
%init end

%init INIT_SMP
  during INIT_MUTEKH_STARTUP
  desc Root init token for all startup operations which may be performed on multiple processors
  flags calls
%init end

%init INIT_CPUS
  desc Initialization of processors
  during INIT_SMP
%init end

%init INIT_LIBRARIES
  desc Initialization of mutekh libraries
  during INIT_SMP
  after INIT_CPUS
  after INIT_MUTEK_SCHEDULER_INIT
%init end

%init INIT_APPLICATION
  desc Call of the app_start function provided by the application
  during INIT_SMP
  after INIT_LIBRARIES
  function mutek_app_initsmp
%init end

