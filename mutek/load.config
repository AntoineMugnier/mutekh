
%config CONFIG_LOAD
  desc MutekH loading root meta token
  flags	mandatory internal root
  single CONFIG_LOAD_BOOTLOAD CONFIG_LOAD_ROM CONFIG_LOAD_CUSTOM
%config end


%config CONFIG_LOAD_EXCEPTIONS_SEPARATE
  desc The exception vectors are located in their own separate section.
  parent CONFIG_LOAD
  require CONFIG_LOAD_EXCEPTIONS_ADDR
  require CONFIG_LOAD_EXCEPTIONS_SIZE
  exclude CONFIG_LOAD_EXCEPTIONS_COPY
  when CONFIG_CPU_RESET_SEPARATE! CONFIG_LOAD_ROM
  when CONFIG_CPU_EXCEPTION_RELOCATABLE! CONFIG_LOAD_ROM
%config end

%config CONFIG_LOAD_EXCEPTIONS_COPY
  desc The exception vectors are copied from the kernel .text section to a separate location on start-up.
  parent CONFIG_LOAD
  require CONFIG_LOAD_EXCEPTIONS_ADDR
  require CONFIG_LOAD_EXCEPTIONS_SIZE
  exclude CONFIG_LOAD_EXCEPTIONS_SEPARATE
  when CONFIG_CPU_EXCEPTION_RELOCATABLE! CONFIG_LOAD_BOOTLOAD
%config end

%config CONFIG_LOAD_EXCEPTIONS_TEXT
  desc The exception vectors are located in the kernel .text section.
  parent CONFIG_LOAD
  exclude CONFIG_LOAD_EXCEPTIONS_SEPARATE
  when CONFIG_CPU_EXCEPTION_RELOCATABLE CONFIG_LOAD_BOOTLOAD
  when CONFIG_CPU_EXCEPTION_RELOCATABLE CONFIG_CPU_RESET_SEPARATE CONFIG_LOAD_ROM
%config end

%config CONFIG_LOAD_EXCEPTIONS_ADDR
  desc Address of the fixed exception base and associated code section.
  flags value
  parent CONFIG_LOAD
  default CONFIG_CPU_EXCEPTION_ADDR
%config end

%config CONFIG_LOAD_EXCEPTIONS_SIZE
  desc Size of the exception code section.
  flags value
  parent CONFIG_LOAD
  default CONFIG_CPU_EXCEPTION_SIZE
%config end

%init INIT_COPY_EXCEPTION_VECTORS
  parent CONFIG_MUTEK
  condition CONFIG_LOAD_EXCEPTIONS_COPY
  during INIT_MEMORY_SECTIONS
  function section_excep_init
%init end



%config CONFIG_LOAD_RESET_SEPARATE
  desc Create a separate section containing a reset vector.
  parent CONFIG_LOAD_ROM
  require CONFIG_CPU_RESET_ADDR
  require CONFIG_CPU_RESET_SIZE
  when CONFIG_CPU_RESET_SEPARATE
%config end

%config CONFIG_LOAD_SMP_RESET_MERGED
  desc The reset vector is the same for the bootstrap and non-bootstrap processors.
  desc No separate reset code is present in the output.
  parent CONFIG_LOAD
  depend CONFIG_ARCH_SMP
  when CONFIG_ARCH_SMP CONFIG_CPU_SMP_ALTERNATE_RESET! CONFIG_LOAD_ROM
%config end

%config CONFIG_LOAD_SMP_RESET_SEPARATE
  desc Creates a separate section containing the reset vector for non-bootstrap processors.
  parent CONFIG_LOAD
  depend CONFIG_ARCH_SMP
  require CONFIG_CPU_SMP_RESET_ADDR
  require CONFIG_CPU_SMP_RESET_SIZE
  when CONFIG_ARCH_SMP CONFIG_CPU_SMP_ALTERNATE_RESET CONFIG_ARCH_SMP_RESET_RELOCATABLE! CONFIG_LOAD_ROM
%config end

%config CONFIG_LOAD_SMP_RESET_COPY
  desc The reset code for non-bootstrap processors is copied from the kernel .text section to a separate location on start-up.
  parent CONFIG_LOAD
  depend CONFIG_ARCH_SMP
  require CONFIG_CPU_SMP_RESET_ADDR
  require CONFIG_CPU_SMP_RESET_SIZE
  when CONFIG_ARCH_SMP CONFIG_ARCH_SMP_RESET_RELOCATABLE! CONFIG_LOAD_BOOTLOAD
%config end

%config CONFIG_LOAD_SMP_RESET_TEXT
  desc The reset code for non-bootstrap processors is located in the kernel .text section.
  parent CONFIG_LOAD
  depend CONFIG_ARCH_SMP
  when CONFIG_ARCH_SMP CONFIG_CPU_SMP_ALTERNATE_RESET CONFIG_ARCH_SMP_RESET_RELOCATABLE CONFIG_LOAD_ROM
  when CONFIG_ARCH_SMP CONFIG_ARCH_SMP_RESET_RELOCATABLE CONFIG_LOAD_BOOTLOAD
  require CONFIG_CPU_SMP_RESET_ALIGN
%config end

%init INIT_COPY_SMP_RESET
  parent CONFIG_MUTEK
  condition CONFIG_LOAD_SMP_RESET_COPY
  during INIT_MEMORY_SECTIONS
  function section_smpreset_init
%init end



%config CONFIG_LOAD_ROM
  desc This token select ROM profile which must be used if MutekH will be stored in a read only memory.
  parent CONFIG_LOAD
  require CONFIG_LOAD_ROM_RO_ADDR
  require CONFIG_LOAD_ROM_RO_SIZE
  require CONFIG_LOAD_ROM_RW_ADDR
  require CONFIG_LOAD_ROM_RW_SIZE
  require CONFIG_CPU_RESET_ALIGN
  require CONFIG_CPU_RESET_ADDR
  require CONFIG_CPU_RESET_SIZE
  require CONFIG_CPU_EXCEPTION_ALIGN
  require CONFIG_CPU_EXCEPTION_ADDR
  require CONFIG_CPU_EXCEPTION_SIZE
  single CONFIG_LOAD_EXCEPTIONS_TEXT CONFIG_LOAD_EXCEPTIONS_SEPARATE CONFIG_LOAD_EXCEPTIONS_COPY
  require CONFIG_STARTUP_STACK_ADDR
  require CONFIG_STARTUP_STACK_SIZE
  require CONFIG_STARTUP_HEAP_SIZE
  flags harddep
%config end

%config CONFIG_LOAD_ROM_RO_ADDR
  desc This token specifies the start of the read-only address range used to store the MutekH binary.
  parent CONFIG_LOAD_ROM
  flags value
%config end

%config CONFIG_LOAD_ROM_RO_SIZE
  desc This token specifies the size of the read-only address range used to store the MutekH binary.
  parent CONFIG_LOAD_ROM
  flags value
%config end

%config CONFIG_LOAD_ROM_RW_ADDR
  desc This token specifies the start of the RAM address range reserved for .data and .bss sections.
  parent CONFIG_LOAD_ROM
  flags value
%config end

%config CONFIG_LOAD_ROM_RW_SIZE
  desc This token specifies the size of the RAM address range reserved for .data and .bss sections.
  parent CONFIG_LOAD_ROM
  flags value
%config end



%config CONFIG_LOAD_BOOTLOAD
  desc This token selects the bootloader profile which must be used if the MutekH binary will be loaded by an other piece of code.
  flags harddep
  parent CONFIG_LOAD
  require CONFIG_LOAD_BOOTLOAD_KERNEL_ADDR
  require CONFIG_LOAD_BOOTLOAD_KERNEL_SIZE
  require CONFIG_CPU_EXCEPTION_ALIGN
  require CONFIG_CPU_EXCEPTION_ADDR
  require CONFIG_CPU_EXCEPTION_SIZE
  single CONFIG_LOAD_EXCEPTIONS_TEXT CONFIG_LOAD_EXCEPTIONS_SEPARATE CONFIG_LOAD_EXCEPTIONS_COPY
  require CONFIG_STARTUP_STACK_ADDR
  require CONFIG_STARTUP_STACK_SIZE
  require CONFIG_STARTUP_HEAP_ADDR
  require CONFIG_STARTUP_HEAP_SIZE
%config end

%config CONFIG_LOAD_BOOTLOAD_KERNEL_ADDR
  desc This token specifies the load address of the kernel image.
  parent CONFIG_LOAD_BOOTLOAD
  flags value
%config end

%config CONFIG_LOAD_BOOTLOAD_KERNEL_SIZE
  desc This token specifies the maximum kernel image size.
  parent CONFIG_LOAD_BOOTLOAD
  flags value
%config end

%config CONFIG_LOAD_MULTIBOOT
  parent CONFIG_LOAD_BOOTLOAD
  desc A GNU multiboot header is included in the output file. This is required by some boot loaders like GNU Grub.
%config end

%config CONFIG_LOAD_MULTIBOOT_ELF
  desc The multiboot header do not contain the address fields, suitable when generating an ELF kernel only.
  parent CONFIG_LOAD_MULTIBOOT
  default defined
%config end



%config CONFIG_LOAD_CUSTOM
  desc This token select the custom load profile which must be used if a custom linker script is provided.
  parent CONFIG_LOAD
%config end

%config CONFIG_LOAD_HEXO_BOOTLOADER
  desc Use Hexo as bootloader with CPU-specific interface
  parent CONFIG_LOAD
%config end


%config CONFIG_STARTUP_STACK_ADDR
  desc This specifies the start address of the startup stack range for the boostrap processor.
  flags value
  parent CONFIG_LOAD
%config end

%config CONFIG_STARTUP_STACK_SIZE
  desc This specifies the size of the startup stack for the bootstrap processor.
  flags value maxval
  parent CONFIG_LOAD
  default 4096
%config end

%config CONFIG_STARTUP_HEAP_ADDR
  desc This specifies the start address of the initial heap memory.
  flags value
  parent CONFIG_LOAD
%config end

%config CONFIG_STARTUP_HEAP_SIZE
  desc This specifies the size of the initial heap memory.
  desc It can be set to 0 when CONFIG_LOAD_ROM is defined, in this case the heap is loacated after the bss section in the LOAD_ROM_RW region.
  flags value
  parent CONFIG_LOAD
%config end

