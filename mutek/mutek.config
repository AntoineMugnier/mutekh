
%config CONFIG_MUTEK
  desc MutekH kernel core
  module mutek Mutek
  flags mandatory
  single CONFIG_MUTEK_MEMALLOC_SIMPLE CONFIG_MUTEK_MEMALLOC_SMART
%config end

%init INIT_MUTEKH_STARTUP
  parent CONFIG_MUTEK
  desc Os startup
%init end

%init INIT_BOOTSTRAP
  parent CONFIG_MUTEK
  desc Root init token for all startup operations which must be performed on the bootstrap cpu only
  during INIT_MUTEKH_STARTUP
  flags calls
%init end

%init INIT_START_CPUS
  parent CONFIG_MUTEK
  desc Start non-bootstrap processors, must be provided in arch/ code.
  condition CONFIG_ARCH_SMP
  during INIT_BOOTSTRAP
  after INIT_SMP_STARTUP_BARRIER
  after INIT_DEVICE
  before INIT_SMP
  flags notempty
%init end

%init INIT_MEMORY
  parent CONFIG_MUTEK
  desc Initialization of memory
  during INIT_BOOTSTRAP
%init end

%init INIT_MEMORY_SECTIONS
  parent CONFIG_MUTEK
  desc Initialization of memory sections (zero .bss and initialize .data) if needed
  during INIT_MEMORY
%init end

%init INIT_COPY_DATA
  parent CONFIG_MUTEK
  condition CONFIG_LOAD_ROM
  during INIT_MEMORY_SECTIONS
  function section_data_init
%init end

%init INIT_ZERO_BSS
  parent CONFIG_MUTEK
  condition CONFIG_LOAD_ROM
  condition CONFIG_LOAD_BOOTLOAD
  during INIT_MEMORY_SECTIONS
  function section_bss_init
%init end

%init INIT_SMP
  parent CONFIG_MUTEK
  during INIT_MUTEKH_STARTUP
  desc Root init token for all startup operations which may be performed on multiple processors
  flags calls
%init end

%init INIT_CPUS
  parent CONFIG_MUTEK
  desc Initialization of processors
  during INIT_SMP
%init end

%init INIT_LIBRARIES
  parent CONFIG_MUTEK
  desc Initialization of mutekh libraries
  during INIT_SMP
  after INIT_CPUS
  after INIT_MUTEK_SCHEDULER_INIT
%init end

%config CONFIG_APP_START
  flags root
  desc Call the user defined @ref app_start function before the scheduler is started.
%config end

%config CONFIG_APP_START_SMP
  desc When this token is defined, all processors execute the @ref app_start function
  parent CONFIG_MUTEK
%config end

%init INIT_APP_START
  parent CONFIG_APP_START
  during INIT_SMP
  after INIT_LIBRARIES
  before INIT_MUTEK_SCHEDULER_START
  function mutek_app_initsmp
%init end



%init INIT_SMP_STARTUP_BARRIER
  parent CONFIG_MUTEK
  desc Initialize the spin-barrier primitive used to synchronize processors during smp startup
  condition CONFIG_ARCH_SMP
  during INIT_BOOTSTRAP
  after INIT_DEVICE       # we need to know the number of cpus
  function mutek_startup_barrier_init
%init end



%init INIT_MUTEK_FAULT_HANDLER
  parent CONFIG_MUTEK
  desc Setup a processor fault handler which
  during INIT_CPUS
  function mutek_fault_initsmp
%init end



%config CONFIG_MUTEK_CONSOLE
  desc Enable console based on a char device driver.
  depend CONFIG_DEVICE_CHAR
  parent CONFIG_MUTEK
  require CONFIG_MUTEK_CONSOLE_DEVICE_PATHS
%config end

%config CONFIG_MUTEK_CONSOLE_DEVICE_PATHS
  desc Specify the candidate console device paths in the device tree
  parent CONFIG_MUTEK_CONSOLE
  flags value
  default "console* uart* tty*"
%config end

%init INIT_MUTEK_CONSOLE
  parent CONFIG_MUTEK_CONSOLE
  desc Initialize the console_dev device accessor.
  during INIT_SMP
  after INIT_MUTEK_SCHEDULER_INIT
  before INIT_LIBRARIES
  function mutek_console_initsmp mutek_console_cleanupsmp
%init end



%config CONFIG_MUTEK_EARLY_CONSOLE
  desc Indicate early primitive text console is used at startup
  parent CONFIG_MUTEK
  flags meta
%config end

%init INIT_MUTEK_EARLY_CONSOLE
  parent CONFIG_MUTEK_EARLY_CONSOLE
  desc Setup a primitive console output as soon as data sections are setup
  during INIT_MEMORY
  after INIT_MEMORY_SECTIONS
  before INIT_MUTEK_MEMALLOC
  flags notempty
%init end

%config CONFIG_MUTEK_LOGO
  desc Add builtin MutekH logo bitmap to the kernel
  depend CONFIG_DEVICE_FB
  parent CONFIG_MUTEK
%config end

%config CONFIG_MUTEK_NUMA
  desc Support of non uniform memory access platform
  depend CONFIG_MUTEK_MEMALLOC_SMART
  parent CONFIG_MUTEK
%config end

%config CONFIG_MUTEK_PRINTK
  desc Provide printk() for kernel messages
  default defined
  parent CONFIG_MUTEK
  depend CONFIG_LIBC_FORMATTER_PRINTF
%config end

%config CONFIG_MUTEK_PRINTK_HEXDUMP
  desc Provide hexdumpk() for kernel diagnostic
  parent CONFIG_MUTEK_PRINTK
  depend CONFIG_LIBC_FORMATTER_HEXDUMP
%config end

%config CONFIG_MUTEK_PRINTK_LOCK
  desc Use spinlock to protect printk() calls and avoid output mess.
  desc May change code behavior and hide potential issues.
  parent CONFIG_MUTEK_PRINTK
%config end

%config CONFIG_MUTEK_PRINTK_KEEP_EARLY
  desc Instruct to keep using early console for printk once a legacy console driver is available
  parent CONFIG_MUTEK_PRINTK
  depend CONFIG_MUTEK_EARLY_CONSOLE
%config end

######################################################################
#		Vmem

%config CONFIG_VMEM
  desc Provide virtual memory support
  flags auto
  depend CONFIG_HEXO_MMU
  depend CONFIG_VMEM_PHYS_ALLOC
  depend CONFIG_VMEM_KERNEL_ALLOC
  exclude CONFIG_MUTEK_MEMALLOC_SIMPLE
  parent CONFIG_MUTEK
%config end

%config CONFIG_VMEM_PHYS_ALLOC
  desc Provide physical page allocator for virtual memory
  flags auto
  parent CONFIG_VMEM
%config end

%config CONFIG_VMEM_KERNEL_ALLOC
  desc Provide kernel virtual address space allocator
  flags auto
  parent CONFIG_VMEM
  depend CONFIG_HEXO_MMU
  depend CONFIG_VMEM_PHYS_ALLOC
%config end

######################################################################
#		Scheduler

%config CONFIG_MUTEK_SCHEDULER
  desc Hexo scheduler feature is enabled
  flags auto
  single  CONFIG_MUTEK_SCHEDULER_MIGRATION CONFIG_MUTEK_SCHEDULER_STATIC
  parent CONFIG_MUTEK
%config end

%init INIT_MUTEK_SCHEDULER_INIT
  parent CONFIG_MUTEK_SCHEDULER
  desc Initialization of scheduler
  during INIT_SMP
  after INIT_HEXO_MAIN_CONTEXT
  function mutek_scheduler_initsmp
%init end

%init INIT_MUTEK_SCHEDULER_START
  parent CONFIG_MUTEK_SCHEDULER
  desc Initialization of scheduler and first interrupts enable
  after INIT_LIBRARIES
  during INIT_SMP
  function mutek_scheduler_start
%init end

%config CONFIG_MUTEK_SCHEDULER_PREEMPT
  desc Scheduler preemptive context switch is triggered as a periodic event
  parent CONFIG_MUTEK_SCHEDULER
  depend CONFIG_DEVICE_TIMER
  depend CONFIG_HEXO_CONTEXT_PREEMPT
%config end

%config CONFIG_MUTEK_SCHEDULER_MIGRATION
  desc Scheduler algorithm use permanent context migration among available processors
#  when CONFIG_MUTEK_SCHEDULER CONFIG_MUTEK_SCHEDULER_STATIC!
  when CONFIG_MUTEK_SCHEDULER_STATIC!
  parent CONFIG_MUTEK_SCHEDULER
%config end

%config CONFIG_MUTEK_SCHEDULER_STATIC
  desc Scheduler algorithm use per cpu context list
  parent CONFIG_MUTEK_SCHEDULER
%config end

%config CONFIG_MUTEK_SCHEDULER_MIGRATION_AFFINITY
  desc Handle scheduler context cpu affininty in migration mode
  parent CONFIG_MUTEK_SCHEDULER_MIGRATION
  depend CONFIG_ARCH_SMP
%config end

%config CONFIG_MUTEK_SCHEDULER_CANDIDATE_FCN
  desc Enables sched_context_candidate_fcn(), uses an external function to check if a running thread must be selected
  parent CONFIG_MUTEK_SCHEDULER
%config end

%config CONFIG_MUTEK_RWLOCK
  flags auto
  parent CONFIG_MUTEK
  desc Provide read/write locks based on the mutek scheduler
  desc Mutek rwlocks functions are empty when the scheduler is disabled in the configuration.
%config end

%config CONFIG_MUTEK_SEMAPHORE
  flags auto
  parent CONFIG_MUTEK
  desc Provide generic semaphore on the mutek scheduler
  desc Mutek semaphore functions are empty when the scheduler is disabled in the configuration.
%config end

%config CONFIG_MUTEK_KROUTINE_SCHED_SWITCH
  desc Support deferred execution of kernel routine on next scheduler context switch
  parent CONFIG_MUTEK
  flags auto
  depend CONFIG_MUTEK_SCHEDULER
%config end

%config CONFIG_MUTEK_KROUTINE_IDLE
  desc Support deferred execution of kernel routine on processor idle state
  parent CONFIG_MUTEK
  flags auto
  depend CONFIG_MUTEK_SCHEDULER
%config end

%config CONFIG_MUTEK_KROUTINE_TRIGGER
  desc Support deferred execution of kernel routine on a function call trigger
  parent CONFIG_MUTEK
  flags auto
%config end

######################################################################
#		Memory allocator

%init INIT_MUTEK_MEMALLOC
  parent CONFIG_MUTEK
  desc Initialization of memory allocator
  during INIT_MEMORY
  after INIT_MEMORY_SECTIONS
  flags notempty
%init end

%config CONFIG_MUTEK_MEM_REGION
  desc Enable use of memory region handler.
  parent CONFIG_MUTEK
%config end

%init INIT_MUTEK_MEM_REGION
  parent CONFIG_MUTEK_MEM_REGION
  desc Init memory regions in arch/ code
  during INIT_BOOTSTRAP
  after INIT_DEVICE_ENUM
  before INIT_DEVICE_DRIVERS
%init end

%config CONFIG_MUTEK_MEMALLOC_SIMPLE
  desc Enable use of simple memory allocation algorithm.
  desc Incremental memory allocation without freeing.
  parent CONFIG_MUTEK
%config end

%config CONFIG_MUTEK_MEMALLOC_SMART
  desc Enable use of memory allocation algorithm.
  when CONFIG_MUTEK_MEMALLOC_SIMPLE!
  single CONFIG_MUTEK_MEMALLOC_ALGO_FIRSTFIT CONFIG_MUTEK_MEMALLOC_ALGO_BESTFIT
  parent CONFIG_MUTEK
%config end

%config CONFIG_MUTEK_MEMALLOC_ALGO_FIRSTFIT
  desc select memory allocation algorithm first fit
  parent CONFIG_MUTEK_MEMALLOC_SMART
  default defined
%config end

%config CONFIG_MUTEK_MEMALLOC_ALGO_BESTFIT
  desc select memory allocation algorithm best fit
  parent CONFIG_MUTEK_MEMALLOC_SMART
%config end

%config CONFIG_MUTEK_MEMALLOC_ALIGN
  desc Memory allocation block address alignment
  flags value
  default 0x20
  parent CONFIG_MUTEK
%config end

%config CONFIG_MUTEK_MEMALLOC_SCRAMBLE
  desc When enabled all allocated and freed memory blocks will filled be with 0x5a and 0xa5 bytes
  desc Checks are performed when allocating or resizing a memory block to ensure free blocks have not been overwritten.
  desc The mem_check and memory_allocator_region_check functions can be used to check the whole chain of blocks.
  when CONFIG_DEBUG
  parent CONFIG_MUTEK
%config end

%config CONFIG_MUTEK_MEMALLOC_SCRAMBLE_CHECK
  desc Specify the amount of bytes at start and and of free memory blocks which are checked to contain 0xa5 bytes.
  desc If this value is set to 0, no checks are performed.
  parent CONFIG_MUTEK_MEMALLOC_SCRAMBLE
  flags value
  default 64
%config end

%config CONFIG_MUTEK_MEMALLOC_STATS
  desc keep stats about allocated blocks count and size
  depend CONFIG_MUTEK_MEMALLOC_SMART
  parent CONFIG_MUTEK
%config end

%config CONFIG_MUTEK_MEMALLOC_CRC
  desc When enabled all memory block headers will include a CRC32.
  desc CRC checks are performed when calling memory allocator functions.
  desc The mem_check and memory_allocator_region_check functions can be used to check the whole chain of blocks.
  depend CONFIG_MUTEK_MEMALLOC_SMART
  when CONFIG_DEBUG
  depend CONFIG_LIBCRYPTO_CRC32
  parent CONFIG_MUTEK
%config end

%config CONFIG_MUTEK_MEMALLOC_GUARD
  desc Add a guard zone before and after each allocated block. These two zones are filled with 0x55 an 0xaa bytes.
  desc Checks are performed when freeing or resizing a memory block to ensure the guard zones have not been overwritten.
  desc The mem_check and memory_allocator_region_check functions can be used to check the whole chain of blocks.
  depend CONFIG_MUTEK_MEMALLOC_SMART
  when CONFIG_DEBUG
  suggest CONFIG_MUTEK_MEMALLOC_ALIGN=1
  require CONFIG_MUTEK_MEMALLOC_GUARD_SIZE
  parent CONFIG_MUTEK
%config end

%config CONFIG_MUTEK_MEMALLOC_GUARD_SIZE
  desc Memory allocation debug guard zone size in bytes.
  flags value
  parent CONFIG_MUTEK_MEMALLOC_GUARD
  default 128
%config end

%config CONFIG_MUTEK_MEMALLOC_GUARD_INSTRUMENT
  desc Automatically check guard zone on all function calls and returns.
  parent CONFIG_MUTEK_MEMALLOC_GUARD
  depend CONFIG_COMPILE_INSTRUMENT
  parent CONFIG_MUTEK
%config end

###################################################################
# Slab allocator

%config CONFIG_MUTEK_SLAB
  desc Enable use of slab allocator.
  parent CONFIG_MUTEK
%config end

%config CONFIG_MUTEK_SLAB_GLOBAL
  desc Enable slab global list for sharing slab.
  parent CONFIG_MUTEK_SLAB
  default undefined 
%config end

%config CONFIG_MUTEK_SLAB_NAME
  desc Slab can be named.
  parent CONFIG_MUTEK_SLAB
  default undefined 
%config end

######################################################################
# Bytecode

%config CONFIG_MUTEK_BYTECODE
  desc Enable the mutekh customizable bytecode interpreter.
  flags auto
  parent CONFIG_MUTEK
%config end

%config CONFIG_MUTEK_BYTECODE_CHECKING
  desc Enable bytecode checks at execution.
  desc When this option is disabled, the bytecode may crash the system.
  parent CONFIG_MUTEK_BYTECODE
%config end

%config CONFIG_MUTEK_BYTECODE_DEBUG
  desc Enable verbose bytecode error reporting.
  parent CONFIG_MUTEK_BYTECODE
%config end

%config CONFIG_MUTEK_BYTECODE_TRACE
  desc Enable verbose bytecode execution.
  parent CONFIG_MUTEK_BYTECODE
  depend CONFIG_MUTEK_BYTECODE_DEBUG
%config end

