
%config CONFIG_CPU_SMP_CAPABLE
  parent CONFIG_CPU_META
  desc Processor instruction set and other features allow use in multiprocessors systems
  flags meta
%config end

%config CONFIG_CPU_CACHE
  parent CONFIG_CPU_META
  desc Processors uses cache
  flags meta
%config end

%config CONFIG_CPU_CACHE_LINE
  parent CONFIG_CPU_META
  desc Size of a single cpu cache line in bytes
  flags internal value
%config end

%config CONFIG_CPU_CACHE_COHERENCY
  parent CONFIG_CPU_META
  desc Processors supports cache coherency mechanism
  flags meta
%config end

%config CONFIG_CPU_EXCEPTION_ALIGN
  parent CONFIG_CPU_META
  desc Processor alignment of exception base address, relevant when the processor supports relocating this address.
  flags internal value
%config end

%config CONFIG_CPU_EXCEPTION_ADDR
  parent CONFIG_CPU_META
  desc This specifies the processor exception base address.
  desc This can be the fixed address or the default address when relocatable.
  flags value
%config end

%config CONFIG_CPU_EXCEPTION_SIZE
  parent CONFIG_CPU_META
  desc This token specifies the size of the processor exception vectors.
  flags internal value
%config end

%config CONFIG_CPU_EXCEPTION_RELOCATABLE
  parent CONFIG_CPU_META
  desc This token is defined if the exception base address can be configured at runtime.
  flags meta
%config end

%config CONFIG_CPU_RESET_ALIGN
  parent CONFIG_CPU_META
  desc Processor reset vector alignment constraint, relevant for non-bootstrap processors in SMP systems.
  flags internal value
  default 16
%config end

%config CONFIG_CPU_RESET_ADDR
  parent CONFIG_CPU_META
  desc Processor reset vector address
  flags value
%config end

%config CONFIG_CPU_RESET_SIZE
  parent CONFIG_CPU_META
  desc Processors reset vector section size.
  flags internal value
%config end

%config CONFIG_CPU_RESET_SEPARATE
  desc This token is defined if the processor reset vector is not located in the exception vectors table.
  parent CONFIG_CPU_META
  flags meta
%config end

%config CONFIG_CPU_SMP_ALTERNATE_RESET
  desc This token is defined if the reset code needs to be different for non-bootstrap processors.
  parent CONFIG_CPU_META
  flags meta
%config end

%config CONFIG_CPU_SMP_RESET_ALIGN
  parent CONFIG_CPU_META
  desc Non-bootstrap processors reset vector alignment constraint.
  flags value
  default CONFIG_CPU_RESET_ALIGN
%config end

%config CONFIG_CPU_SMP_RESET_ADDR
  parent CONFIG_CPU_META
  desc Non-bootstrap processors reset vector address.
  flags value
  default CONFIG_CPU_RESET_ADDR
%config end

%config CONFIG_CPU_SMP_RESET_SIZE
  parent CONFIG_CPU_META
  desc Non-bootstrap processors reset vector section size.
  flags value
  default CONFIG_CPU_RESET_SIZE
%config end

%config CONFIG_CPU_ENDIAN_BIG
  parent CONFIG_CPU_META
  desc Processor is big endian
  flags meta
%config end

%config CONFIG_CPU_ENDIAN_LITTLE
  parent CONFIG_CPU_META
  desc Processor is little endian
  flags meta
%config end

%config CONFIG_CPU_NONALIGNED_ACCESS
  parent CONFIG_CPU_META
  desc Non-aligned memory access are supported by processor without special handling
  flags meta
%config end

%config CONFIG_CPU_WAIT_IRQ
  parent CONFIG_CPU_META
  desc The processor has a wait for interrupts instruction available
  flags meta
%config end

%config CONFIG_CPU_META
  desc	meta configuration token used to impose requirements
  flags	mandatory internal root
  require CONFIG_CPU_NAME
  require CONFIG_CPU_ARCHNAME
  single CONFIG_CPU_X86 CONFIG_CPU_X86_EMU CONFIG_CPU_X86_64_EMU CONFIG_CPU_MIPS CONFIG_CPU_AVR CONFIG_CPU_ARM CONFIG_CPU_PPC CONFIG_CPU_NIOS2 CONFIG_CPU_SPARC CONFIG_CPU_LM32 CONFIG_CPU_AVR32
  single CONFIG_CPU_ENDIAN_BIG CONFIG_CPU_ENDIAN_LITTLE

%config end

# Makefile variable

%config CONFIG_CPU_NAME
  parent CONFIG_CPU_META
  desc Processor model name configuration token
  flags	internal value
%config end

%config CONFIG_CPU_ARCHNAME
  parent CONFIG_CPU_META
  desc Processor architecture name configuration token
  flags	internal value
%config end

