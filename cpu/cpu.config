
%config CONFIG_CPU_SMP_CAPABLE
  parent CONFIG_CPU
  desc Processor instruction set and other features allow use in multiprocessors systems
  flags meta
%config end

%config CONFIG_CPU_CACHE
  parent CONFIG_CPU
  desc Processors uses cache
  flags meta
%config end

%config CONFIG_CPU_CACHE_LINE
  parent CONFIG_CPU
  desc Size of a single cpu cache line in bytes
  flags internal value
%config end

%config CONFIG_CPU_CACHE_COHERENCY
  parent CONFIG_CPU
  desc Processors supports cache coherency mechanism
  flags meta
%config end

%config CONFIG_CPU_EXCEPTION_ALIGN
  parent CONFIG_CPU
  desc Processor alignment of exception base address, relevant when the processor supports relocating this address.
  flags internal value
%config end

%config CONFIG_CPU_EXCEPTION_ADDR
  parent CONFIG_CPU
  desc This specifies the processor exception base address.
  desc This can be the fixed address or the default address when relocatable.
  flags value
%config end

%config CONFIG_CPU_EXCEPTION_SIZE
  parent CONFIG_CPU
  desc This token specifies the size of the processor exception vectors.
  flags internal value
%config end

%config CONFIG_CPU_EXCEPTION_RELOCATABLE
  parent CONFIG_CPU
  desc This token is defined if the exception base address can be configured at runtime.
  flags meta
%config end

%config CONFIG_CPU_RESET_ALIGN
  parent CONFIG_CPU
  desc Processor reset vector alignment constraint, relevant for non-bootstrap processors in SMP systems.
  flags internal value
  default 16
%config end

%config CONFIG_CPU_RESET_ADDR
  parent CONFIG_CPU
  desc Processor reset vector address
  flags value
%config end

%config CONFIG_CPU_RESET_SIZE
  parent CONFIG_CPU
  desc Processors reset vector section size.
  flags internal value
%config end

%config CONFIG_CPU_RESET_SEPARATE
  desc This token is defined if the processor reset vector is not located in the exception vectors table.
  parent CONFIG_CPU
  flags meta
%config end

%config CONFIG_CPU_SMP_ALTERNATE_RESET
  desc This token is defined if the reset code needs to be different for non-bootstrap processors.
  parent CONFIG_CPU
  flags meta
%config end

%config CONFIG_CPU_SMP_RESET_ALIGN
  parent CONFIG_CPU
  desc Non-bootstrap processors reset vector alignment constraint.
  flags value
  default CONFIG_CPU_RESET_ALIGN
%config end

%config CONFIG_CPU_SMP_RESET_ADDR
  parent CONFIG_CPU
  desc Non-bootstrap processors reset vector address.
  flags value
  default CONFIG_CPU_RESET_ADDR
%config end

%config CONFIG_CPU_SMP_RESET_SIZE
  parent CONFIG_CPU
  desc Non-bootstrap processors reset vector section size.
  flags value
  default CONFIG_CPU_RESET_SIZE
%config end

%config CONFIG_CPU_ENDIAN_BIG
  parent CONFIG_CPU
  desc Processor is big endian
  flags meta
%config end

%config CONFIG_CPU_ENDIAN_LITTLE
  parent CONFIG_CPU
  desc Processor is little endian
  flags meta
%config end

%config CONFIG_CPU_NONALIGNED_ACCESS
  parent CONFIG_CPU
  desc Bitfield of access widths (in bytes) CPU supports natively.
  desc This should be defined only for access sizes that are
  desc supported for both reading and writing, whatever the instruction
  desc the compiler generates.  Some CPUs may support unaliged accesses
  desc for some instructions only.  They should not provide this flag
  desc and should provide an assembly routine instead.
  flags value minval internal
%config end

%config CONFIG_CPU_INT64_ALIGN
  parent CONFIG_CPU
  desc Specifies the byte alignment used for int64_t and uint64_t integer types
  default 8
  flags value
%config end

%config CONFIG_CPU_HARDWARE_MUL
  parent CONFIG_CPU
  desc Specifies the maximum size in bits of the output values supported by the processor hardware multiplier
  flags value maxval
  default 0
%config end

%config CONFIG_CPU_HARDWARE_DIVMOD
  parent CONFIG_CPU
  desc Specifies the maximum size in bits of the input values supported by the processor hardware divider
  flags value maxval
  default 0
%config end

%config CONFIG_CPU_WAIT_IRQ
  parent CONFIG_CPU
  desc The processor has a wait for interrupts instruction available
  flags meta
%config end

%config CONFIG_CPU_META
  desc	meta configuration token used to impose requirements
  flags meta single
  parent CONFIG_CPU
%config end

%config CONFIG_CPU
  desc	Processor support root token
  flags	mandatory internal root
  require CONFIG_CPU_NAME
  require CONFIG_CPU_ARCHNAME
  require CONFIG_CPU_NONALIGNED_ACCESS
  depend CONFIG_CPU_META
  single CONFIG_CPU_ENDIAN_BIG CONFIG_CPU_ENDIAN_LITTLE
%config end

# Makefile variable

%config CONFIG_CPU_NAME
  parent CONFIG_CPU
  desc Processor model name configuration token
  flags	internal value
%config end

%config CONFIG_CPU_ARCHNAME
  parent CONFIG_CPU
  desc Processor architecture name configuration token
  flags	internal value
%config end

%config CONFIG_CPU_NATIVE_BYTECODE
  parent CONFIG_CPU
  desc A backend which compiles bytecode to native code is available for this processor
  flags meta
%config end

